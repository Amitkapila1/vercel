{"version":3,"file":"default-node_modules_angular_flex-layout_fesm2020_angular-flex-layout_mjs.js","mappings":";;;;;;;;AAmBA,WAA0BA,GACtB,QAASC,KAAOD,EAAQ,OACpB,IAAIE,EAAK,UAAGF,EAAOC,UAAV,QAAkB,GAC3B,OAAQA,OACC,UAEGD,EAAOG,QADG,SAAVD,EACoB,CAChB,eACA,QAGW,gBAAdE,EACmB,CAChB,sBACA,eAIgBF,EAExB,UACC,kBACA,iBACA,oBACA,WACA,iBACA,gBACA,gBACA,kBACA,gBACA,kBACDF,EAAO,WAAaC,GAAOC,EAC3B,UACC,iBACDF,EAAO,0BAA4BE,EACnCF,EAAO,kBAAoBE,EAC3B,UACC,QACDF,EAAOK,MAAWL,EAAO,WAAaC,GAAOK,OAAOJ,GAAS,IAAMA,EAG9E,CACD,OAAOF,CACV;;;;;;;+DASD,MAAMO,EAAS,SACTC,EAAgB,CAAC,MAAO,SAAU,cAAe,kBAIvD,WAAwBN,GACpB,IAAKO,EAAWC,EAAMC,GAAYC,EAAcV,GAChD,OA4DJ,WAAkBO,EAAWC,EAAO,KAAMG,GAAS,GAC/C,MAAO,CACHV,QAASU,EAAS,cAAgB,OAClC,aAAc,aACd,iBAAkBJ,EAClB,YAAaC,GAAQ,KAE5B;;;;;;;OAnEUI,CAASL,EAAWC,EAAMC,EACpC,CAKD,WAAuBT,GAAO,QAC1BA,EAAK,oBAAGA,SAAH,aAAGa,EAAOC,qBAAV,QAA2B,GAChC,IAAKP,EAAWC,EAAMG,IAAUX,EAAMe,MAAM,KAE5C,OAAKT,EAAcU,KAAKC,GAAKA,IAAMV,KAC/BA,EAAYD,EAAc,IAE1BE,IAASH,IACTG,EAAQG,KAAWN,EAAUM,GAAS,GACtCA,GAASN,GAEN,CAACE,EAAWW,EAAkBV,KAASG,GACjD,CAKD,WAA0BX,GACtB,IAAKmB,GAAST,EAAcV,GAC5B,OAAOmB,EAAKC,QAAQ,QAAS,CAChC,CAID,WAA2BpB,GACvB,GAAMA,EACF,OAAQA,EAAMc,eAAN,IACC,cACA,mBACA,eACDd,EAAQ,eACR,UACC,SACA,WACA,SACDA,EAAQ,SACR,cAGAA,EAAQ,OAIpB,OAAOA,CACV,CAiCD,YAAsBqB,KAASC,GAC3B,GAAY,MAARD,EACA,MAAME,UAAU,8CAEpB,QAASC,KAAUF,EACf,GAAc,MAAVE,EACA,QAASzB,KAAOyB,EACRA,EAAOC,eAAe1B,KACtBsB,EAAKtB,GAAOyB,EAAOzB,IAKnC,OAAOsB,CACV;;;;;;;OAAA;;;;;;;OCzID,MAAMK,GAAmB,CACrBC,QAASC,KACTC,WArBJ,YAAsBC,EAAWC,GAC7B,MAAO,KACH,IAAIC,QAAkBD,GAAa,CAC/B,MAAME,EAAWC,MAAMC,KAAKL,EAAUM,iBAAkB,WAAUC,QAK5DC,EAAa,uBACnBL,EAASM,QAAQC,IACbA,EAAGC,UAAUC,SAAU,GAAEL,UAAoBG,EAAGG,WAC5CH,EAAGG,WAAWC,YAAYJ,GAAMA,EAAGK,UAAUC,QAAQR,EAAY,GAAjC,EAE3C,EAER,EAOGS,KAAM,CAACC,KAAUC,OACjBC,OAAO,GAELb,GAAa;;;;;;;OAcnB,MAAMc,GAENA,EAAWC,UAAX,0BAAuGD,EAAvG,EACAA,EAAWE,UADkFC,MAC7F,MAAwGH,IACxGA,EAAWI,UAFkFD,MAE7F,WAA+H,CAAC5B,MAWhI,MAAM8B,EAQFC,YAAYC,GAAU,EAAOC,EAAa,MAAOC,EAAU,GAAIC,EAAS,GAAIC,EAAW,GACnFC,KAAKL,QAAUA,EACfK,KAAKJ,WAAaA,EAClBI,KAAKH,QAAUA,EACfG,KAAKF,OAASA,EACdE,KAAKD,SAAWA,EAChBC,KAAKC,SAAW,EACnB,CAEDC,QACI,OAAO,IAAIT,EAAYO,KAAKL,QAASK,KAAKJ,WAAYI,KAAKH,QAASG,KAAKF,OAC5E;;;;;;;OAgBL,MAAMK,GACFT,cACIM,KAAKI,WAAa,IAAIC,GACzB,CAIDC,kBAAkBC,EAASC,EAAOvE,GAC9B,MAAMmE,EAAaJ,KAAKI,WAAWK,IAAIF,GACnCH,EACAA,EAAWM,IAAIF,EAAOvE,GAGtB+D,KAAKI,WAAWM,IAAIH,EAAS,IAAIF,IAAI,CAAC,CAACG,EAAOvE,KAErD,CAID0E,cACIX,KAAKI,WAAWQ,OACnB,CAIDC,mBAAmBpC,EAAIqC,GACnB,MAAMC,EAASf,KAAKI,WAAWK,IAAIhC,GACnC,IAAIxC,EAAQ,GACZ,GAAI8E,EAAQ,CACR,MAAMP,EAAQO,EAAON,IAAIK,IACJ,iBAAVN,GAAuC,iBAAVA,KACpCvE,EAAQuE,EAAQ,GAEvB,CACD,OAAOvE,CACV,EAELkE,GAAcd,UAAd,0BAA0Gc,GAA1G,EACAA,GAAca,WAtF+EzB,MAsF7F,OAA8GY,GAA9Gc,QAA8Gd,GAA9G,qBAAyI;;;;;;;;;;;;;;;AAqBzI,MAAMe,GAAiB,CACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,EACnBC,uBAAuB,EACvBC,cAAc,EACdC,oBAAoB,EACpBC,qBAAsB,GACtBC,yBAAyB,EACzBC,sBAAuB,GAIvBC,gBAAYC,EACZC,YAAa,KACbC,qBAAqB,GAEnBC,GAAgB,IAAIC,MAAe,oDAAqD,CAC1FC,WAAY,OACZjB,QAAS,IAAMC,KAgBbiB,EAAe,IAAIF,MAAe,yBAA0B,CAC9DC,WAAY,OACZjB,QAAS,KAAM,IAUbmB,EAAa,IAAIH,MAAe,+DAAgE,CAClGC,WAAY,OACZjB,QAAS,IAAM;;;;;;;;;;;;;;;;;;;;;;AAsBnB,YAAoB3D,EAAMG,GAAQ,QAC9BH,SAAI,oBAAGA,SAAH,aAAG+E,EAAMnC,eAAT,QAAoB,IAAIT,EACxBhC,IACAH,EAAKuC,QAAUpC,EAAO6E,MACtBhF,EAAKsC,WAAanC,EAAOmC,WACzBtC,EAAKwC,OAASrC,EAAOqC,OACrBxC,EAAKyC,SAAWtC,EAAOsC,UAEpBzC,CACV,CAGD,MAAMiF,GACF7C,cAEIM,KAAKwC,aAAc,CACtB,CAMDC,WAAWC,EAAQC,EAASC,GAC3B;;;;;;;OAUL,MAAMC,EACFnD,YAAYoD,EAAmBC,EAAqBC,EAAaC,GAC7DjD,KAAK8C,kBAAoBA,EACzB9C,KAAK+C,oBAAsBA,EAC3B/C,KAAKgD,YAAcA,EACnBhD,KAAKiD,aAAeA,CACvB,CAIDC,oBAAoB3C,EAASC,EAAOvE,EAAQ,MACxC,IAAI8E,EAAS,GACQ,iBAAVP,IACPO,EAAOP,GAASvE,EAChBuE,EAAQO,GAEZA,EAASf,KAAKiD,aAAa3B,sBAAwBd,GAAQ2C,QAAiB3C,GAC5ER,KAAKoD,+BAA+BrC,EAAQR,EAC/C,CAID8C,qBAAqB7C,EAAOtC,EAAW,IACnC,MAAM6C,EAASf,KAAKiD,aAAa3B,sBAAwBd,GAAQ2C,QAAiB3C,GAClFtC,EAASM,QAAQC,IACbuB,KAAKoD,+BAA+BrC,EAAQtC,EAA5C,EAEP,CAMD6E,iBAAiBvH,GACb,MAAMwH,EAAQ,iBACd,IAAItH,EAAQ+D,KAAKwD,YAAYzH,EAAQwH,GAGrC,MAAO,CAACtH,GAAS,MAFM+D,KAAKyD,kBAAkB1H,EAAQwH,KACjDG,QAAiB1D,KAAKgD,cAAgBhD,KAAK+C,oBAAuB9G,EAAQ,GAElF,CACD0H,QAAQ5H,GAEJ,MAA2C,SAApCiE,KAAKwD,YAAYzH,EADV,YAEjB,CAID6H,qBAAqBrD,EAASsD,GAAW,MACrC,iBAAOtD,EAAQuD,aAAaD,UAA5B,QAA0C,EAC7C,CAIDJ,kBAAkBlD,EAASO,GACvB,OAAO7C,QAAkB+B,KAAKgD,aAC1BzC,EAAQC,MAAMuD,iBAAiBjD,GAiE3C,YAAwBP,EAASO,GAAW,MAExC,iBAAOkD,GAD6BzD,GACpBO,UAAhB,QAA8B,EACjC,CApEuDmD,CAAe1D,EAASO,EAC3E,CAKD0C,YAAYjD,EAASO,EAAWoD,GAAa,GACzC,IAAIjI,EAAQ,GACZ,OAAIsE,KACqBtE,EAAQ+D,KAAKyD,kBAAkBlD,EAASO,OAErD7C,QAAkB+B,KAAKgD,aAClBkB,IACDjI,EAAQkI,iBAAiB5D,GAASwD,iBAAiBjD,IAInDd,KAAK+C,sBACL9G,EAAQ+D,KAAK8C,kBAAkBjC,mBAAmBN,EAASO,MAOpE7E,EAAQA,EAAMmI,OAAS,EACjC,CAMDhB,+BAA+BrC,EAAQR,GACnC8D,OAAOC,KAAKvD,GAAQwD,OAAO/F,QAAQxC,IAC/B,MAAMyC,EAAKsC,EAAO/E,GACZwI,EAASrG,MAAMsG,QAAQhG,GAAMA,EAAK,CAACA,GACzC+F,EAAOD,OACP,QAAStI,KAASuI,EACdvI,EAAQA,EAAQA,EAAQ,GAAK,IAC7B,EAAIgC,MAAkB+B,KAAKgD,eAAiBhD,KAAK+C,qBAC7C9E,QAAkB+B,KAAKgD,aACnBzC,EAAQC,MAAMkE,YAAY1I,EAAKC,GAAS0I,EAAepE,EAASvE,EAAKC,GAGzE+D,KAAK8C,kBAAkBxC,kBAAkBC,EAASvE,EAAKC,EAAvD,EAIf,EAqBL,WAAwBsE,EAASO,EAAW8D,GACxC9D,EAAYA,EAAU/B,QAAQ,kBAAmB,SAAShC,cAC1D,MAAMiH,EAAWa,GAAmBtE,GACpCyD,EAASlD,GAAa8D,GAAc,GAGxC,YAA6BrE,EAASyD,GAClC,IAAIc,EAAiB,GACrB,UAAW9I,KAAOgI,EAEVe,EADsB/I,KAEtB8I,GAAmB,GAAE9I,KAAOgI,EAAShI,OAG7CuE,EAAQyE,aAAa,QAASF,EACjC,CAXGG,CAAoB1E,EAASyD,EAChC,CAWD,YAA4BzD,GACxB,MAAMyD,EAAW,GACXkB,EAAiB3E,EAAQuD,aAAa,SAC5C,GAAIoB,EAAgB,CAChB,MAAMC,EAAYD,EAAelI,MAAM,OACvC,QAASoI,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IAAK,CACvC,MAAM5E,EAAQ2E,EAAUC,GAAGhB,OAC3B,GAAI5D,EAAM6E,OAAS,EAAG,CAClB,MAAMC,EAAa9E,EAAMnD,QAAQ,KACjC,IAAmB,IAAfiI,EACA,MAAM,IAAIC,MAAO,sBAAqB/E,KAG1CwD,EADaxD,EAAMgF,OAAO,EAAGF,GAAYlB,QACxB5D,EAAMgF,OAAOF,EAAa,GAAGlB,MACjD,CACJ,CACJ,CACD,OAAOJ,CACV;;;;;;;OAUD,WAAgCyB,EAAGC,GAC/B,MAAMC,EAAYF,GAAIA,EAAE1F,UAAY,EAEpC,OADkB2F,GAAIA,EAAE3F,UAAY,GACjB4F,CACtB,CAED,WAA+BF,EAAGC,GAG9B,OAFWD,EAAE1F,UAAY,IACd2F,EAAE3F,UAAY,EAE5B;;;;;;;OAzED8C,EAAWxD,UAAX,0BAAuGwD,GA5TVtD,MA4TsCY,IA5TtCZ,MA4TgE4C,GA5ThE5C,MA4TyFL,OA5TzFK,MA4TiHyC,IAA9M,EACAa,EAAW7B,WA7TkFzB,MA6T7F,OAA2GsD,EAA3G5B,QAA2G4B,EAA3G,qBAAmI,SAwFnI,MAAM+C,EACFlG,YAAYmG,EAAO7C,EAAajF,GAC5BiC,KAAK6F,MAAQA,EACb7F,KAAKgD,YAAcA,EACnBhD,KAAKjC,UAAYA,EAEjBiC,KAAKvC,OAAS,IAAIqI,IAAgB,IAAIrG,GAAY,IAClDO,KAAK+F,SAAW,IAAI1F,IACpBL,KAAKgG,yBAA2B,GAChChG,KAAKiG,aAAejG,KAAKvC,OAAOyI,cACnC,CAIGC,kBACA,MAAMC,EAAU,GAChB,YAAKL,SAASvH,QAAQ,CAAC6H,EAAKrK,KACpBqK,EAAI1G,SACJyG,EAAQE,KAAKtK,EAAb,GAGDoK,CACV,CAIDG,SAAS3G,GAAY,MAEjB,iBADYI,KAAK+F,SAAStF,IAAIb,IAClBD,eAAZ,QAAuBK,KAAKwG,cAAc5G,GAAY6G,KAAKC,GAAKA,EAAE/G,QACrE,CAUDgH,QAAQC,EAAQC,GAAe,GAC3B,GAAID,GAAUA,EAAOvB,OAAQ,CACzB,MAAMyB,EAAc9G,KAAKiG,aAAac,MAAKC,OAAQC,IAAWC,GAAwBN,EAAOvJ,QAAQ4J,EAAOrH,aAAc,IACpHuH,EAAgB,IAAIC,IAAYC,IAClC,MAAM1H,EAAUK,KAAKwG,cAAcI,GACnC,GAAIjH,EAAQ0F,OAAQ,CAChB,MAAMiC,EAAa3H,EAAQ4H,MAC3B5H,EAAQnB,QAAS0I,IACbG,EAASG,KAAKN,EAAd,GAEJlH,KAAKvC,OAAO+J,KAAKF,EACpB,CACDD,EAASI,UAAT,GAEJ,OAAOC,OAAMP,EAAeL,EAC/B,CACD,OAAO9G,KAAKiG,YACf,CAKDO,cAAc5G,GACV,MAAM+H,EAAOxJ,MAAMsG,QAAQ7E,GAAcA,EAAa,CAACA,GACjDD,EAAU,GAChBiI,OAwDR,WAAuBC,EAAc9J,GACjC,MAAM4J,EAAOE,EAAab,OAAOc,IAAOC,EAAWD,IACnD,GAAIH,EAAKtC,OAAS,EAAG,CACjB,MAAM9B,EAAQoE,EAAKK,KAAK,MACxB,IACI,MAAMC,EAAUlK,EAAUmK,cAAc,SAExC,GADAD,EAAQjD,aAAa,OAAQ,aACxBiD,EAAQE,WAAY,CACrB,MAAMC,EAAW,2IAKxB7E,0BAEO0E,EAAQI,YAAYtK,EAAUuK,eAAeF,GAChD,CACDrK,EAAUwK,KAAKF,YAAYJ,GAE3BN,EAAKnJ,QAAQgK,GAAMT,EAAWS,GAAMP,EAIvC,CAHA,MACMf,GACHuB,QAAQC,MAAMxB,EACjB,CACJ,CACJ,CAjFOU,CAAcD,EAAM3H,KAAKjC,WACzB4J,EAAKnJ,QAAS+E,IACV,MAAMoF,EAAczB,IAChBlH,KAAK6F,MAAM+C,IAAI,IAAM5I,KAAKvC,OAAO+J,KAAK,IAAI/H,EAAYyH,EAAEvH,QAAS4D,IAAjE,EAEJ,IAAI8C,EAAMrG,KAAK+F,SAAStF,IAAI8C,GACvB8C,IACDA,EAAMrG,KAAK6I,SAAStF,GACpB8C,EAAIyC,YAAYH,GAChB3I,KAAKgG,yBAAyBM,KAAK,IAAMD,EAAI0C,eAAeJ,IAC5D3I,KAAK+F,SAASrF,IAAI6C,EAAO8C,IAEzBA,EAAI1G,SACJA,EAAQ2G,KAAK,IAAI7G,GAAY,EAAM8D,GAAnC,GAGD5D,CACV,CACDqJ,cACI,IAAIC,EACJ,KAAOA,EAAKjJ,KAAKgG,yBAAyBuB,OACtC0B,GAEP,CAKDJ,SAAStF,GACL,OAqDR,WAAsBA,EAAO2F,GAEzB,OAAOC,GAD0BC,OAAOC,WAAW,OAAOP,YACvCM,OAAOC,WAAW9F,GAAS,CAC1C5D,QAAmB,QAAV4D,GAA6B,KAAVA,EAC5B+F,MAAO/F,EACPuF,YAAa,OAEbC,eAAgB,OAEhBQ,SAAU,KACVC,mBACC,EACDC,sBACC,EACDC,mBACW,EAGlB,CAvEcC,CAAapG,GAAOtF,QAAkB+B,KAAKgD,aACrD,EAEL4C,EAAWvG,UAAX,0BAAuGuG,GArfVrG,MAqfsCA,OArftCA,MAqf4DL,OArf5DK,MAqfoFN,MAAjL,EACA2G,EAAW5E,WAtfkFzB,MAsf7F,OAA2GqG,EAA3G3E,QAA2G2E,EAA3G,qBAAmI,SAenI,MAAMmC,EAAa,GAyDnB,MAAM6B,EAAsB,CACxB,CACItH,MAAO,KACP1C,WAAY,wDACZG,SAAU,KAEd,CACIuC,MAAO,KACP1C,WAAY,0DACZG,SAAU,KAEd,CACIuC,MAAO,KACP1C,WAAY,2DACZG,SAAU,KAEd,CACIuC,MAAO,KACP1C,WAAY,4DACZG,SAAU,KAEd,CACIuC,MAAO,KACP1C,WAAY,4DACZG,SAAU,KAEd,CACIuC,MAAO,QACPuH,aAAa,EACbjK,WAAY,mCACZG,SAAU,KAEd,CACIuC,MAAO,QACPuH,aAAa,EACbjK,WAAY,mCACZG,SAAU,KAEd,CACIuC,MAAO,QACPuH,aAAa,EACbjK,WAAY,oCACZG,SAAU,KAEd,CACIuC,MAAO,QACPuH,aAAa,EACb9J,SAAU,IACVH,WAAY,qCAEhB,CACI0C,MAAO,QACPuH,aAAa,EACbjK,WAAY,gCACZG,UAAU,KAEd,CACIuC,MAAO,QACPuH,aAAa,EACbjK,WAAY,gCACZG,UAAU,KACX,CACCuC,MAAO,QACPuH,aAAa,EACbjK,WAAY,iCACZG,UAAU,KAEd,CACIuC,MAAO,QACPuH,aAAa,EACbjK,WAAY,iCACZG,UAAU,MAYZ+J,EAAmB,oDACnBC,EAAoB,qDACpBC,GAAkB,2EAClBC,GAAmB,6EACnBC,EAAe,iDACfC,GAAgB,mDAChBC,GAAc,CAChBC,QAAY,GAAEP,MAAqBC,IACnCO,OAAW,GAAEN,QAAqBC,KAClCM,IAAQ,GAAEL,MAAiBC,MAC3BL,iBAAqB,GAAEA,IACvBE,gBAAoB,GAAEA,MACtBE,aAAiB,GAAEA,IACnBH,kBAAsB,GAAEA,IACxBE,iBAAqB,GAAEA,KACvBE,cAAkB,GAAEA,MAKlBK,GAA0B,CAC5B,CAAElI,MAAS,UAAWvC,SAAU,IAAMH,WAAcwK,GAAYC,SAChE,CAAE/H,MAAS,oBAAqBvC,SAAU,IAAMH,WAAcwK,GAAYL,mBAC1E,CAAEzH,MAAS,mBAAoBvC,SAAU,IAAMH,WAAcwK,GAAYN,kBACzE,CAAExH,MAAS,SAAUvC,SAAU,KAAMH,WAAcwK,GAAYE,QAC/D,CAAEhI,MAAS,mBAAoBvC,SAAU,KAAMH,WAAcwK,GAAYH,kBACzE,CAAE3H,MAAS,kBAAmBvC,SAAU,KAAMH,WAAcwK,GAAYJ,iBACxE,CAAE1H,MAAS,MAAOvC,SAAU,KAAMH,WAAcwK,GAAYG,IAAKV,aAAa,GAC9E,CAAEvH,MAAS,gBAAiBvC,SAAU,KAAMH,WAAcwK,GAAYD,cAAeN,aAAa,GAClG,CAAEvH,MAAS,eAAgBvC,SAAU,KAAMH,WAAcwK,GAAYF,aAAcL,aAAa,IAG9FY,GAAmB;;;;;;;OACzB,WAAwBC,GACpB,IAAIC,EAAQD,EAAKrF,OAAS,EAAIqF,EAAKE,OAAO,GAAK,GAC3CC,EAAaH,EAAKrF,OAAS,EAAKqF,EAAKI,MAAM,GAAK,GACpD,OAAOH,EAAMI,cAAgBF,CAChC,CAgBD,YAA0BlD,GACtBA,SAAKnJ,QAASwM,IACLA,EAAGlL,SACJkL,EAAGlL,OAdf,YAAmBmL,GACf,OAAOA,EACFlM,QAAQ0L,GAAkB,KAC1BzN,MAAM,KACNkO,IAAIC,GACJnD,KAAK,GACb,CAQuBoD,CAAUJ,EAAG1I,OACzB0I,EAAGnB,cAAgBmB,EAAGnB,eAGvBlC,CACV;;;;;;;;AAkCD,MAAM0D,GAAc,IAAIpJ,MAAe,2CAA4C,CAC/EC,WAAY,OACZjB,QAAS,KACL,MAAMqK,GAAcC,SAAOnJ,GACrBa,GAAesI,SAAOvJ,IACtBwJ,EAAiB,GAAGC,OAAOC,MAAM,IAAKJ,GAAe,IACtDJ,IAAKS,GAAMxN,MAAMsG,QAAQkH,GAAKA,EAAI,CAACA,KAGxC,OArCR,YAAsBC,EAAUC,EAAS,IACrC,MAAMC,EAAO,GACbF,SAASpN,QAAQwM,IACbc,EAAKd,EAAG1I,OAAS0I,IAGrBa,EAAOrN,QAASwM,IACRc,EAAKd,EAAG1I,QACRyJ,QAAaD,EAAKd,EAAG1I,OAAQ0I,GAG7Bc,EAAKd,EAAG1I,OAAS0I,IAGlBgB,GAAiB3H,OAAOC,KAAKwH,GAAMZ,IAAIe,GAAKH,EAAKG,IAC3D,CAsBcC,EAFWjJ,EAAa5B,kBAAoB,GAAKuI,GACnD6B,OAAOxI,EAAa7B,kBAAoBoJ,GAA0B,IACzCgB,EAAX;;;;;;;OAgB3B,MAAMW,EACFzM,YAAYiI,GAIR3H,KAAKoM,UAAY,IAAI/L,IACrBL,KAAKqM,MAAQ,IAAI1E,GAAMpD,KAAK+H,EAC/B,CAIDC,YAAYjK,GACR,OAAOkK,EAAgBxM,KAAKyM,kBAAkBnK,EAAQ0I,GAAOA,EAAG1I,QAAUA,GAA1D,IACnB,CACDoK,YAAYnJ,GACR,OAAOvD,KAAKyM,kBAAkBlJ,EAAQyH,GAAOA,EAAGpL,aAAe2D,EAClE,CAKGoJ,mBACA,OAAO3M,KAAKqM,MAAMrF,OAAOc,GAAMA,EAAG+B,YACrC,CAIG+C,cACA,OAAO5M,KAAKqM,MAAMnB,IAAIpD,GAAMA,EAAGxF,MAClC,CAMGuK,eACA,OAAO7M,KAAKqM,MAAMnB,IAAIpD,IAAE,uBAAIA,GAAIhI,cAAR,QAAkB,IAC7C,CAID2M,kBAAkBzQ,EAAK8Q,GAAU,MAC7B,IAAIC,EAAW/M,KAAKoM,UAAU3L,IAAIzE,GACnB,MAAV+Q,IACDA,EAAQ,UAAG/M,KAAKqM,MAAMpP,KAAK6P,UAAnB,QAAgC,KACxC9M,KAAKoM,UAAU1L,IAAI1E,EAAK+Q,IAE5B,iBAAOA,SAAP,QAAmB,IACtB,EAELZ,EAAmB9M,UAAnB,0BAA+G8M,GA3zBlB5M,MA2zBsD8L,IAAnJ,EACAc,EAAmBnL,WA5zB0EzB,MA4zB7F,OAAmH4M,EAAnHlL,QAAmHkL,EAAnH,qBAAmJ;;;;;;;;AAgBnJ,MAAMa,GAAQ,QACRC,GAAmB,CACrB3K,MAAO0K,GACPpN,WAAYoN,GACZjN,SAAU,KAQd,MAAMmN,EACFxN,YAAY4L,EAAarI,EAAclF,GACnCiC,KAAKsL,YAAcA,EACnBtL,KAAKiD,aAAeA,EACpBjD,KAAKjC,UAAYA,EAGjBiC,KAAKmN,iCAAkC,EAMvCnN,KAAKoN,4BAA6B,EAClCpN,KAAKqN,0BAA4B,GACjCrN,KAAKsN,yBAA2B,GAChCtN,KAAKuN,kBAAoB,KAEzBvN,KAAKwN,YAAa,EAClBxN,KAAKyN,MAAQ,IAAIC,GACjB1N,KAAK2N,cAAgB,EACxB,CAEDC,eAAeC,GACX,MAAO,IAAIA,EAASb,GACvB,CAEDc,aAAa5G,GACT,OAAOA,EAAEtH,WAAWmO,WAAWf,GAClC,CAEGgB,iBAAa,MACb,MAAO,IAAC,UAAIhO,KAAKiD,aAAaxB,4BAAtB,QAA8C,GACzD,CAEGwM,uBACA,OAAOjO,KAAKgO,WACP9C,IAAI5I,GAAStC,KAAKsL,YAAYiB,YAAYjK,IAC1C0E,OAAOgE,GAAa,OAAPA,EACrB,CAEDkD,qBAAsBtO,eAClB,MAAMoL,EAAKhL,KAAKsL,YAAYoB,YAAY9M,GAExC,OADaoL,EAAK,IAAIhL,KAAKiO,iBAAkBjD,GAAMhL,KAAKiO,kBAC5C1J,KAAK4J,EACpB,CAEDC,YAAYC,GACR,IAAIrD,EAAKhL,KAAKsL,YAAYoB,YAAY2B,EAAMzO,YACd,QAA1BI,KAAK8N,aAAaO,KAElBrD,EAAKhL,KAAKkO,oBAAoBG,GAAO,GACrCA,EAAMzO,WAAN,oBAAmBoL,SAAnB,aAAmB5F,EAAIxF,kBAAvB,QAAqC,IAEzC,OAAO0O,GAAWD,EAAOrD,EAC5B,CAKDuD,8BAA8BxS,GAE1B,IAAKiE,KAAKjC,UAAUyQ,aAAexO,KAAKmN,gCACpC,OAEJnN,KAAKmN,iCAAkC,EACvC,MAAMsB,EAAsB,KAGnBzO,KAAKwN,aACNxN,KAAKoN,4BAA6B,EAClCpN,KAAK0O,cAAc3S,EAAQiE,KAAKkO,oBAAoB,IAAIzO,GAAY,EAAMuN,MAC1EjR,EAAO4S,eAAP,EAGFC,EAAqB,KAGvB5O,KAAKoN,4BAA6B,EAC9BpN,KAAKwN,aACLxN,KAAK6O,aAAa9S,GAClBA,EAAO4S,eAAP,EAIR3O,KAAKjC,UAAUyQ,YAAYhF,iBAAiB,cAAeiF,GAC3DzO,KAAKjC,UAAUyQ,YAAYhF,iBAAiB,aAAcoF,GAC1D5O,KAAKqN,0BAA0B/G,KAAKmI,GACpCzO,KAAKsN,yBAAyBhH,KAAKsI,EACtC,CAKDE,gBAAgB/S,GACZ,OAAQsS,IACArO,KAAK8N,aAAaO,GACdA,EAAM1O,UAAYK,KAAKwN,YACvBxN,KAAK0O,cAAc3S,EAAQiE,KAAKkO,oBAAoBG,IACpDtS,EAAO4S,iBAEDN,EAAM1O,SAAWK,KAAKwN,aAAexN,KAAKoN,6BAChDpN,KAAK6O,aAAa9S,GAClBA,EAAO4S,gBAIf3O,KAAK+O,mBAAmBhT,EAAQsS,EAAhC,CAEP,CAEDW,mBACI,OAAQX,KACKrO,KAAKwN,YAAcxN,KAAK8N,aAAaO,GAErD,CAKDK,cAAc3S,EAAQkT,GAClBjP,KAAKwN,YAAa,EAClBxN,KAAKuN,kBAAoBxR,EAAOmT,qBAChCnT,EAAOmT,qBAAuBlP,KAAKyN,MAAM0B,oBAAoBF,EAChE,CAEDJ,aAAa9S,GACTA,EAAOmT,qBAAuBlP,KAAK2N,cACnC3N,KAAK2N,cAAgB,GACrB3N,KAAKuN,kBAAoB,KACzBvN,KAAKyN,MAAM7M,QACXZ,KAAKwN,YAAa,CACrB,CAmBDuB,mBAAmBhT,EAAQsS,GACvB,IAAKrO,KAAKwN,YAAcxN,KAAKoN,2BAA4B,CACrD,IAAKpN,KAAKoN,2BAKN,YADApN,KAAK2N,cAAgB,IAGzB,IAAKU,EAAM1O,QAAS,CAChB,MAAMqL,EAAKhL,KAAKsL,YAAYoB,YAAY2B,EAAMzO,YAE9C,GAAIoL,EAAI,CACJ,MAAMoE,EAAcpP,KAAKuN,mBAAqBvN,KAAKuN,kBAAkB8B,SAASrE,GACxEsE,GAAgBtP,KAAKuN,mBAAqBxR,EAAOmT,qBAAqBG,SAASrE,IAC5DoE,GAAeE,KAEpCtP,KAAK2N,cAAcrH,KAAK0E,GACxBhL,KAAK2N,cAAcpJ,KAAK4J,GAE/B,CACJ,CACJ,CACJ,CAEDnF,cACQhJ,KAAKjC,UAAUyQ,cACfxO,KAAKqN,0BAA0B7O,QAAQ+Q,GAAKvP,KAAKjC,UAAUyQ,YAAY/E,oBAAoB,cAAe8F,IAC1GvP,KAAKsN,yBAAyB9O,QAAQ+Q,GAAKvP,KAAKjC,UAAUyQ,YAAY/E,oBAAoB,aAAc8F,IAE/G,EAELrC,EAAU7N,UAAV,0BAAsG6N,GA/gCT3N,MA+gCoC4M,GA/gCpC5M,MA+gCmEyC,IA/gCnEzC,MA+gC6FN,MAA1L,EACAiO,EAAUlM,WAhhCmFzB,MAghC7F,OAA0G2N,EAA1GjM,QAA0GiM,EAA1G,qBAAiI,SAkBjI,MAAMQ,GACFhO,cAEIM,KAAKwP,iBAAmB,EAC3B,CACDL,oBAAoBF,GAChBA,SAAO3I,KAAK2G,IACZgC,EAAO1K,KAAK4J,GACZc,EAAOzQ,QAAQwM,GAAMhL,KAAKyP,cAAczE,IACjChL,KAAKwP,gBACf,CAEDC,cAAczE,GACJA,QAEenJ,IAAb6N,KADkBF,iBAAiBvS,KAAK6K,GAAMA,EAAGlI,aAAeoL,EAAGpL,cAInEI,KAAKwP,iBAcrB,YAA2BxE,GAAI,MAC3B,iBAAOA,GAAIpL,WAAWmO,WAAWf,WAAjC,QACH;;;;;;;OAhBuC2C,CAAkB3E,GAAM,CAACA,KAAOhL,KAAKwP,kBACvD,IAAIxP,KAAKwP,iBAAkBxE,GAG5C,CAEDpK,QACIZ,KAAKwP,iBAAmB,EAC3B,EAqBL,MAAMI,GACFlQ,YAAY2J,EAAYiC,EAAauE,GACjC7P,KAAKqJ,WAAaA,EAClBrJ,KAAKsL,YAAcA,EACnBtL,KAAK6P,KAAOA,EACZ7P,KAAK8P,eAAgB,EACrB9P,KAAK+P,sBAAwB,GAC7B/P,KAAKgQ,WAAa,IAAI3P,IACtBL,KAAKiQ,cAAgB,IAAIC,QACzBlQ,KAAKmQ,WAAa,IAAID,QACtBlQ,KAAKoQ,UAAY,IAAIF,QACrBlQ,KAAKqQ,SAAW,IAAIH,QACpBlQ,KAAKsQ,QAAU,IAAIC,IACnBvQ,KAAKwQ,oBACR,CACGC,qBAAiB,QACjB,2BAAOzQ,KAAKkP,qBAAqB,UAAjC,aAAOhI,EAA8B5E,aAArC,QAA8C,EACjD,CACG4M,yBAAqBwB,GACrB1Q,KAAK+P,sBAAwB,IAAIW,EACpC,CACGxB,2BACA,MAAO,IAAIlP,KAAK+P,sBACnB,CACGY,iBAAa1U,GACb+D,KAAK8P,cAAgB7T,CACxB,CAKD2U,cAAcC,GACV,MAAM7F,EAAKhL,KAAK0M,YAAYmE,EAAGjR,YAC/B,GAAIoL,EAAI,CACJ6F,EAAKvC,GAAWuC,EAAI7F,GACpB,MAAM8F,EAAU9Q,KAAKkP,qBAAqB7R,QAAQ2N,GAC9C6F,EAAGlR,UAAuB,IAAZmR,GACd9Q,KAAK+P,sBAAsBzJ,KAAK0E,GAChChL,KAAK+P,sBAAsBxL,KAAK4J,GAChCnO,KAAK2O,iBAECkC,EAAGlR,UAAuB,IAAZmR,IAEpB9Q,KAAK+P,sBAAsBgB,OAAOD,EAAS,GAC3C9Q,KAAK+P,sBAAsBxL,KAAK4J,GAChCnO,KAAK2O,eAEZ,CACJ,CASDqC,KAAKzQ,EAASvE,EAAKiV,EAAUC,EAASC,EAAgB,IAClDC,GAAepR,KAAKoQ,UAAW7P,EAASvE,EAAKiV,GAC7CG,GAAepR,KAAKqQ,SAAU9P,EAASvE,EAAKkV,GAC5ClR,KAAKqR,mBAAmB9Q,EAASvE,GACjCgE,KAAKsR,mBAAmB/Q,EAASvE,EAAKmV,EACzC,CAODI,SAAShR,EAASvE,EAAKgP,GACnB,MAAMwG,EAAQxR,KAAKgQ,WAAWvP,IAAIF,GAClC,GAAIiR,EAAO,CACP,MAAMhN,OAAgB3C,IAAPmJ,EAAmBwG,EAAM/Q,IAAIuK,GAAMhL,KAAKyR,mBAAmBD,EAAOxV,GACjF,GAAIwI,EACA,OAAOA,EAAO/D,IAAIzE,EAEzB,CAEJ,CAMD0V,SAASnR,EAASvE,GACd,MAAMwV,EAAQxR,KAAKgQ,WAAWvP,IAAIF,GAClC,GAAIiR,EAAO,CACP,MAAMhN,EAASxE,KAAKyR,mBAAmBD,EAAOxV,GAC9C,GAAIwI,EACA,YAA2B3C,IAApB2C,EAAO/D,IAAIzE,KAAsB,CAE/C,CACD,OAAO,CACV,CAQD2V,SAASpR,EAASvE,EAAK4V,EAAK5G,GACxB,IAAIwG,EAAQxR,KAAKgQ,WAAWvP,IAAIF,GAChC,GAAKiR,EAIA,OACD,MAAMhN,GAAS,UAACgN,EAAM/Q,IAAIuK,UAAX,QAAkB,IAAI3K,KAAOK,IAAI1E,EAAK4V,GACrDJ,EAAM9Q,IAAIsK,EAAIxG,GACdxE,KAAKgQ,WAAWtP,IAAIH,EAASiR,EAChC,MAPGA,GAAQ,IAAInR,KAAMK,IAAIsK,GAAI,IAAI3K,KAAMK,IAAI1E,EAAK4V,IAC7C5R,KAAKgQ,WAAWtP,IAAIH,EAASiR,GAOjC,MAAMvV,EAAQ+D,KAAKuR,SAAShR,EAASvE,QACvB6F,IAAV5F,GACA+D,KAAK6R,cAActR,EAASvE,EAAKC,EAExC,CAED6V,WAAWvR,EAASvE,GAChB,OAAOgE,KAAKsQ,QACPpK,eACAa,MAAKC,OAAO2E,GAAKA,EAAEpL,UAAYA,GAAWoL,EAAE3P,MAAQA,GAC5D,CAED2S,eACI3O,KAAKgQ,WAAWxR,QAAQ,CAACgT,EAAO/S,KAC5B,MAAMsT,EAAS,IAAIC,IAAIhS,KAAKiQ,cAAcxP,IAAIhC,IAC9C,IAAIwT,EAAWjS,KAAKyR,mBAAmBD,GACnCS,GACAA,EAASzT,QAAQ,CAACmN,EAAGM,KACjBjM,KAAK6R,cAAcpT,EAAIwN,EAAGN,GAC1BoG,EAAOG,OAAOjG,EAAd,GAGR8F,EAAOvT,QAAQyN,IAEX,GADAgG,EAAWjS,KAAKyR,mBAAmBD,EAAOvF,GACtCgG,EAAU,CACV,MAAMhW,EAAQgW,EAASxR,IAAIwL,GAC3BjM,KAAK6R,cAAcpT,EAAIwN,EAAGhQ,EAC7B,MAEG+D,KAAKmS,aAAa1T,EAAIwN,EAAtB,EAPR,EAWP,CAMDkG,aAAa5R,EAASvE,GAClB,MAAMoW,EAAWpS,KAAKqQ,SAAS5P,IAAIF,GACnC,GAAI6R,EAAU,CACV,MAAMlB,EAAUkB,EAAS3R,IAAIzE,GACvBkV,IACFA,IACAlR,KAAKsQ,QAAQ9I,KAAK,CAAEjH,UAASvE,MAAKC,MAAO,KAEhD,CACJ,CAOD4V,cAActR,EAASvE,EAAKC,GACxB,MAAMmW,EAAWpS,KAAKoQ,UAAU3P,IAAIF,GACpC,GAAI6R,EAAU,CACV,MAAMnB,EAAWmB,EAAS3R,IAAIzE,GACxBiV,IACFA,EAAShV,GACT+D,KAAKsQ,QAAQ9I,KAAK,CAAEjH,UAASvE,MAAKC,UAEzC,CACJ,CAKDoW,eAAe9R,GACX,MAAM4P,EAAanQ,KAAKmQ,WAAW1P,IAAIF,GACnC4P,IACAA,EAAW3R,QAAQ8T,GAAKA,EAAEC,eAC1BvS,KAAKmQ,WAAW+B,OAAO3R,IAE3B,MAAMyP,EAAahQ,KAAKgQ,WAAWvP,IAAIF,GACnCyP,IACAA,EAAWxR,QAAQ,CAACgU,EAAGF,IAAMtC,EAAWkC,OAAOI,IAC/CtS,KAAKgQ,WAAWkC,OAAO3R,GAE9B,CAMDkS,cAAclS,EAASvE,GACnB,MAAMwV,EAAQxR,KAAKgQ,WAAWvP,IAAIF,GAClC,GAAIiR,EAAO,CACP,MAAMS,EAAWjS,KAAKyR,mBAAmBD,EAAOxV,GAC5CiW,IACIjW,EACAgE,KAAK6R,cAActR,EAASvE,EAAKiW,EAASxR,IAAIzE,IAG9CiW,EAASzT,QAAQ,CAACmN,EAAGM,IAAMjM,KAAK6R,cAActR,EAAS0L,EAAGN,IAGrE,CACJ,CAED0F,mBAAmB9Q,EAASvE,GACxB,IAAI+V,EAAS/R,KAAKiQ,cAAcxP,IAAIF,GAC/BwR,IACDA,EAAS,IAAIC,IACbhS,KAAKiQ,cAAcvP,IAAIH,EAASwR,IAEpCA,EAAOW,IAAI1W,EACd,CAODsV,mBAAmB/Q,EAASvE,EAAK2W,GAC7B,GAAIA,GAAYA,EAAStN,OAAQ,CAC7B,IAAIuN,EAAW5S,KAAKmQ,WAAW1P,IAAIF,GAMnC,GALKqS,IACDA,EAAW,IAAIvS,IACfL,KAAKmQ,WAAWzP,IAAIH,EAASqS,KAEZA,EAASnS,IAAIzE,GACf,CACf,MAAM6W,GAAkBnL,UAASiL,GAAUG,UAAU,KACjD,MAAMC,EAAe/S,KAAKuR,SAAShR,EAASvE,GAC5CgE,KAAK6R,cAActR,EAASvE,EAAK+W,EAAjC,GAEJH,EAASlS,IAAI1E,EAAK6W,EACrB,CACJ,CACJ,CAEDnG,YAAYnJ,GACR,OAAOvD,KAAKsL,YAAYoB,YAAYnJ,EACvC,CAMDkO,mBAAmBD,EAAOxV,GACtB,QAASoJ,EAAI,EAAGA,EAAIpF,KAAKkP,qBAAqB7J,OAAQD,IAAK,CACvD,MAAM4N,EAAchT,KAAKkP,qBAAqB9J,GACxC6M,EAAWT,EAAM/Q,IAAIuS,EAAY1Q,OACvC,GAAI2P,SACYpQ,IAAR7F,GAAsBiW,EAASgB,IAAIjX,IAA6B,MAArBiW,EAASxR,IAAIzE,IACxD,OAAOiW,CAGlB,CAGD,IAAKjS,KAAK8P,cACN,OAEJ,MAAMoD,EAAW1B,EAAM/Q,IAAI,IAC3B,YAAgBoB,IAAR7F,GAAqBkX,GAAYA,EAASD,IAAIjX,GAAQkX,OAAWrR,CAC5E,CAID2O,qBACI,MAAM3C,EAAU7N,KAAKsL,YAAYe,MAAMnB,IAAIF,GAAMA,EAAGpL,YACpDI,KAAK6P,KAAKtB,8BAA8BvO,MACxCA,KAAKqJ,WACA1C,QAAQ3G,KAAK6P,KAAKjC,eAAeC,IACjC9G,MAAKoM,OAAInT,KAAK6P,KAAKf,gBAAgB9O,QAAQgH,OAAOhH,KAAK6P,KAAKb,qBAC5D8D,UAAU9S,KAAK4Q,cAAcwC,KAAKpT,MAC1C,EAQL,YAAwBkL,EAAK3K,EAASvE,EAAKqX,GACvC,QAAcxR,IAAVwR,EAAqB,OACrB,MAAMC,EAAM,UAAGpI,EAAIzK,IAAIF,UAAX,QAAuB,IAAIF,IACvCiT,EAAO5S,IAAI1E,EAAKqX,GAChBnI,EAAIxK,IAAIH,EAAS+S,EACpB,CACJ;;;;;;;OAZD1D,GAAgBvQ,UAAhB,0BAA4GuQ,IA52CfrQ,MA42CgDqG,GA52ChDrG,MA42CuE4M,GA52CvE5M,MA42CsG2N,GAAnM,EACA0C,GAAgB5O,WA72C6EzB,MA62C7F,OAAgHqQ,GAAhH3O,QAAgH2O,GAAhH,qBAA6I,SAoB7I,MAAM2D,EACF7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C3T,KAAKwT,WAAaA,EAClBxT,KAAKyT,aAAeA,EACpBzT,KAAK0T,OAASA,EACd1T,KAAK2T,QAAUA,EACf3T,KAAK4T,cAAgB,GACrB5T,KAAK6T,OAAS,GAEd7T,KAAK8T,IAAM,GACX9T,KAAK+T,eAAiB,IAAIxD,IAE1BvQ,KAAKgU,WAAa,IAAI3T,GACzB,CAEG4T,oBACA,OAAOjU,KAAKwT,WAAWU,cAAcD,aACxC,CAEGC,oBACA,OAAOlU,KAAKwT,WAAWU,aAC1B,CAEGC,qBACA,OAAOnU,KAAK2T,QAAQpC,SAASvR,KAAKkU,cAAelU,KAAK4T,cACzD,CACGO,mBAAelY,GACf+D,KAAK2T,QAAQhC,SAAS3R,KAAKkU,cAAelU,KAAK4T,cAAe3X,EAAO+D,KAAK2T,QAAQlD,eACrF,CAED2D,YAAYC,GACRhQ,OAAOC,KAAK+P,GAAS7V,QAAQxC,IACzB,IAAiC,IAA7BgE,KAAK6T,OAAOxW,QAAQrB,GAAa,CACjC,MAAMgP,EAAKhP,EAAIgB,MAAM,KAAK8N,MAAM,GAAG9C,KAAK,KAClC4J,EAAMyC,EAAQrY,GAAK+W,aACzB/S,KAAK2R,SAASC,EAAK5G,EACtB,GAER,CACDhC,cACIhJ,KAAK+T,eAAevM,OACpBxH,KAAK+T,eAAetM,WACpBzH,KAAK2T,QAAQtB,eAAerS,KAAKkU,cACpC,CAEDlD,KAAKG,EAAgB,IACjBnR,KAAK2T,QAAQ3C,KAAKhR,KAAKwT,WAAWU,cAAelU,KAAK4T,cAAe5T,KAAKsU,gBAAgBlB,KAAKpT,MAAOA,KAAKW,YAAYyS,KAAKpT,MAAOmR,EACtI,CAEDoD,UAAUlB,EAAOmB,GACb,MAAMC,EAAUzU,KAAKyT,aACfiB,EAAWD,EAAQjS,YACzB,IAAImS,EAAY3U,KAAKgU,WAAWvT,IAAI4S,KAC/BsB,IAAcD,KACfC,EAAYF,EAAQG,YAAYvB,EAAOmB,GACnCE,GACA1U,KAAKgU,WAAWtT,IAAI2S,EAAOsB,IAGnC3U,KAAK8T,IAAM,IAAKa,GAChB3U,KAAKkD,oBAAoByR,GACzBF,EAAQhS,WAAW4Q,EAAOsB,EAAWH,EACxC,CAED7T,cACI0D,OAAOC,KAAKtE,KAAK8T,KAAKtV,QAAQyN,IAC1BjM,KAAK8T,IAAI7H,GAAK,KAElBjM,KAAKkD,oBAAoBlD,KAAK8T,KAC9B9T,KAAK8T,IAAM,GACX9T,KAAK+S,kBAAelR,CACvB,CAED4Q,gBACIzS,KAAK2T,QAAQlB,cAAczS,KAAKkU,cAAelU,KAAK4T,cACvD,CAODiB,qBAAqB9Y,EAAQ+Y,GAAe,GACxC,GAAI/Y,EAAQ,CACR,MAAOE,EAAO8Y,GAAkB/U,KAAK0T,OAAOpQ,iBAAiBvH,GAC7D,IAAKgZ,GAAkBD,EAAc,CACjC,MAAMtU,GAAQwU,QAAe/Y,GACvBiC,EAAW,CAACnC,GAClBiE,KAAK0T,OAAOrQ,qBAAqB7C,EAAOtC,EAC3C,CACD,OAAOjC,EAAMmI,MAChB,CACD,MAAO,KACV,CACDT,QAAQ5H,GACJ,OAAOiE,KAAK0T,OAAO/P,QAAQ5H,EAC9B,CAEDmH,oBAAoB1C,EAAOvE,EAAOsE,EAAUP,KAAKkU,eAC7ClU,KAAK0T,OAAOxQ,oBAAoB3C,EAASC,EAAOvE,EACnD,CACD0V,SAASC,EAAK5G,GACVhL,KAAK2T,QAAQhC,SAAS3R,KAAKkU,cAAelU,KAAK4T,cAAehC,EAAK5G,EACtE,CACDsJ,gBAAgBjB,GACRrT,KAAK+S,eAAiBM,IACtBrT,KAAKuU,UAAUlB,GACfrT,KAAK+S,aAAeM,EAE3B,EAELE,EAAelU,UAAf,0BAA2GkU,GAh/CdhU,MAg/C8CA,OAh/C9CA,MAg/CwEgD,IAh/CxEhD,MAg/CiGsD,GAh/CjGtD,MAg/CwHqQ,IAArN,EACA2D,EAAe0B,UAj/C8E1V,MAi/C7F,MAA+FgU,EAA/F2B,UAj/C6F3V;;;;;;;;;;;;;;;;;;;;;;AAkhD7F,MAAM4V,WAAuBvP,EACzBlG,YAAYmG,EAAO7C,EAAajF,EAAWqX,GACvCC,MAAMxP,EAAO7C,EAAajF,GAC1BiC,KAAKoV,aAAeA,EACpBpV,KAAKsV,qBAAsB,EAC3BtV,KAAKuV,aAAc,CACtB,CAEDC,WACIxV,KAAK+F,SAASvH,QAAS6H,IACnBA,EAAIoP,SAAJ,GAEJzV,KAAK+F,SAASnF,QACdZ,KAAKuV,aAAc,CACtB,CAEDG,SAAS9V,EAAY2V,EAAcvV,KAAKuV,aACpC3V,SAAaI,KAAK2V,eAAe/V,IAC7B2V,IAAgBvV,KAAKuG,SAAS3G,MAC9BI,KAAK4V,iBACL5V,KAAK6V,oBAAoBjW,GACzBI,KAAK8V,sBAAsBlW,EAAY2V,IAEpCvV,KAAK+V,YACf,CAEDJ,eAAeK,GAAc,MAEzB,iBADWhW,KAAKoV,aAAa7I,YAAYyJ,IAC9BpW,kBAAX,QAAyBoW,CAC5B,CAKDF,sBAAsBlW,EAAY2V,GAC9B,GAAIA,EAAa,OACb,MACMjT,EAAK,UADAtC,KAAKoV,aAAa1I,YAAY9M,IACvB0C,aAAP,QAAgB,UAE3B,OAAQA,OACC,KACDtC,KAAKiW,iBAAiB,CAAC,UACvB,UACC,KACDjW,KAAKiW,iBAAiB,CAAC,QAAS,UAChC,UACC,KACDjW,KAAKiW,iBAAiB,CAAC,QAAS,QAAS,UACzC,UACC,KACDjW,KAAKiW,iBAAiB,CAAC,QAAS,QAAS,QAAS,UAI1D,OAAQ3T,OACC,KACDtC,KAAKiW,iBAAiB,CAAC,QAAS,QAAS,QAAS,UAClD,UACC,KACDjW,KAAKiW,iBAAiB,CAAC,QAAS,QAAS,UACzC,UACC,KACDjW,KAAKiW,iBAAiB,CAAC,QAAS,UAChC,UACC,KACDjW,KAAKiW,iBAAiB,CAAC,UAGlC,CAED,OAAOjW,KAAKkW,iBAAiBtW,EAChC,CAIDqW,iBAAiBrJ,GAKbA,EAAQpO,QAJU8D,IAAU,MACxB,MAAM0I,EAAKhL,KAAKoV,aAAa7I,YAAYjK,GACzCtC,KAAKkW,iBAAL,UAAsBlL,GAAIpL,kBAA1B,QAAwC0C,EAAxC,EAGP,CAID4T,iBAAiBtW,IACRI,KAAK+F,SAASkN,IAAIrT,IAAeI,KAAKsV,qBACvCtV,KAAK6V,oBAAoBjW,GAE7B,MAAMyG,EAAMrG,KAAK+F,SAAStF,IAAIb,GAC9B,OAAIyG,IAAQrG,KAAKuG,SAAS3G,IACtBI,KAAK+F,SAASrF,IAAId,EAAYyG,EAAIqP,YAE/B1V,KAAK+V,YACf,CAEDH,iBACI,YAAK7P,SAASvH,QAASsJ,IACnBA,EAAGqO,YAAH,GAEGnW,IACV,CAED6V,oBAAoBjW,IACXI,KAAK+F,SAASkN,IAAIrT,IAAeI,KAAKsV,qBACvCtV,KAAKwG,cAAc5G,EAE1B,CAKDiJ,SAAStF,GACL,OAAO,IAAI6S,GAAmB7S,EACjC,CACGwS,mBACA,OAAO/V,KAAKmG,YAAYd,OAAS,CACpC,EAEL8P,GAAe9V,UAAf,0BAA2G8V,IAzoDd5V,MAyoD8CA,OAzoD9CA,MAyoDoEL,OAzoDpEK,MAyoD4FN,MAzoD5FM,MAyoDiH4M,GAA9M,EACAgJ,GAAenU,WA1oD8EzB,MA0oD7F,OAA+G4V,GAA/GlU,QAA+GkU,GAA/G,YAeA,MAAMiB,GACF1W,YAAY2W,GACRrW,KAAKqW,YAAcA,EACnBrW,KAAKsW,WAAY,EACjBtW,KAAKuW,WAAa,GAClBvW,KAAKuJ,SAAW,IACnB,CACG5J,cACA,OAAOK,KAAKsW,SACf,CACGhN,YACA,OAAOtJ,KAAKqW,WACf,CAKDZ,UACIzV,KAAKmW,aACLnW,KAAKuW,WAAa,EACrB,CAEDb,WACI,OAAK1V,KAAKsW,YACNtW,KAAKsW,WAAY,EACjBtW,KAAKuW,WAAW/X,QAASgY,IACVA,EACRC,KAAKzW,KAAM,CAAEL,QAASK,KAAKL,QAAS2J,MAAOtJ,KAAKsJ,OAAnD,IAGDtJ,IACV,CAEDmW,aACI,OAAInW,KAAKsW,YACLtW,KAAKsW,WAAY,EACjBtW,KAAKuW,WAAW/X,QAASgY,IACVA,EACRC,KAAKzW,KAAM,CAAEL,QAASK,KAAKL,QAAS2J,MAAOtJ,KAAKsJ,OAAnD,IAGDtJ,IACV,CAED8I,YAAY4N,IACkC,IAAtC1W,KAAKuW,WAAWlZ,QAAQqZ,IACxB1W,KAAKuW,WAAWjQ,KAAKoQ,GAErB1W,KAAKsW,WAELK,EAAGF,KAAKzW,KAAM,CAAEL,QAASK,KAAKL,QAAS2J,MAAOtJ,KAAKsJ,OAE1D,CAEDP,eAAeyJ,GACd,CACDhJ,iBAAiBgJ,EAAGoE,EAAIC,GACvB,CACDpN,oBAAoB+I,EAAGoE,EAAIC,GAC1B,CACDnN,cAAc8I,GACV,OAAO,CACV;;;;;;;;AA8EL,MAAMsE,GACFpX,YAAY4L,EAAajC,EAAYwG,GACjC7P,KAAKsL,YAAcA,EACnBtL,KAAKqJ,WAAaA,EAClBrJ,KAAK6P,KAAOA,EAEZ7P,KAAK+W,gBAAiB,EACtB/W,KAAKgX,WAAa,IAAIzG,IACtBvQ,KAAKiX,QAAUjX,KAAKkX,kBACvB,CAKDlO,cACIhJ,KAAKgX,WAAWxP,OAChBxH,KAAKgX,WAAWvP,UACnB,CAODvB,eACI,OAAOlG,KAAKiX,OACf,CAOD1Q,SAAStK,GAEL,OA4FR,YAAsB4R,GAClB,OAAOA,EAAQsJ,QAAQ5T,GAASA,EAAMvG,MAAM,MACvCkO,IAAI3H,GAASA,EAAMa,OAC3B;;;;;;;;;;;;;;OA/FcwI;;;;;;;;;;;;;;;AAvFf,YAAqB3Q,GACjB,OAAOkC,MAAMsG,QAAQxI,GAASA,EAAQ,CAACA,EAC1C,CAoFoCmb,CAAYnb,IAC1BwK,KAAKnE,IAChB,MAAMiB,EAmFlB,YAAsBA,EAAO8T,GAAS,QAClC,MAAMrM,EAAE,UAAGqM,EAAQ9K,YAAYhJ,UAAvB,QAAiC8T,EAAQ3K,YAAYnJ,GAC7D,iBAAOyH,GAAIpL,kBAAX,QAAyB,IAC5B,CAtFyB0X,CAAahV,EAAOtC,KAAKsL,aACvC,OAAiB,OAAV/H,GAAkBvD,KAAKqJ,WAAW9C,SAAShD,EAAzB,EAEhC,CASD2T,mBACI,MAAMrJ,EAAU7N,KAAKsL,YAAYe,MAAMnB,IAAIF,GAAMA,EAAGpL,YACpD,OAAOI,KAAKuX,gBAAgB1J,EAC/B,CAeD0J,gBAAgB3Q,GAsBZ,OAAO5G,KAAKqJ,WACP1C,QAAQ3G,KAAK6P,KAAKjC,eAAehH,IACjCG,MAAKC,OAAQC,GAAWA,EAAOtH,UAAU6X,OAAa,EAAGC,MAAgBC,OAAUlF,IAAKmF,QAAG3X,KAAK4X,wBAAwB1M,QAnBpGmJ,GACdrU,KAAM+W,eAA2B1C,EAAQrN,OAAOC,IAAU,MAE7D,iBADWjH,KAAKsL,YAAYoB,YAAYzF,EAAOrH,aACpCiK,mBAAX,QAA0B,GAFAwK,IAkBiHrN,OAvB/HqN,GAERA,EAAQrN,OADMC,GAAYA,EAAOrH,WAAWyF,OAAS,GACxBA,OAAS,IAqBqHwS,OAb9I,CAACC,EAAUC,KAChC,GAAID,EAASzS,SAAW0S,EAAQ1S,OAC5B,OAAO,EAEX,MAAM2S,EAAcF,EAAS5M,IAAI2F,IAAMA,GAAGjR,YACpCqY,EAAa,IAAIjG,IAAI+F,EAAQ7M,IAAI2F,IAAMA,GAAGjR,aAEhD,OAA2B,IAApBsY,IADgBlG,IAAIgG,EAAYhR,OAAOwB,KAAOyP,EAAWhF,IAAIzK,MAClD2P,IAAS,IAMgLC,OAAUpY,KAAKgX,YACjO,CAKDY,qBAMI,OAAO5X,KAAKqJ,WACPlD,YACA+E,IAAI3H,GAAS,IAAI9D,GAAY,EAAM8D,IACnC2H,IAJ0BjE,GAAWjH,KAAK6P,KAAK/B,aAAa7G,GAAUjH,KAAK6P,KAAKzB,YAAYnH,GAAUA,GAKtGiE,IATiBjE,GAEXqH,GAAWrH,EADPjH,KAAKsL,YAAYoB,YAAYzF,EAAOrH,cAS9C2E,KAAK4J,EACb,EAEL2I,GAAczX,UAAd,0BAA0GyX,IAn5DbvX,MAm5D4C4M,GAn5D5C5M,MAm5D2EqG,GAn5D3ErG,MAm5DkG2N,GAA/L,EACA4J,GAAc9V,WAp5D+EzB,MAo5D7F,OAA8GuX,GAA9G7V,QAA8G6V,GAA9G,qBAAyI,SAuCzI,MAAMuB,GACF3Y,YAAY4L,EAAajC,EAAYpG,EAAcD,EAAajF,GAC5DiC,KAAKsL,YAAcA,EACnBtL,KAAKqJ,WAAaA,EAClBrJ,KAAKiD,aAAeA,EACpBjD,KAAKgD,YAAcA,EACnBhD,KAAKjC,UAAYA,EACjBiC,KAAKsY,0BAA2B,EAChCtY,KAAKuY,oBAAsB,GAC3BvY,KAAKwY,iBAAmB,IAAInY,GAC/B,CAKDqV,SAAS/N,GACLA,EAAOA,EAAKuD,IAAIpD,GAAMA,EAAG1D,QACzBpE,KAAKyY,kBACLzY,KAAK0Y,gBACL1Y,KAAK2Y,eAAehR,GACpB3H,KAAK4Y,oBACR,CAKDC,UACI,GAAI7Y,KAAKsY,yBAA0B,CAC/B,MAAMQ,EAAgB7R,GAAWA,EAAOrH,WAClC+H,EAAO3H,KAAKuY,oBAAoBrN,IAAI4N,GAC1C,IACI9Y,KAAK0Y,gBACL1Y,KAAK+Y,yBACL/Y,KAAK2Y,eAAehR,EAOvB,CANA,QAEG3H,KAAKuY,oBAAsB,GACvBvY,KAAKgZ,oBACLhZ,KAAKgZ,mBAAmBzG,aAE/B,CACJ,CACJ,CAQDqG,qBAGI,IAD0B1P,EADRjL,MAAkB+B,KAAKgD,cAAgBhD,KAAKjC,WACvBiC,KAAKiD,aAAavB,wBAClC,CACnB,MAAMuX,GAAUC,QAAU9P,OAAQ,UAAUrC,MAAKoS,OAAK,IACtDnZ,KAAKgZ,mBAAqBC,EAAQnG,UAAU9S,KAAK6Y,QAAQzF,KAAKpT,MACjE,CACJ,CAOD0Y,gBACI,MAAM/Q,EAAO3H,KAAKoZ,mBAClBpZ,KAAKqZ,qBAAqB1R,GAAM,GAChC3H,KAAKsZ,qBAAqB3R,GAAM,EACnC,CAID8Q,kBACI,IAAKzY,KAAKsY,yBAA0B,CAChC,MAAMiB,EAAiBhW,GAAU,IAAI9D,GAAY,EAAM8D,GACjDiW,EAAgBvS,GAEXqH,GAAWrH,EADPjH,KAAKsL,YAAYoB,YAAYzF,EAAOrH,aAGnDI,KAAKuY,oBAAsBvY,KAAKoZ,mBAC3BlO,IAAIqO,GACJrO,IAAIsO,GACJjV,KAAK4J,GACVnO,KAAKyZ,sBACR,CACJ,CAIDd,eAAehR,GACL3H,KAAKwY,kBACPxY,KAAKqZ,qBAAqB1R,GAAM,GAEpC3H,KAAKsZ,qBAAqB3R,EAC7B,CAID2R,qBAAqBzL,EAASlO,GAAU,GAOpCkO,EAAQ3C,IANc3H,IAClB,MAAM8T,EAAUrX,KAAKsL,YACfN,EAAKqM,EAAQ9K,YAAYhJ,IAAU8T,EAAQ3K,YAAYnJ,GAC7D,OAAOyH,EAAKA,EAAGpL,WAAa2D,IAGN/E,QADD+E,GAAUvD,KAAK0Z,gBAAgB/Z,EAAS4D,GAEpE,CAKD8V,qBAAqBxL,EAASlO,GAC1B,MAAMoG,EAAW,IAAI1F,IACrBwN,EAAQrP,QAAQ+E,IACZwC,EAASrF,IAAI6C,EAAO,CAAE5D,WAAtB,GAEJK,KAAKqJ,WAAWtD,SAAWA,CAC9B,CAID0T,uBACI,MAAM1d,EAASiE,KAAKwY,iBACpBzc,EAAO6E,QACPZ,KAAKqJ,WAAWtD,SAASvH,QAAQ,CAACvC,EAAOD,KACrCD,EAAO2E,IAAI1E,EAAKC,EAAhB,GAEJ+D,KAAKsY,0BAA2B,CACnC,CAIDS,yBACI,MAAMhd,EAASiE,KAAKqJ,WAAWtD,SAC/BhK,EAAO6E,QACPZ,KAAKwY,iBAAiBha,QAAQ,CAACvC,EAAOD,KAClCD,EAAO2E,IAAI1E,EAAKC,EAAhB,GAEJ+D,KAAKwY,iBAAiB5X,QACtBZ,KAAKsY,0BAA2B,CACnC,CAIDoB,gBAAgB/Z,EAAS4D,GACrBvD,KAAKqJ,WAAW5L,OAAO+J,KAAK,IAAI/H,EAAYE,EAAS4D,GACxD,CACG6V,yBACA,OAAOpZ,KAAKqJ,WAAWlD,WAC1B;;;;;;;;;;;;;;;;;;;;;;AA8CL,YAAuBwT,EAAOC,EAAO,IAAKC,EAAS,KAC/C,IAAIC,EAAQ,CAACF,EAAMC,EAAQF,GACvBI,EAAIJ,EAAMtc,QAAQ,QACtB,GAAI0c,EAAI,EAAG,CACPD,EAAM,GAAKE,GAAmBL,EAAMM,UAAUF,GAAG3V,QACjD,IAAIzE,EAAUga,EAAMnU,OAAO,EAAGuU,GAAG3V,OAAOpH,MAAM,KACxB,GAAlB2C,EAAQ0F,SACRyU,EAAM,GAAKna,EAAQ,GACnBma,EAAM,GAAKna,EAAQ,GAE1B,SACa,GAALoa,EACLD,EAAM,GAAKE,GAAmBL,EAAMvV,YAEnC,CACD,IAAIzE,EAAUga,EAAM3c,MAAM,KAC1B8c,EAA4B,IAAnBna,EAAQ0F,OAAgB1F,EAAU,CACvCia,EAAMC,EAAQF,EAErB,CACD,OAAOG,CACV,CAWD,YAA4BI,GACxB,OAAOA,EAAKnb,QAAQ,QAAS,IAAIA,QAAQ,cAAe,OAC3D,CA9EDsZ,GAAahZ,UAAb,0BAAyGgZ,IAllEZ9Y,MAklE0C4M,GAllE1C5M,MAklEyEqG,GAllEzErG,MAklEgGyC,IAllEhGzC,MAklE0HL,OAllE1HK,MAklEkJN,MAA/O,EACAoZ,GAAarX,WAnlEgFzB,MAmlE7F,OAA6G8Y,GAA7GpX,QAA6GoX,GAA7G,qBAAuI,SAgFvI,WAAkBpc,EAAO2F,GACrB,QAAmBC,IAAfD,EACA,OAAO3F,EAEX,MAAMke,EAAkBC,IACpB,MAAMC,GAAgBD,EAActP,MAAM,GANxB,IAM8CzF,QAChE,OAAIpJ,EAAMqe,SAPQ,OAOwBje,MAAMge,GACpC,GAAEA,EAAczY,EAAW3F,QAAQ2F,EAAW2Y,OAEnDte,GAEX,OAAOA,EAAMoT,SAAS,KAClBpT,EAAMe,MAAM,KAAKkO,IAAIiP,GAAgBnS,KAAK,KAAOmS,EAAele,EACvE;;;;;;;OAAA;;;;;;;OC3tED,MAAMue,UAA2BjY,KAC7BqS,YAAY6F,GACR,MAAO,CAAEC,QAAWD,EAAO,OAAMA,KAAS,GAC7C,EAELD,EAAmBnb,UAAnB,iDAAqGE,MAAUib,KAA/Gtd,GAA+Gsd,EAA/G,KACAA,EAAmBxZ,WADkFzB,MACrG,OAAmHib,EAAnHvZ,QAAmHuZ,EAAnH,qBAAmJ,SAKnJ,MAAMG,UAAwBpH,KAC1B7T,YAAY8T,EAAYC,EAAcC,EAAQC,EAAS3V,EAAY4c,GAC/DvF,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAKhC,WAAaA,EAClBgC,KAAK4a,mBAAqBA,EAC1B5a,KAAK4T,cAAgB,UACrB5T,KAAK6a,WAAa,GAClB7a,KAAKgU,WAAa8G,GAClB9a,KAAKgR,OACLhR,KAAK2R,SAAS3R,KAAKkU,cAAcpQ,aAAa,QAAU,GAAI,KACxDJ,QAAiB1D,KAAKhC,aAAegC,KAAK4a,oBAC1C5a,KAAKkU,cAAclP,aAAa,MAAO,GAE9C,CACG+V,QAAInJ,GACJ5R,KAAK6a,WAAajJ,EAClB5R,KAAK2R,SAAS3R,KAAK6a,WAAY,GAClC,CASDvG,gBAAgBrY,GACZ,MAAMwe,EAAMxe,GAAS+D,KAAK6a,YACtBnX,QAAiB1D,KAAKhC,aAAegC,KAAK4a,mBAC1C5a,KAAKuU,UAAUkG,GAGfza,KAAKkU,cAAclP,aAAa,MAAOyV,EAE9C,EAELE,EAAgBtb,UAAhB,0BAA4Gsb,GA1CPpb,MA0CwCA,OA1CxCA,MA0CkEib,GA1ClEjb,MA0CiGyb,MA1CjGzb,MA0C2Hyb,MA1C3Hzb,MA0C0JL,OA1C1JK,MA0CkL4C,MAAvR,EACAwY,EAAgB1F,UA3CqF1V,MA2CrG,MAAgGob,EAAhG9G,6BA3CqGtU,SAwDrG,MAAMub,GAAc,IAAIza,IAClB4a,EAAW,CACb,SAAU,SAAU,SAAU,SAAU,SACxC,YAAa,YAAa,YAAa,YACvC,YAAa,YAAa,YAAa,aAgB3C,MAAMC,UAA+BP,EACjCjb,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASoH,CACjB,EAELC,EAAuB7b,UAAvB,iDAlFqGE,MAkFc2b,KAAnHhe,GAAmHge,EAAnH,KACAA,EAAuBjG,UAnF8E1V,MAmFrG,MAAuG2b,EAAvGE,qlBAnFqG7b;;;;;;;;AAgGrG,MAAM8b,UAAuB9H,KACzB7T,YAAY8T,EAAYE,EAAQC,EAAS2H,EAAiBC,EAAiBC,EAAWC,GAClFpG,MAAM7B,EAAY,KAAME,EAAQC,GAChC3T,KAAKyb,gBAAkBA,EACvBzb,KAAK4T,cAAgB,UAChB5T,KAAKyb,kBAGNzb,KAAKyb,gBAAkB,IAAIC,KAAQJ,EAAiBC,EAAiB/H,EAAYgI,IAErFxb,KAAKgR,OACLhR,KAAK2R,SAAS,GAAI,GACrB,CAKGgK,UAAM/J,GACN5R,KAAKyb,gBAAgBE,MAAQ/J,EAC7B5R,KAAK2R,SAASC,EAAK,GACtB,CACD0C,gBAAgBrY,GACZ+D,KAAKyb,gBAAgBG,QAAU3f,EAC/B+D,KAAKyb,gBAAgBI,WACxB,CAODA,YACI7b,KAAKyb,gBAAgBI,WACxB,EAELR,EAAehc,UAAf,0BAA2Ggc,GAnIN9b,MAmIsCA,OAnItCA,MAmIgEyb,MAnIhEzb,MAmI0Fyb,MAnI1Fzb,MAmIyHA,OAnIzHA,MAmIwJA,OAnIxJA,MAmIuLA,OAnIvLA,MAmIgNuc,KAArT,MACAT,EAAepG,UApIsF1V,MAoIrG,MAA+F8b,EAA/FxH,2CApIqGtU,SA+IrG,MAAMwc,EAAW,CACb,UAAW,aAAc,aAAc,aAAc,aAAc,aACnE,gBAAiB,gBAAiB,gBAAiB,gBACnD,gBAAiB,gBAAiB,gBAAiB,iBAYvD,MAAMC,UAA8BX,EAChC3b,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASkI,CACjB,EAELC,EAAsB3c,UAAtB,iDApKqGE,MAoKayc,KAAlH9e,GAAkH8e,EAAlH,KACAA,EAAsB/G,UArK+E1V,MAqKrG,MAAsGyc,EAAtGZ,8uBArKqG7b;;;;;;;;AAkLrG,MAAM0c,UAA6B1Z,KAC/BqS,YAAYsH,EAAM1H,GAEd,MAAO,CAAEtY,QADmB,SACRigB,EAAa3H,EAAOtY,UAAYsY,EAAO4H,SAAW,UAAY,IAAM,OAC3F,EAELH,EAAqB5c,UAArB,iDAxLqGE,MAwLY0c,KAAjH/e,GAAiH+e,EAAjH,KACAA,EAAqBjb,WAzLgFzB,MAyLrG,OAAqH0c,EAArHhb,QAAqHgb,EAArH,qBAAuJ,SAKvJ,MAAMI,UAA0B9I,KAC5B7T,YAAY8T,EAAYC,EAAcC,EAAQC,EAAS1Q,EAAcjF,EAAY4c,GAC7EvF,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAKiD,aAAeA,EACpBjD,KAAKhC,WAAaA,EAClBgC,KAAK4a,mBAAqBA,EAC1B5a,KAAK4T,cAAgB,YAErB5T,KAAK9D,QAAU,GACf8D,KAAKsc,WAAY,EACjBtc,KAAKuc,cAAe,CACvB,CAIDC,kBACIxc,KAAKyc,qBACL,MAAMC,EAAWve,MAAMC,KAAK4B,KAAKkU,cAAcwI,UAC/C,QAAStX,EAAI,EAAGA,EAAIsX,EAASrX,OAAQD,IACjC,GAAIpF,KAAK2T,QAAQjC,SAASgL,EAAStX,GAAI,QAAS,CAC5CpF,KAAKuc,cAAe,EACpB,KACH,CAEDI,GAAY1J,IAAIjT,KAAKkU,eACrBlU,KAAK9D,QAAUygB,GAAYlc,IAAIT,KAAKkU,gBAGpClU,KAAK9D,QAAU8D,KAAK4c,kBACpBD,GAAYjc,IAAIV,KAAKkU,cAAelU,KAAK9D,UAE7C8D,KAAKgR,OAEL,MAAM6L,EAAe7c,KAAK2T,QAAQpC,SAASvR,KAAKkU,cAAelU,KAAK4T,cAAe,SAC9D/R,IAAjBgb,GAA+C,KAAjBA,EAC9B7c,KAAK2R,UAAS,EAAM,IAGpB3R,KAAKyS,eAEZ,CAMD2B,YAAYC,GACRhQ,OAAOC,KAAK+P,GAAS7V,QAAQxC,IACzB,IAAiC,IAA7BgE,KAAK6T,OAAOxW,QAAQrB,GAAa,CACjC,MAAM8gB,EAAW9gB,EAAIgB,MAAM,KACrBgO,EAAK8R,EAAShS,MAAM,GAAG9C,KAAK,KAC5B+U,EAAa1I,EAAQrY,GAAK+W,aAChC,IAAIoJ,EAA4B,KAAfY,GACE,IAAfA,IAAmBC,QAAsBD,GAEzB,WAAhBD,EAAS,KACTX,GAAcA,GAElBnc,KAAK2R,SAASwK,EAAYnR,EAC7B,GAER,CAODyR,qBACIzc,KAAKsc,UAAYtc,KAAK2T,QAAQjC,SAAS1R,KAAKkU,cAAe,UAC3D,CAAC,SAAU,gBAAgB1V,QAAQxC,IAC/BgE,KAAK2T,QACA7B,WAAW9R,KAAKkU,cAAelY,GAC/B+K,MAAKqR,OAAUpY,KAAK+T,iBACpBjB,UAAU9S,KAAKyS,cAAcW,KAAKpT,MAHvC,EAKP,CAMD4c,kBACI,OAAQ5c,KAAKsc,WAActc,KAAKuc,cAAgBvc,KAAKiD,aAAa9B,gBAC9D,OAASnB,KAAK0T,OAAOlQ,YAAYxD,KAAKkU,cAAe,WAAW,EACvE,CAEDI,gBAAgBrY,GAAQ,GACpB,GAAc,KAAVA,EACA,OAEJ,MAAMmgB,GAAW1Y,QAAiB1D,KAAKhC,YACvCgC,KAAKuU,UAAUtY,EAAQ,OAAS,QAAS,CAAEC,QAAS8D,KAAK9D,QAASkgB,aAC9DA,GAAYpc,KAAK4a,oBACjB5a,KAAKkU,cAAc1T,MAAMkE,YAAY,UAAW,IAEpD1E,KAAK2T,QAAQlB,cAAczS,KAAKiU,cAAe,aAClD,EAELoI,EAAkBhd,UAAlB,0BAA8Ggd,GAjST9c,MAiS4CA,OAjS5CA,MAiSsE0c,GAjStE1c,MAiSuGyb,MAjSvGzb,MAiSiIyb,MAjSjIzb,MAiSgKyC,MAjShKzC,MAiS0LL,OAjS1LK,MAiSkN4C,MAAvT,EACAka,EAAkBpH,UAlSmF1V,MAkSrG,MAAkG8c,EAAlGnH,UAlSqG3V,eA+SrG,MAAMod,GAAc,IAAIzM,QAClB+M,GAAW,CACb,SAAU,eACV,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,eAChD,SAAU,eACV,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gBAepD,MAAMC,UAAiCb,EACnC3c,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASoJ,EACjB,EAELC,EAAyB7d,UAAzB,iDA7UqGE,MA6UgB2d,KAArHhgB,GAAqHggB,EAArH,KACAA,EAAyBjI,UA9U4E1V,MA8UrG,MAAyG2d,EAAzG9B,m9CA9UqG7b;;;;;;;;AA4VrG,MAAM4d,EACFzd,YAAY1D,EAAKC,EAAOmhB,GAAW,GAC/Bpd,KAAKhE,IAAMA,EACXgE,KAAK/D,MAAQA,EACb+D,KAAKhE,IAAMohB,EAAWphB,EAAI+C,QAAQ,QAAS,IAAIqF,OAASpI,EAAIoI,OAC5DpE,KAAK/D,MAAQmhB,EAAWnhB,EAAM8C,QAAQ,QAAS,IAAIqF,OAASnI,EAAMmI,OAClEpE,KAAK/D,MAAQ+D,KAAK/D,MAAM8C,QAAQ,IAAK,GACxC,EAEL,YAAiBhD,GACb,IAAIshB,SAActhB,EAClB,MAAa,WAATshB,EACQthB,EAAO2D,cAAgBvB,MAAS,QACnCpC,EAAO2D,cAAgBsS,IAAO,MAAQ,SAExCqL,CACV,CA2BD,WAAyB5f,EAAQ6f,GAC7B,IAAI3V,EAAO,GACX,MAAwB,QAApB4V,GAAQ9f,GACRA,EAAOe,QAAQgf,GAAS7V,EAAKrB,KAAKkX,IAGlCnZ,OAAOC,KAAK7G,GAAQe,QAASxC,IACzB2L,EAAKrB,KAAM,GAAEtK,KAAOyB,EAAOzB,KAA3B,GArBZ,YAA4B+E,EAAQuc,GAOhC,OAAOvc,EACFmK,IAAIuS,GACJzW,OAAOwW,KAAWA,GAClBtS,IATkBpD,IACfwV,IACAxV,EAAG7L,MAAQqhB,EAASxV,EAAG7L,QAEpB6L,IAMN4V,OAAOC,GAAgB,GAC/B,CAYUC,CAAmBjW,EAAM2V,EACnC,CAED,WAA0BxV,GACtB,MAAO9L,KAAQ6hB,GAAQ/V,EAAG9K,MAAM,KAChC,OAAO,IAAImgB,EAAgBnhB,EAAK6hB,EAAK7V,KAAK,KAC7C,CAED,YAAwBkD,EAAKsS,GACzB,OAAMA,EAAMxhB,MACRkP,EAAIsS,EAAMxhB,KAAOwhB,EAAMvhB,OAEpBiP;;;;;;;OACV,CASD,MAAM4S,WAAuBvK,KACzB7T,YAAY8T,EAAYE,EAAQC,EAASoK,EAAWC,EAASxC,EAAWyC,EAAiB1c,GAAcvD,IAAY,MAC/GqX,MAAM7B,EAAY,KAAME,EAAQC,GAChC3T,KAAK+d,UAAYA,EACjB/d,KAAKie,gBAAkBA,EACvBje,KAAK4T,cAAgB,UAChB5T,KAAKie,kBAGNje,KAAKie,gBAAkB,IAAIC,KAAQ1K,EAAYwK,EAASxC,IAE5Dxb,KAAKgR,OACL,MAAMjQ,GAAM,UAAGf,KAAKkU,cAAcpQ,aAAa,gBAAnC,QAA+C,GAC3D9D,KAAKme,eAAiBne,KAAKoe,cAAcrd,IACzCf,KAAKoc,SAAW7a,KAAgBmC,QAAiB1F,GACpD,CAEDsW,gBAAgBrY,GACZ,MAAM8E,EAASf,KAAKoe,cAAcniB,GAClC+D,KAAKie,gBAAgBI,QAAU,IAAKre,KAAKme,kBAAmBpd,GACxDf,KAAKoc,UACLpc,KAAKkD,oBAAoBnC,GAE7Bf,KAAKie,gBAAgBpC,WACxB,CAEDlb,cACIX,KAAKie,gBAAgBI,QAAUre,KAAKme,eACpCne,KAAKie,gBAAgBpC,WACxB,CAODuC,cAAcrd,GAEV,MAAMgd,EAAanM,IAAD,uBAAS5R,KAAK+d,UAAUT,SAASgB,YAAuB1M,UAAxD,QAAgE,IAClF,GAAI7Q,EACA,OAAQwc,GAAQxc,IAAD,IACN,SAAU,OAAOwd,GA/FtC,YAAsB9gB,EAAQ+gB,EAAY,KACtC,OAAOC,OAAOhhB,GACT2G,OACApH,MAAMwhB,GACNtT,IAAK0G,GAAQA,EAAIxN,QACjB4C,OAAO4K,GAAe,KAARA,EACtB,CAyFsD8M,CAAa3d,GAASgd,GAAvB,IACjC,QAAS,OAAOQ,GAAiBxd,EAAQgd,GACZ,QACzB,OAAOY,EAAgB5d,EAAQgd,GAGhD,MAAO,EACV,CAKDlC,YACI7b,KAAKie,gBAAgBpC,WACxB,EAELiC,GAAeze,UAAf,0BAA2Gye,IAheNve,MAgesCA,OAhetCA,MAgegEyb,MAhehEzb,MAge0Fyb,MAhe1Fzb,MAgeyHqf,MAhezHrf,MAgeuJA,OAhevJA,MAgesLA,OAhetLA,MAge+Muc,KAApT,IAheqGvc,MAgekQ4C,MAhelQ5C,MAge2RL,OAAhY,EACA4e,GAAe7I,UAjesF1V,MAierG,MAA+Fue,GAA/F5I,UAjeqG3V,SA+erG,MAAMsU,EAAS,CACX,UACA,aAAc,aAAc,aAAc,aAAc,aACxD,gBAAiB,gBAAiB,gBAAiB,gBACnD,gBAAiB,gBAAiB,gBAAiB,iBAYvD,MAAMgL,UAA8Bf,GAChCpe,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASA,CACjB,EASL,YAA0B9S,EAAQuc,GAO9B,OAAOvc,EACFmK,IAAIuS,GACJzW,OAAOwW,KAAWA,GAClBtS,IATkBpD,IACfwV,IACAxV,EAAG7L,MAAQqhB,EAASxV,EAAG7L,QAEpB6L,IAMN4V,OAAOC,GAAgB,GAC/B;;;;;;;OAnBDkB,EAAsBxf,UAAtB,iDArgBqGE,MAqgBasf,KAAlH3hB,GAAkH2hB,EAAlH,KACAA,EAAsB5J,UAtgB+E1V,MAsgBrG,MAAsGsf,EAAtGzD,8uBAtgBqG7b,SA4iBrG,MAAMuf,GAENA,EAAezf,UAAf,0BAA2Gyf,EAA3G,EACAA,EAAexf,UA/iBsFC,MA+iBrG,MAA4Guf,IAO5GA,EAAetf,UAtjBsFD,MAsjBrG,UAAsIH,OAAtI;;;;;;;;;;;;;;OC3jBA,MAAM2f,UAA2Bxc,KAC7BqS,YAAYvB,GAASnX,YACjB,MAAM8iB,GAAMhK,QAAe3B,GAC3B,MAAO,IACA2L,EACH9iB,QAAqB,SAAZA,EAAqBA,EAAU8iB,EAAI9iB,QAEnD,EAEL6iB,EAAmB1f,UAAnB,iDAAqGE,MAAUwf,KAA/GvS,GAA+GuS,EAA/G,KACAA,EAAmB/d,WADkFzB,MACrG,OAAmHwf,EAAnH9d,QAAmH8d,EAAnH,qBAAmJ,SAKnJ,MAAME,EAAW,CACb,WAAY,cAAe,cAAe,cAC1C,cAAe,cAAe,iBAAkB,iBAChD,iBAAkB,iBAAkB,iBAAkB,iBACtD,iBAAkB,kBAetB,MAAMC,UAAwB3L,KAC1B7T,YAAYyf,EAAOC,EAAY3L,EAAcE,EAAS0L,GAClDhK,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAKqf,QAAUA,EACfrf,KAAK4T,cAAgB,SACrB5T,KAAKgR,MACR,CACDsD,gBAAgBjB,GAAO,MAEnB,MAAMnX,EAAU6F,KADiBsd,QAAQtd,oBACH/B,KAAK0T,OAAOlQ,YAAYxD,KAAKkU,cAAe,WAAa,GAC/FlU,KAAKgU,WAAL,UAAkBsL,EAAS7e,IAAIvE,UAA/B,QAA2C,IAAImE,IAC/Cif,EAAS5e,IAAIxE,EAAS8D,KAAKgU,YACvBhU,KAAK+S,eAAiBM,IACtBrT,KAAKuU,UAAUlB,EAAO,CAAEnX,YACxB8D,KAAK+S,aAAeM,EAE3B,EAEL6L,EAAgB7f,UAAhB,0BAA4G6f,GA3CP3f,MA2CwCA,OA3CxCA,MA2CkEyb,MA3ClEzb,MA2C4Fwf,GA3C5Fxf,MA2C2Hyb,MA3C3Hzb,MA2C0JyC,MAA/P,EACAkd,EAAgBjK,UA5CqF1V,MA4CrG,MAAgG2f,EAAhGhK,UA5CqG3V,SAmDrG,MAAMggB,UAA+BL,EACjCxf,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASoL,CACjB,EAELM,EAAuBlgB,UAAvB,iDAzDqGE,MAyDcggB,KAAnH/S,GAAmH+S,EAAnH,KACAA,EAAuBtK,UA1D8E1V,MA0DrG,MAAuGggB,EAAvGnE,wxBA1DqG7b,SA+DrG,MAAM+f,EAAW,IAAIjf,IASfmf,EAAmB,CACrB,cAAe,KACf,eAAgB,KAChB,aAAc,KACd,gBAAiB;;;;;;;OAErB,MAAMC,UAA8Bld,KAChC7C,YAAYggB,EAASL,GACjBhK,QACArV,KAAK0f,QAAUA,EACf1f,KAAKqf,QAAUA,CAClB,CACDzK,YAAY+K,EAAUnL,GAClB,OAAImL,EAASrF,SAASsF,IAClBD,EAAWA,EAAS7U,MAAM,EAAG6U,EAAStiB,QAAQuiB,IA2N1D,YAAyB3jB,EAAO4jB,GAC5B,MAAOC,EAASC,GAAS9jB,EAAMe,MAAM,KAE/BgjB,EAASC,GAAS,IAAGA,IAC3B,IAAIC,EAAc,MAAOC,EAAeH,EAFzBD,GAASD,GAE+BM,EAAa,MACpE,MAAuB,QAAnBP,EACAO,EAAaJ,EAAMF,GAGnBI,EAAcF,EAAMF,GAEjB,CAAEO,OAAW,OAAMH,KAAeC,KAAgBC,IAC5D,CApOkBE,CAFPX,GAAWY,QAAUZ,EAAU3f,KAAKqf,QAAQzd,YAEX4S,EAAOqL,iBAGjC,EAEd,CACDpd,WAAWkd,EAAUhd,EAAS6R,GAC1B,MAAMnI,EAAQmI,EAAOnI,MACrB,GAAIsT,EAASrF,SAASsF,GAAiB,CACnCD,EAAWA,EAAS7U,MAAM,EAAG6U,EAAStiB,QAAQuiB,IAG9C,MAAMY,EAgMlB,YAA0BvkB,EAAO4jB,GAC7B,MAAOC,EAASC,GAAS9jB,EAAMe,MAAM,KAErC,IAAIyjB,EAAe,MAA+BC,EAAc,MAChE,MAAuB,QAAnBb,EACAa,EAAcZ,EAGdW,EAAeX,EAEZ,CAAEa,QAAY,OAAMF,KARZV,GAASD,KAQoCY,IAC/D,CA3MiCE,CAFtBjB,GAAWY,QAAUZ,EAAU3f,KAAKqf,QAAQzd,YAEK4S,EAAOqL,gBACxD7f,KAAK0f,QAAQrc,qBAAqBmd,EAAehM,EAAOnI,MAC3D,KACI,CACDsT,GAAWY,QAAUZ,EAAU3f,KAAKqf,QAAQzd,YAC5C+d,EAAW3f,KAAK6gB,gBAAgBlB,GAChC,MAAMmB,EAAWzU,EAAM9E,MAGjBwZ,EA8NlB,WAAqBpB,EAAUnL,GAC3B,MAAMxY,EAAMglB,GAAcxM,EAAOqL,eAAgBrL,EAAOyM,QAClDC,EAAU,IAAK1B,GACrB0B,SAAQllB,GAAO2jB,EACRuB;;;;;;;OACV,CAnO0BC,CAAYxB,EAAUnL,GACrCxU,KAAK0f,QAAQrc,qBAAqB0d,EAAQ1U,GAE1CrM,KAAK0f,QAAQrc,qBAAqBmc,EAAkB,CAACsB,GACxD,CACJ,CACDD,gBAAgB5kB,GACZ,OAAOI,OAAQJ,GAAiDA,EAAvC,GAAEA,IAAQ+D,KAAKqf,QAAQvd,aACnD,EAEL2d,EAAsBpgB,UAAtB,0BAAkHogB,GAxHblgB,MAwHoDyb,MAxHpDzb,MAwH8EyC,MAAnL,EACAyd,EAAsBze,WAzH+EzB,MAyHrG,OAAsHkgB,EAAtHxe,QAAsHwe,EAAtH,qBAAyJ,SAQzJ,MAAM2B,GAAW,CACb,cAAe,iBAAkB,iBAAkB,iBACnD,iBAAkB,iBAAkB,oBAAqB,oBACzD,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,qBAYzB,MAAMC,UAA2B9N,KAC7B7T,YAAYyf,EAAOmC,EAAMzB,EAAgBT,EAAY3L,EAAcE,GAC/D0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAKshB,KAAOA,EACZthB,KAAK6f,eAAiBA,EACtB7f,KAAKof,WAAaA,EAClBpf,KAAKihB,OAAS,MACdjhB,KAAK4T,cAAgB,aACrB5T,KAAKuhB,gBAAkB,IAAIhR,IAC3B,MAAMY,EAAgB,CAACnR,KAAK6f,eAAe5Y,OAAQjH,KAAKuhB,gBAAgBrb,gBACxElG,KAAKgR,KAAKG,GACVnR,KAAK2T,QACA7B,WAAW9R,KAAKkU,cAAe,UAC/BnN,MAAKqR,OAAUpY,KAAK+T,iBACpBjB,UAAU9S,KAAKwhB,eAAepO,KAAKpT,MAC3C,CAEGyhB,oBACA,MAAMC,EAAM1hB,KAAKkU,cAAcwI,SACzBiF,EAAS,GAEf,QAASvc,EAAIsc,EAAIrc,OAAQD,KACrBuc,EAAOvc,GAAKsc,EAAItc,GAEpB,OAAOuc,CACV,CAIDC,qBACI5hB,KAAK6hB,uBACL7hB,KAAKyS,eACR,CACDzJ,cACIqM,MAAMrM,cACFhJ,KAAKqH,UACLrH,KAAKqH,SAASya,YAErB,CAODN,eAAeO,GAGX,MAAMvlB,EAAYykB,EAFKhlB,MAEEe,MAAM,KAC/BgD,KAAKihB,OAASzkB,EAAU,GACnBD,UAAmBW,GAAKA,IAAM8C,KAAKihB,UACpCjhB,KAAKihB,OAAS,OAElBjhB,KAAKyS,eACR,CAID6B,gBAAgBrY,GAEZ,MAAMoQ,EAAQrM,KAAKyhB,cACdza,OAAOvI,GAAsB,IAAhBA,EAAGujB,UAAkBhiB,KAAKiiB,YAAYxjB,IACnD8F,KAAK,CAACkB,EAAGC,KACV,MAAMwc,GAAUliB,KAAK0T,OAAOlQ,YAAYiC,EAAG,SACrC0c,GAAUniB,KAAK0T,OAAOlQ,YAAYkC,EAAG,SAC3C,OAAIrJ,MAAM6lB,IAAW7lB,MAAM8lB,IAAWD,IAAWC,EACtC,EAGAD,EAASC,EAAS,GAAI,IAGrC,GAAI9V,EAAMhH,OAAS,EAAG,CAClB,MAAMwa,EAAiB7f,KAAK6f,eAAe5jB,MACrCglB,EAASjhB,KAAKihB,OACL,QAAXA,GAAuC,QAAnBpB,EACpB7f,KAAKgU,WAAaoO,GAEF,QAAf/f,GAA2C,QAAnBwd,EACzB7f,KAAKgU,WAAaqO,GAEF,WAAfhgB,GAA8C,QAAnBwd,EAC5B7f,KAAKgU,WAAasO,GAEF,WAAXrB,GAA0C,QAAnBpB,IAC5B7f,KAAKgU,WAAauO,GAEtBviB,KAAKuU,UAAUtY,EAAO,CAAE4jB,iBAAgBxT,QAAO4U,UAClD,CACJ,CAEDtgB,cACI,MAAM6hB,EAAWne,OAAOC,KAAKtE,KAAK8T,KAAKzO,OAAS,EAC1Cod,EAAgBD,EAAW,UAC7BxB,GAAchhB,KAAK6f,eAAe5jB,MAAO+D,KAAKihB,QAE9CuB,GACAnN,MAAM1U,cAGVX,KAAKof,WAAW/b,qBAAqB,CAAEmJ,CAACiW,GAAgB,IAAMziB,KAAKyhB,cACtE,CAEDQ,YAAYxkB,GACR,MAAMxB,EAAQ+D,KAAK2T,QAAQpC,SAAS9T,EAAQ,aAC5C,OAAiB,IAAVxB,QACQ4F,IAAV5F,GAA0E,SAAnD+D,KAAKof,WAAW5b,YAAY/F,EAAQ,UACnE,CACDokB,uBACI7hB,KAAKshB,KAAKoB,kBAAkB,YACbC,iBAAqB,MAC5B3iB,KAAKqH,SAAW,IAAIsb,iBAAkBC,IAM9BA,EAAUnc,KALYqB,GACdA,EAAG+a,YAAc/a,EAAG+a,WAAWxd,OAAS,GAC3CyC,EAAGgb,cAAgBhb,EAAGgb,aAAazd,OAAS,IAIjDrF,KAAKuhB,gBAAgB/Z,MAArB,GAGRxH,KAAKqH,SAASV,QAAQ3G,KAAKkU,cAAe,CAAE6O,WAAW,IAAvD,EAGX,EAEL1B,EAAmBhiB,UAAnB,0BAA+GgiB,GA/QV9hB,MA+Q8CA,OA/Q9CA,MA+QwEA,OA/QxEA,MA+Q8Fuc,MA/Q9Fvc,MA+Q4Hyb,MA/Q5Hzb,MA+QsJkgB,GA/QtJlgB,MA+QwLyb,MAA7R,EACAqG,EAAmBpM,UAhRkF1V,MAgRrG,MAAmG8hB,EAAnGnM,UAhRqG3V,SAoRrG,MAAMyjB,UAAkC3B,EACpC3hB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASuN,EACjB,EAEL4B,EAA0B3jB,UAA1B,iDA1RqGE,MA0RiByjB,KAAtHxW,GAAsHwW,EAAtH,KACAA,EAA0B/N,UA3R2E1V,MA2RrG,MAA0GyjB,EAA1G5H,s5BA3RqG7b,SAgSrG,MAAM6iB,GAAuB,IAAI/hB,IAC3BiiB,GAA0B,IAAIjiB,IAC9BgiB,GAAuB,IAAIhiB,IAC3BkiB,EAA0B,IAAIliB,IAC9Buf,EAAiB,QA0BvB,YAAuBC,EAAgBoB,GACnC,OAAQA,OACC,SACD,MAAO,oBACN,iBACD,MAAO,iBACN,MAGkD,QAEnD,MAA0B,QAAnBpB,EAA2B,cAAgB,eAJA,IACjD,cACD,MAA0B,QAAnBA,EAA2B,eAAiB,cAI9D,CAeD,MAAMoD,UAAyB1gB,KAC3B7C,YAAYuD,GACRoS,QACArV,KAAKiD,aAAeA,CACvB,CACD2R,YAAYvB,EAAOmB,GACf,IAAKoF,EAAMC,KAAWqJ,GAAc7P,EAAMrW,MAAM,KAC5C2c,EAAQuJ,EAAWlb,KAAK,KAE5B,MAAMxL,EAAagY,EAAOhY,UAAUa,QAAQ,WAAY,EAAM,SAAW,MACnE8lB,GAAMC,QAAiB5mB,GAAa,YAAc,aAClD6mB,GAAMD,QAAiB5mB,GAAa,YAAc,aAClD8mB,GAAU7E,OAAO9E,GAAOtc,QAAQ,SAAU,EAC1CkmB,GAAYD,IAAsB,SAAV3J,EACxB6J,GAAY/E,OAAO9E,GAAOtc,QAAQ,MAAO,IAAOimB,GAChDG,GAAWhF,OAAO9E,GAAOtc,QAAQ,OAAQ,GAAMohB,OAAO9E,GAAOtc,QAAQ,QAAS,GAChFohB,OAAO9E,GAAOtc,QAAQ,OAAQ,GAAMohB,OAAO9E,GAAOtc,QAAQ,OAAQ,GAClEohB,OAAO9E,GAAOtc,QAAQ,OAAQ,EAClC,IAAIqmB,GAAWJ,IAAWG,GAC1B7J,EAAgB,KAARA,EAAe,EAAIA,EAC3BC,EAAoB,KAAVA,EAAiB,EAAIA,EAI/B,MAAM8J,IAAW/J,IAASC,EAC1B,IAAImF,EAAM,GAYV,MAAMre,GAAc,CAChB,YAAa,KACb,aAAc,KACd,YAAa,KACb,aAAc,MAElB,OAAQgZ,GAAS,QACR,GACD,MAAMnY,IAA8D,IAAzCxB,KAAKiD,aAAazB,mBAC7CmY,EAAsB,QAAdnd,EAAsB,KAAQgF,GAAqB,gBAAkB,OAC7E,UACC,cACA,SACDoY,EAAO,EACPD,EAAQ,OACR,UACC,OACDA,EAAQ,OACR,UACC,WACDE,EAAS,EACTF,EAAQ,OACR,UACC,OACD,UACC,OACDC,EAAO,EACPC,EAAS,EACTF,EAAQ,OACR,eAGK+J,KAAYF,KAAcnnB,MAAMsd,KACjCA,GAAgB,KAGN,OAAVA,IACA+J,IAAU,GAEA,QAAV/J,IACAA,EAAQ,MAIRqF,EADJ4E,IACU7X,QAAapL,GAAa,CAC5B,YAAaiZ,EACb,cAAeC,EACf,aAAc6J,GAAU/J,EAAQ,UAI9B5N,QAAapL,GAAa,CAC5BkjB,KAAS,GAAEjK,KAAQC,KAAU6J,GAAU/J,EAAQ,WAK/D,OAAMqF,EAAI6E,MAAW7E,EAAI,eAEjBA,EADAsE,IACMvX,QAAapL,GAAa,CAC5B,YAAaiZ,EACb,cAAeC,EACf,aAAcF,KAIZ5N,QAAapL,GAAa,CAC5BkjB,KAAS,GAAEjK,KAAQC,KAAUF,OAK3B,OAAVA,GAA4B,QAAVA,GAA6B,kBAAVA,GAAuC,SAAVA,IAClEqF,EAAIqE,GAAOM,IAAYD,IAAW9J,EAAQD,EAAQ,KAClDqF,EAAImE,GAAOQ,KAAaJ,IAAa1J,EAAUF,EAAQ,MAGtDqF,EAAIqE,IAASrE,EAAImE,GAgBd3O,EAAO7Q,UACPqb,EAAIsE,GAAU,aAAe,QAAUtE,EAAImE,GACtCG,GAAUtE,EAAImE,GAAQ,GAAEvJ,KAAQC,KAAUmF,EAAImE,KAC9CG,GAAUtE,EAAIqE,GAAQ,GAAEzJ,KAAQC,KAAUmF,EAAIqE,MAjBnDrE,EADJ4E,IACU7X,QAAapL,GAAa,CAC5B,YAAaiZ,EACb,cAAeC,EACf,aAAcF,KAIZ5N,QAAapL,GAAa,CAC5BkjB,KAAS,GAAEjK,KAAQC,KAAUF,OAYlC5N,QAAaiT,EAAK,CAAE,aAAc,cAC5C,EAELiE,EAAiB5jB,UAAjB,0BAA6G4jB,GAreR1jB,MAqe0CyC,MAA/I,EACAihB,EAAiBjiB,WAteoFzB,MAserG,OAAiH0jB,EAAjHhiB,QAAiHgiB,EAAjH,qBAA+I,SAQ/I,MAAMa,GAAW,CACb,SAAU,YAAa,YAAa,YACpC,YAAa,YAAa,eAAgB,eAC1C,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,gBAcpB,MAAMC,UAAsBxQ,KACxB7T,YAAYyf,EAAOC,EAAYnc,EAAcwQ,EAAcE,GACvD0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAKiD,aAAeA,EACpBjD,KAAK2T,QAAUA,EACf3T,KAAK4T,cAAgB,OACrB5T,KAAKxD,eAAYqF,EACjB7B,KAAKvD,UAAOoF,EACZ7B,KAAKgkB,SAAW,IAChBhkB,KAAKikB,WAAa,IAClBjkB,KAAKgR,MACR,CACG6I,aAAW,OAAO7Z,KAAKikB,UAAa,CACpCpK,WAAO5d,GACP+D,KAAKikB,WAAahoB,GAAS,IAC3B+D,KAAKkkB,eACR,CACGtK,WAAS,OAAO5Z,KAAKgkB,QAAW,CAChCpK,SAAK3d,GACL+D,KAAKgkB,SAAW/nB,GAAS,IACzB+D,KAAKkkB,eACR,CACDC,WACQnkB,KAAKiU,gBACLjU,KAAK2T,QAAQ7B,WAAW9R,KAAKiU,cAAe,UACvClN,MAAKqR,OAAUpY,KAAK+T,iBACpBjB,UAAU9S,KAAKwhB,eAAepO,KAAKpT,OACxCA,KAAK2T,QAAQ7B,WAAW9R,KAAKkU,cAAe,gBACvCnN,MAAKqR,OAAUpY,KAAK+T,iBACpBjB,UAAU9S,KAAKkkB,cAAc9Q,KAAKpT,OAE9C,CAKDwhB,eAAeO,GAEX,MAAMqC,EAAcnD,EADGhlB,MACIe,MAAM,KACjCgD,KAAKxD,UAAY4nB,EAAY,GAC7BpkB,KAAKvD,UAA0BoF,IAAnBuiB,EAAY,IAAuC,SAAnBA,EAAY,GACxDpkB,KAAKyS,eACR,CAED6B,gBAAgBrY,GACZ,MAAMkF,GAAwD,IAAtCnB,KAAKiD,aAAa9B,qBACnBU,IAAnB7B,KAAKxD,YACLwD,KAAKxD,UAAYwD,KAAK6U,qBAAqB7U,KAAKiU,cAAe9S,SAEjDU,IAAd7B,KAAKvD,OACLuD,KAAKvD,KAAOuD,KAAK2D,QAAQ3D,KAAKiU,gBAElC,MAAMzX,EAAYwD,KAAKxD,UACjB6nB,EAAe7nB,EAAUuR,WAAW,OACpCpK,EAAU3D,KAAKvD,KACjB4nB,GAAgB1gB,EAChB3D,KAAKgU,WAAasQ,GAEjBjiB,IAAqBsB,EACtB3D,KAAKgU,WAAauQ,GAEZF,GAAgB1gB,EACtB3D,KAAKgU,WAAawQ,GAEZH,IAAiB1gB,IACvB3D,KAAKgU,WAAayQ,IAEtB,MAAM9K,EAAQ8E,OAAOxiB,GAAO8C,QAAQ,IAAK,IACnC+a,GAAQ4K,QAAc/K,EAAO3Z,KAAKgkB,SAAUhkB,KAAKikB,YACvDjkB,KAAKuU,UAAUuF,EAAM9R,KAAK,KAAM,CAAExL,YAAWmH,WAChD,CAEDugB,gBACI,MAAM/P,EAAiBnU,KAAKmU,eAC5B,QAAuBtS,IAAnBsS,EAA8B,CAC9B,MAAM2F,GAAQ4K,QAAcvQ,EAAiB,GAAInU,KAAKgkB,SAAUhkB,KAAKikB,YACrEjkB,KAAK2T,QAAQ9B,cAAc7R,KAAKkU,cAAelU,KAAK4T,cAAekG,EAAM9R,KAAK,KACjF,CACJ,EAEL+b,EAAc1kB,UAAd,0BAA0G0kB,GAhlBLxkB,MAglBoCA,OAhlBpCA,MAglB8Dyb,MAhlB9Dzb,MAglBwFyC,MAhlBxFzC,MAglBkH0jB,GAhlBlH1jB,MAglB+Iyb,MAApP,EACA+I,EAAc9O,UAjlBuF1V,MAilBrG,MAA8FwkB,EAA9FlQ,uEAjlBqGtU,SA8lBrG,MAAMolB,WAA6BZ,EAC/BrkB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASiQ,EACjB,EAELa,GAAqBtlB,UAArB,iDApmBqGE,MAomBYolB,MAAjHnY,GAAiHmY,GAAjH,KACAA,GAAqB1P,UArmBgF1V,MAqmBrG,MAAqGolB,GAArGvJ,osBArmBqG7b,SA0mBrG,MAAMglB,EAAe,IAAIlkB,IACnBokB,GAAkB,IAAIpkB,IACtBikB,GAAmB,IAAIjkB,IACvBmkB,EAAsB,IAAInkB;;;;;;;OAShC,MAAMukB,UAA8BriB,KAChCqS,YAAY3Y,GACR,MAAO,CAAEG,MAAQH,GAAS4oB,SAAS5oB,EAAO,KAAQ,GACrD,EAEL2oB,EAAsBvlB,UAAtB,iDA3nBqGE,MA2nBaqlB,KAAlHpY,GAAkHoY,EAAlH,KACAA,EAAsB5jB,WA5nB+EzB,MA4nBrG,OAAsHqlB,EAAtH3jB,QAAsH2jB,EAAtH,qBAAyJ,SAKzJ,MAAM3J,EAAW,CACb,cAAe,iBAAkB,iBAAkB,iBACnD,iBAAkB,iBAAkB,oBAAqB,oBACzD,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,qBAazB,MAAM6J,UAA2BvR,KAC7B7T,YAAYyf,EAAOC,EAAY3L,EAAcE,GACzC0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAK4T,cAAgB,aACrB5T,KAAKgU,WAAa+Q,EAClB/kB,KAAKgR,MACR,EAEL8T,EAAmBzlB,UAAnB,0BAA+GylB,GA1pBVvlB,MA0pB8CA,OA1pB9CA,MA0pBwEyb,MA1pBxEzb,MA0pBkGqlB,GA1pBlGrlB,MA0pBoIyb,MAAzO,EACA8J,EAAmB7P,UA3pBkF1V,MA2pBrG,MAAmGulB,EAAnG5P,UA3pBqG3V,SA+pBrG,MAAMwlB,EAAiB,IAAI1kB,IAC3B,MAAM2kB,UAAkCF,EACpCplB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASoH,CACjB,EAEL+J,EAA0B3lB,UAA1B,iDAtqBqGE,MAsqBiBylB,KAAtHxY,GAAsHwY,EAAtH,KACAA,EAA0B/P,UAvqB2E1V,MAuqBrG,MAA0GylB,EAA1G5J,s5BAvqBqG7b;;;;;;;;AAorBrG,MAAM0lB,UAA+B1iB,KACjC7C,YAAY2f,GACRhK,QACArV,KAAKqf,QAAUA,CAClB,CACDzK,YAAYsQ,EAAQ1Q,GAChB0Q,IAAWA,EAAS,KACpBA,GAAS3E,QAAU2E,EAAQllB,KAAKqf,QAAQzd,YACxC,MAAM4hB,EAAY/E,OAAOyG,GAAQ7nB,QAAQ,MAAO,IACnCohB,OAAOyG,GAAQ7nB,QAAQ,OAAQ,KAC9BmmB,IAAcnnB,OAAO6oB,KAC/BA,EAAU,GAAEA,MAEhB,MAAMC,EAAsB3Q,EAAO4Q,MAAQ,eAAiB,cAG5D,OAFehC,QAAiB5O,EAAOyM,QACnC,CAAE7b,CAAC+f,GAAsBD,GAAW,CAAE,aAAcA,EAE3D,EAELD,EAAuB5lB,UAAvB,0BAAmH4lB,GAvsBd1lB,MAusBsDyC,MAA3J,EACAijB,EAAuBjkB,WAxsB8EzB,MAwsBrG,OAAuH0lB,EAAvHhkB,QAAuHgkB,EAAvH,qBAA2J,SAQ3J,MAAMlJ,EAAW,CACb,eAAgB,kBAAmB,kBAAmB,kBACtD,kBAAmB,kBAAmB,qBAAsB,qBAC5D,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,sBAY1B,MAAMsJ,WAA4B9R,KAC9B7T,YAAYyf,EAAOU,EAAgBpM,EAAcE,EAASD,GACtD2B,MAAM8J,EAAO1L,EAAcC,EAAQC,GACnC3T,KAAK6f,eAAiBA,EACtB7f,KAAK4T,cAAgB,cACrB5T,KAAKgR,KAAK,CAAChR,KAAK6f,eAAe5Y,SAE3BjH,KAAKiU,eACLjU,KAAK2T,QACA7B,WAAW9R,KAAKiU,cAAe,cAC/BlN,MAAKqR,OAAUpY,KAAK+T,iBACpBjB,UAAU9S,KAAKyS,cAAcW,KAAKpT,MAE9C,CASDsU,gBAAgBrY,EAAQ,IAEpB,MAAMglB,EAASjhB,KAAK6U,qBAAqB7U,KAAKiU,eAAe,GACvDmR,EAAsC,QAA9BplB,KAAK6f,eAAe5jB,MACnB,QAAXglB,GAAoBmE,EACpBplB,KAAKgU,WAAasR,GAEF,QAAf9Y,GAAyB4Y,EAGV,WAAf5Y,GAA2B4Y,EAC5BplB,KAAKgU,WAAauR,GAEF,WAAXtE,IAAwBmE,IAC7BplB,KAAKgU,WAAawR,IANlBxlB,KAAKgU,WAAayR,GAQtBzlB,KAAKuU,UAAUtY,EAAQ,GAAI,CAAEglB,SAAQmE,SACxC,EAELC,GAAoBhmB,UAApB,0BAAgHgmB,IAzwBX9lB,MAywBgDA,OAzwBhDA,MAywB0Euc,MAzwB1Evc,MAywBwG0lB,GAzwBxG1lB,MAywB2Iyb,MAzwB3Izb,MAywB0Kyb,MAA/Q,EACAqK,GAAoBpQ,UA1wBiF1V,MA0wBrG,MAAoG8lB,GAApGnQ,UA1wBqG3V,SA8wBrG,MAAMmmB,UAAmCL,GACrC3lB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASkI,CACjB,EAEL2J,EAA2BrmB,UAA3B,iDApxBqGE,MAoxBkBmmB,KAAvHlZ,GAAuHkZ,EAAvH,KACAA,EAA2BzQ,UArxB0E1V,MAqxBrG,MAA2GmmB,EAA3GtK,g8BArxBqG7b,SA0xBrG,MAAM+lB,GAAwB,IAAIjlB,IAC5BklB,GAA2B,IAAIllB,IAC/BolB,GAAwB,IAAIplB,IAC5BmlB,GAA2B,IAAInlB;;;;;;;OASrC,MAAMslB,UAA8BpjB,KAChCqS,YAAYvB,GAER,MAAMtS,EAAS,GAEf,OAHAsS,EAAQA,GAAS,WAGTA,IACC,QACDtS,EAAO,cAAgB,aACvB,UACC,MACDA,EAAO,cAAgB,WACvB,cAEAA,EAAO,cAAgBsS,EAG/B,OAAOtS,CACV,EAEL4kB,EAAsBtmB,UAAtB,iDAzzBqGE,MAyzBaomB,KAAlHnZ,GAAkHmZ,EAAlH,KACAA,EAAsB3kB,WA1zB+EzB,MA0zBrG,OAAsHomB,EAAtH1kB,QAAsH0kB,EAAtH,qBAAyJ,SAKzJ,MAAM1I,GAAW,CACb,cAAe,iBAAkB,iBAAkB,iBACnD,iBAAkB,iBAAkB,oBAAqB,oBACzD,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,qBAazB,MAAM2I,WAA2BrS,KAC7B7T,YAAYyf,EAAOC,EAAY3L,EAAcE,GACzC0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAK4T,cAAgB,aACrB5T,KAAKgU,WAAa6R,GAClB7lB,KAAKgR,MACR,EAEL4U,GAAmBvmB,UAAnB,0BAA+GumB,IAx1BVrmB,MAw1B8CA,OAx1B9CA,MAw1BwEyb,MAx1BxEzb,MAw1BkGomB,GAx1BlGpmB,MAw1BoIyb,MAAzO,EACA4K,GAAmB3Q,UAz1BkF1V,MAy1BrG,MAAmGqmB,GAAnG1Q,UAz1BqG3V,SA61BrG,MAAMsmB,GAAiB,IAAIxlB,IAC3B,MAAMylB,UAAkCF,GACpClmB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASoJ,EACjB,EAEL6I,EAA0BzmB,UAA1B,iDAp2BqGE,MAo2BiBumB,KAAtHtZ,GAAsHsZ,EAAtH,KACAA,EAA0B7Q,UAr2B2E1V,MAq2BrG,MAA0GumB,EAA1G1K,s5BAr2BqG7b;;;;;;;;AAk3BrG,MAAMwmB,GAAgB,CAClB1F,OAAU,EACV2F,MAAS,OACTC,OAAU,OACV,YAAa,OACb,aAAc,QAElB,MAAMC,WAA6B3jB,KAC/BqS,YAAYlS,GACR,OAAOqjB,EACV,EAELG,GAAqB7mB,UAArB,iDA93BqGE,MA83BY2mB,MAAjH1Z,GAAiH0Z,GAAjH,KACAA,GAAqBllB,WA/3BgFzB,MA+3BrG,OAAqH2mB,GAArHjlB,QAAqHilB,GAArH,qBAAuJ,SAWvJ,MAAMC,UAA0B5S,KAC5B7T,YAAYyf,EAAOC,EAAY3L,EAAcE,GACzC0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAKgU,WAAaoS,GAClBpmB,KAAKuU,UAAU,GAClB,EAEL4R,EAAkB9mB,UAAlB,0BAA8G8mB,GAj5BT5mB,MAi5B4CA,OAj5B5CA,MAi5BsEyb,MAj5BtEzb,MAi5BgG2mB,IAj5BhG3mB,MAi5BiIyb,MAAtO,EACAmL,EAAkBlR,UAl5BmF1V,MAk5BrG,MAAkG4mB,EAAlG/K,4DAl5BqG7b,SAu5BrG,MAAM6mB,GAAgB,IAAI/lB;;;;;;;OAS1B,MAAMgmB,WAAgC9jB,KAClCqS,YAAY0R,EAAO9R,GACf,MAAMwK,EAAM,IAAKuH,EAAUC,GAAaF,EAAMtpB,MAAM,KAEpD,OAAQupB,OACC,SACDvH,EAAI,mBAAqB,SACzB,UACC,eACDA,EAAI,mBAAqB,eACzB,UACC,gBACDA,EAAI,mBAAqB,gBACzB,UACC,eACDA,EAAI,mBAAqB,eACzB,UACC,UACA,WACDA,EAAI,mBAAqB,WACzB,MAEC,QAEDA,EAAI,mBAAqB,aAIjC,OAAQwH,OACC,YACA,aACDxH,EAAI,eAAiBA,EAAI,iBAAmB,aAC5C,UACC,SACDA,EAAI,eAAiBA,EAAI,iBAAmB,SAC5C,UACC,UACA,WACDA,EAAI,eAAiBA,EAAI,iBAAmB,WAC5C,UACC,gBACDA,EAAI,iBAAmB,gBACvBA,EAAI,eAAiB,UACrB,UACC,eACDA,EAAI,iBAAmB,eACvBA,EAAI,eAAiB,UACrB,UACC,WACDA,EAAI,iBAAmB,UACvBA,EAAI,eAAiB,WACrB,MACC,QAEDA,EAAI,eAAiBA,EAAI,iBAAmB,UAGpD,OAAOjT,QAAaiT,EAAK,CACrB9iB,QAAWsY,EAAO5X,OAAS,cAAgB,OAC3C,iBAAkB4X,EAAOyM,OACzB,aAAc,aACd,YAA2B,YAAduF,GACT,EAACpD,MAAiB5O,EAAOyM,QAAmB,KAAT,OAAgB,KACvD,aAA4B,YAAduF,IACVpD,QAAiB5O,EAAOyM,QAAU,OAAgB,MAE7D,EAELoF,GAAwBhnB,UAAxB,iDAp+BqGE,MAo+Be8mB,MAApH7Z,GAAoH6Z,GAApH,KACAA,GAAwBrlB,WAr+B6EzB,MAq+BrG,OAAwH8mB,GAAxHplB,QAAwHolB,GAAxH,qBAA6J,SAK7J,MAAMxS,GAAS,CACX,gBAAiB,mBAAoB,mBAAoB,mBACzD,mBAAoB,mBAAoB,sBAAuB,sBAC/D,sBAAuB,sBAAuB,sBAAuB,sBACrE,sBAAuB,uBAiB3B,MAAM4S,UAA6BlT,KAC/B7T,YAAYyf,EAAOC,EAAY3L,EAAcE,GACzC0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAK4T,cAAgB,eACrB5T,KAAKihB,OAAS,MACdjhB,KAAKpD,QAAS,EACdoD,KAAKgR,OACLhR,KAAK2T,QAAQ7B,WAAW9R,KAAKkU,cAAe,UACvCnN,MAAKqR,OAAUpY,KAAK+T,iBACpBjB,UAAU9S,KAAKwhB,eAAepO,KAAKpT,MAC3C,CAODsU,gBAAgBrY,GACZ,MAAMglB,EAASjhB,KAAKihB,QAAU,MACxBrkB,EAASoD,KAAKpD,OACL,QAAXqkB,GAAoBrkB,EACpBoD,KAAKgU,WAAa0S,GAEF,QAAfla,GAAyB5P,EAGV,gBAAf4P,GAAgC5P,EACjCoD,KAAKgU,WAAa2S,GAEF,gBAAfna,GAAiC5P,EAGlB,WAAf4P,GAA2B5P,EAC5BoD,KAAKgU,WAAa4S,GAEF,WAAfpa,GAA4B5P,EAGb,mBAAf4P,GAAmC5P,EACpCoD,KAAKgU,WAAa6S,GAEF,mBAAX5F,IAAgCrkB,IACrCoD,KAAKgU,WAAa8S,IANlB9mB,KAAKgU,WAAa+S,GANlB/mB,KAAKgU,WAAagT,GANlBhnB,KAAKgU,WAAaiT,GAoBtBjnB,KAAKuU,UAAUtY,EAAO,CAAEglB,SAAQrkB,UACnC,CAID4kB,eAAeO,GACX,MAAMmF,EAAanF,EAAQ9lB,MAAMe,MAAM,KACvCgD,KAAKihB,OAASiG,EAAW,GACzBlnB,KAAKpD,OAASmlB,EAAQ9lB,MAAMoT,SAAS,UAChC9S,UAAmBW,GAAKA,IAAM8C,KAAKihB,UACpCjhB,KAAKihB,OAAS,OAElBjhB,KAAKyS,eACR,EAELgU,EAAqBpnB,UAArB,0BAAiHonB,GA1jCZlnB,MA0jCkDA,OA1jClDA,MA0jC4Eyb,MA1jC5Ezb,MA0jCsG8mB,IA1jCtG9mB,MA0jC0Iyb,MAA/O,EACAyL,EAAqBxR,UA3jCgF1V,MA2jCrG,MAAqGknB,EAArGvR,UA3jCqG3V,SA+jCrG,MAAM4nB,WAAoCV,EACtC/mB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASA,EACjB,EAELsT,GAA4B9nB,UAA5B,iDArkCqGE,MAqkCmB4nB,MAAxH3a,GAAwH2a,GAAxH,KACAA,GAA4BlS,UAtkCyE1V,MAskCrG,MAA4G4nB,GAA5G/L,0+BAtkCqG7b,SA2kCrG,MAAM0nB,GAA6B,IAAI5mB,IACjC0mB,GAA2B,IAAI1mB,IAC/B2mB,GAAgC,IAAI3mB,IACpCymB,GAA8B,IAAIzmB,IAClCqmB,GAAmC,IAAIrmB,IACvCumB,GAAiC,IAAIvmB,IACrCsmB,GAAsC,IAAItmB,IAC1CwmB,GAAoC,IAAIxmB;;;;;;;OAwB9C,MAAM+mB,GAENA,EAAW/nB,UAAX,0BAAuG+nB,EAAvG,EACAA,EAAW9nB,UA7mC0FC,MA6mCrG,MAAwG6nB,IAexGA,EAAW5nB,UA5nC0FD,MA4nCrG,UAA8HH,KAAYioB,OAA1I;;;;;;;;;;;;;;OCzoCA,MAAMC,EAAc,UACdC,EAAc,UACpB,MAAMC,UAA8BjlB,KAChCqS,YAAYvB,GACR,OAuDR,WAAoBiT,EAAQ,IACxB,MAAMtH,EAAM,IAAKyI,EAASC,GAAcpB,EAAMtpB,MAAM,KAEpD,OAAQyqB,OACC,MACDzI,EAAI,gBAAkB,MACtB,UACC,SACDA,EAAI,gBAAkB,SACtB,UACC,UACDA,EAAI,gBAAkB,UACtB,UACC,QACDA,EAAI,gBAAkB,QACtB,cAEAA,EAAI,gBAAkBsI,EAI9B,OAAQI,OACC,MACD1I,EAAI,cAAgB,MACpB,UACC,SACDA,EAAI,cAAgB,SACpB,UACC,UACDA,EAAI,cAAgB,UACpB,UACC,QACDA,EAAI,cAAgB,QACpB,cAEAA,EAAI,cAAgBuI,EAG5B,OAAOvI,CACV;;;;;;;OA9Fc2I,CAAWtU,GAASiU,EAC9B,EAELE,EAAsBnoB,UAAtB,iDAAwGE,MAAUioB,KAAlHI,GAAkHJ,EAAlH,KACAA,EAAsBxmB,WADkFzB,MACxG,OAAsHioB,EAAtHvmB,QAAsHumB,EAAtH,qBAAyJ,SAKzJ,MAAMK,WAA2BtU,KAC7B7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C0B,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAK4T,cAAgB,aACrB5T,KAAKgU,WAAa8T,EAClB9nB,KAAKgR,MACR,EAEL6W,GAAmBxoB,UAAnB,0BAA+GwoB,IAdPtoB,MAc2CA,OAd3CA,MAcqEioB,GAdrEjoB,MAcuGyb,MAdvGzb,MAciIyb,MAAzO,EACA6M,GAAmB5S,UAfqF1V,MAexG,MAAmGsoB,GAAnG3S,UAfwG3V,SAmBxG,MAAMuoB,EAAa,IAAIznB,IACjB0nB,EAAW,CACb,cACA,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBACxE,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,qBAgBnE,MAAMC,UAAkCH,GACpCnoB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASkU,CACjB,EAELC,EAA0B3oB,UAA1B,iDA9CwGE,MA8CcyoB,KAAtHJ,GAAsHI,EAAtH,KACAA,EAA0B/S,UA/C8E1V,MA+CxG,MAA0GyoB,EAA1G5M,s5BA/CwG7b,SAoGxG,MAAM0oB,GAAiB,QACjBC,EAAkB,UACxB,MAAMC,UAAqC5lB,KACvCqS,YAAYvB,EAAOmB,GACf,OAsER,YAAoB8R,EAAO1pB,GACvB,MAAMoiB,EAAM,IAAKuH,EAAUC,GAAaF,EAAMtpB,MAAM,KAEpD,OAAQupB,OACC,SACDvH,EAAI,iBAAmB,SACvB,UACC,eACDA,EAAI,iBAAmB,eACvB,UACC,gBACDA,EAAI,iBAAmB,gBACvB,UACC,eACDA,EAAI,iBAAmB,eACvB,UACC,MACDA,EAAI,iBAAmB,MACvB,UACC,QACDA,EAAI,iBAAmB,QACvB,UACC,UACDA,EAAI,iBAAmB,UACvB,cAEAA,EAAI,iBAAmBiJ,GAI/B,OAAQzB,OACC,QACDxH,EAAI,eAAiB,QACrB,UACC,SACDA,EAAI,eAAiB,SACrB,UACC,MACDA,EAAI,eAAiB,MACrB,UACC,UACDA,EAAI,eAAiB,UACrB,cAEAA,EAAI,eAAiBkJ,EAG7BlJ,SAAI9iB,QAAaU,EAAS,cAAgB,OACnCoiB;;;;;;;OACV,CAvHcoJ,CAAW/U,GAAU,SAAoB6U,IAAmB1T,EAAO5X,OAC7E,EAELurB,EAA6B9oB,UAA7B,iDA3GwGE,MA2GiB4oB,KAAzHP,GAAyHO,EAAzH,KACAA,EAA6BnnB,WA5G2EzB,MA4GxG,OAA6H4oB,EAA7HlnB,QAA6HknB,EAA7H,qBAAuK,SAKvK,MAAME,UAAkC9U,KACpC7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C0B,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAK4T,cAAgB,qBACrB5T,KAAKsoB,SAAU,EACftoB,KAAKgR,MACR,CACGpU,aAAW,OAAOoD,KAAKsoB,OAAU,CACjC1rB,WAAOgV,GAAO5R,KAAKsoB,SAAUtL,QAAsBpL,EAAO,CAI9D0C,gBAAgBrY,GACZ+D,KAAKgU,WAAahU,KAAKpD,OAAS2rB,GAA0BC,GAC1DxoB,KAAKuU,UAAUtY,EAAO,CAAEW,OAAQoD,KAAKpD,QACxC,EAELyrB,EAA0BhpB,UAA1B,0BAAsHgpB,GAlId9oB,MAkIyDA,OAlIzDA,MAkImF4oB,GAlInF5oB,MAkI4Hyb,MAlI5Hzb,MAkIsJyb,MAA9P,EACAqN,EAA0BpT,UAnI8E1V,MAmIxG,MAA0G8oB,EAA1GxU,gDAnIwGtU,SA0IxG,MAAMipB,GAAoB,IAAInoB,IACxBkoB,GAA0B,IAAIloB,IAC9BooB,GAAW,CACb,iBACA,oBAAqB,oBAAqB,oBAC1C,oBAAqB,oBAAqB,uBAC1C,uBAAwB,uBAAwB,uBAChD,uBAAwB,uBAAwB,uBAChD,wBAgBJ,MAAMC,UAAyCL,EAC3C3oB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAAS4U,EACjB,EAELC,EAAiCrpB,UAAjC,iDAxKwGE,MAwKqBmpB,KAA7Hd,GAA6Hc,EAA7H,KACAA,EAAiCzT,UAzKuE1V,MAyKxG,MAAiHmpB,EAAjHtN,ohCAzKwG7b,SAwOxG,MAAMopB,GAAe,QACfC,GAAgB,UACtB,MAAMC,UAAkCtmB,KACpCqS,YAAYvB,EAAOmB,GACf,OAsER,YAAkB8R,EAAO1pB,GACrB,MAAMoiB,EAAM,IAAKuH,EAAUC,GAAaF,EAAMtpB,MAAM,KAEpD,OAAQupB,OACC,aACA,mBACA,oBACA,mBACA,UACA,YACA,UACDvH,EAAI,mBAAqBuH,EACzB,cAEAvH,EAAI,mBAAqB2J,GAIjC,OAAQnC,OACC,YACA,aACA,UACA,UACDxH,EAAI,iBAAmBwH,EACvB,cAEAxH,EAAI,iBAAmB4J,GAG/B5J,SAAI9iB,QAAaU,EAAS,cAAgB,OACnCoiB;;;;;;;OACV,CArGc8J,CAASzV,GAAU,SAAkBuV,KAAiBpU,EAAO5X,OACvE,EAELisB,EAA0BxpB,UAA1B,iDA/OwGE,MA+OcspB,KAAtHjB,GAAsHiB,EAAtH,KACAA,EAA0B7nB,WAhP8EzB,MAgPxG,OAA0HspB,EAA1H5nB,QAA0H4nB,EAA1H,qBAAiK,SAKjK,MAAME,UAA+BxV,KACjC7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C0B,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAK4T,cAAgB,kBACrB5T,KAAKsoB,SAAU,EACftoB,KAAKgR,MACR,CACGpU,aAAW,OAAOoD,KAAKsoB,OAAU,CACjC1rB,WAAOgV,GAAO5R,KAAKsoB,SAAUtL,QAAsBpL,EAAO,CAI9D0C,gBAAgBrY,GACZ+D,KAAKgU,WAAahU,KAAKpD,OAASosB,GAAuBC,GACvDjpB,KAAKuU,UAAUtY,EAAO,CAAEW,OAAQoD,KAAKpD,QACxC,EAELmsB,EAAuB1pB,UAAvB,0BAAmH0pB,GAtQXxpB,MAsQmDA,OAtQnDA,MAsQ6EspB,GAtQ7EtpB,MAsQmHyb,MAtQnHzb,MAsQ6Iyb,MAArP,EACA+N,EAAuB9T,UAvQiF1V,MAuQxG,MAAuGwpB,EAAvGlV,gDAvQwGtU,SA8QxG,MAAM0pB,GAAiB,IAAI5oB,IACrB2oB,GAAuB,IAAI3oB,IAC3B6oB,EAAW,CACb,cACA,iBAAkB,iBAAkB,iBACpC,iBAAkB,iBAAkB,oBACpC,oBAAqB,oBAAqB,oBAC1C,oBAAqB,oBAAqB,oBAC1C,qBAgBJ,MAAMC,UAAsCJ,EACxCrpB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASqV,CACjB,EAELC,EAA8B9pB,UAA9B,iDA5SwGE,MA4SkB4pB,KAA1HvB,GAA0HuB,EAA1H,KACAA,EAA8BlU,UA7S0E1V,MA6SxG,MAA8G4pB,EAA9G/N,s5BA7SwG7b,SA2VxG,MAAM6pB,UAA6B7mB,KAC/BqS,YAAYvB,GACR,MAAO,CAAE,YAAaA,GAHN,OAInB,EAEL+V,EAAqB/pB,UAArB,iDAhWwGE,MAgWS6pB,KAAjHxB,GAAiHwB,EAAjH,KACAA,EAAqBpoB,WAjWmFzB,MAiWxG,OAAqH6pB,EAArHnoB,QAAqHmoB,EAArH,qBAAuJ,SAKvJ,MAAMC,UAA0B9V,KAC5B7T,YAAYyf,EAAOC,EAAY3L,EAAcE,GACzC0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAK4T,cAAgB,YACrB5T,KAAKgU,WAAasV,EAClBtpB,KAAKgR,MACR,EAELqY,EAAkBhqB,UAAlB,0BAA8GgqB,GA9WN9pB,MA8WyCA,OA9WzCA,MA8WmEyb,MA9WnEzb,MA8W6F6pB,GA9W7F7pB,MA8W8Hyb,MAAtO,EACAqO,EAAkBpU,UA/WsF1V,MA+WxG,MAAkG8pB,EAAlGnU,UA/WwG3V,SAmXxG,MAAM+pB,EAAgB,IAAIjpB,IACpBkpB,EAAW,CACb,SACA,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gBAapD,MAAMC,UAAiCH,EACnC3pB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAAS0V,CACjB,EAELC,EAAyBnqB,UAAzB,iDA3YwGE,MA2YaiqB,KAArH5B,GAAqH4B,EAArH,KACAA,EAAyBvU,UA5Y+E1V,MA4YxG,MAAyGiqB,EAAzGpO,osBA5YwG7b,SA2ZxG,MAAMkqB,UAA6BlnB,KAC/BqS,YAAYvB,EAAOmB,GACf,MAAMkV,GAASrW,GAJC,QAIyBrW,MAH/B,KAGgDkO,IAAIS,GAAM,IAAGA,EAAEvH,WACzE,MAAO,CACHlI,QAAWsY,EAAO5X,OAAS,cAAgB,OAC3C,sBAAuB8sB,EAAM1hB,KAAK,KAEzC,EAELyhB,EAAqBpqB,UAArB,iDApawGE,MAoaSkqB,KAAjH7B,GAAiH6B,EAAjH,KACAA,EAAqBzoB,WAramFzB,MAqaxG,OAAqHkqB,EAArHxoB,QAAqHwoB,EAArH,qBAAuJ,SAKvJ,MAAME,WAA2BpW,KAC7B7T,YAAYyf,EAAOC,EAAY3L,EAAcE,GACzC0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAK4T,cAAgB,aACrB5T,KAAKsoB,SAAU,EACftoB,KAAKgR,MACR,CACGpU,aAAW,OAAOoD,KAAKsoB,OAAU,CACjC1rB,WAAOgV,GAAO5R,KAAKsoB,SAAUtL,QAAsBpL,EAAO,CAI9D0C,gBAAgBrY,GACZ+D,KAAKgU,WAAahU,KAAKpD,OAASgtB,EAAmBC,GACnD7pB,KAAKuU,UAAUtY,EAAO,CAAEW,OAAQoD,KAAKpD,QACxC,EAEL+sB,GAAmBtqB,UAAnB,0BAA+GsqB,IA3bPpqB,MA2b2CA,OA3b3CA,MA2bqEyb,MA3brEzb,MA2b+FkqB,GA3b/FlqB,MA2bgIyb,MAAxO,EACA2O,GAAmB1U,UA5bqF1V,MA4bxG,MAAmGoqB,GAAnG9V,gDA5bwGtU,SAmcxG,MAAMsqB,GAAa,IAAIxpB,IACjBupB,EAAmB,IAAIvpB,IACvB4e,GAAW,CACb,UACA,aAAc,aAAc,aAAc,aAAc,aACxD,gBAAiB,gBAAiB,gBAAiB,gBACnD,gBAAiB,gBAAiB,gBAAiB,iBAavD,MAAM6K,WAAkCH,GACpCjqB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASoL,EACjB,EAEL6K,GAA0BzqB,UAA1B,iDA5dwGE,MA4dcuqB,MAAtHlC,GAAsHkC,GAAtH,KACAA,GAA0B7U,UA7d8E1V,MA6dxG,MAA0GuqB,GAA1G1O,8uBA7dwG7b,SA2exG,MAAMwqB,UAA6BxnB,KAC/BqS,YAAYvB,EAAOmB,GACf,IAAKhY,EAAWwtB,IAAU3W,GAHV,WAGoCrW,MAAM,KAC1D,MAAkB,WAAdR,GAAwC,QAAdA,GAAqC,UAAdA,IACjDA,EAAY,OAEhBwtB,EAAmB,UAAVA,GAAmC,UAAdxtB,EAAyB,SAAW,GAC3D,CACHN,QAAWsY,EAAO5X,OAAS,cAAgB,OAC3C,iBAAkBJ,EAAYwtB,EAErC,EAELD,EAAqB1qB,UAArB,iDAxfwGE,MAwfSwqB,KAAjHnC,GAAiHmC,EAAjH,KACAA,EAAqB/oB,WAzfmFzB,MAyfxG,OAAqHwqB,EAArH9oB,QAAqH8oB,EAArH,qBAAuJ,SAKvJ,MAAME,WAA0B1W,KAC5B7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C0B,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAKsoB,SAAU,EACftoB,KAAK4T,cAAgB,YACrB5T,KAAKgR,MACR,CACGpU,aAAW,OAAOoD,KAAKsoB,OAAU,CACjC1rB,WAAOgV,GAAO5R,KAAKsoB,SAAUtL,QAAsBpL,EAAO,CAI9D0C,gBAAgBrY,GACZ+D,KAAKgU,WAAahU,KAAKpD,OAASstB,GAAkBC,GAClDnqB,KAAKuU,UAAUtY,EAAO,CAAEW,OAAQoD,KAAKpD,QACxC,EAELqtB,GAAkB5qB,UAAlB,0BAA8G4qB,IA/gBN1qB,MA+gByCA,OA/gBzCA,MA+gBmEwqB,GA/gBnExqB,MA+gBoGyb,MA/gBpGzb,MA+gB8Hyb,MAAtO,EACAiP,GAAkBhV,UAhhBsF1V,MAghBxG,MAAkG0qB,GAAlGpW,gDAhhBwGtU,SAuhBxG,MAAM4qB,GAAY,IAAI9pB,IAChB6pB,GAAkB,IAAI7pB,IACtB+gB,GAAW,CACb,SACA,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gBAapD,MAAMgJ,WAAiCH,GACnCvqB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASuN,EACjB,EAELgJ,GAAyB/qB,UAAzB,iDAhjBwGE,MAgjBa6qB,MAArHxC,GAAqHwC,GAArH,KACAA,GAAyBnV,UAjjB+E1V,MAijBxG,MAAyG6qB,GAAzGhP,osBAjjBwG7b,SA+jBxG,MAAM8qB,UAA+B9nB,KACjCqS,YAAYvB,GACR,MAAO,CAAE,cAAeA,GAHR,OAInB,EAELgX,EAAuBhrB,UAAvB,iDApkBwGE,MAokBW8qB,KAAnHzC,GAAmHyC,EAAnH,KACAA,EAAuBrpB,WArkBiFzB,MAqkBxG,OAAuH8qB,EAAvHppB,QAAuHopB,EAAvH,qBAA2J,SAK3J,MAAMC,WAA4B/W,KAC9B7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C0B,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAK4T,cAAgB,cACrB5T,KAAKgU,WAAauW,GAClBvqB,KAAKgR,MACR,EAELsZ,GAAoBjrB,UAApB,0BAAgHirB,IAllBR/qB,MAklB6CA,OAllB7CA,MAklBuE8qB,GAllBvE9qB,MAklB0Gyb,MAllB1Gzb,MAklBoIyb,MAA5O,EACAsP,GAAoBrV,UAnlBoF1V,MAmlBxG,MAAoG+qB,GAApGpV,UAnlBwG3V,SAulBxG,MAAMgrB,GAAc,IAAIlqB,IAClByjB,GAAW,CACb,WACA,cAAe,cAAe,cAAe,cAAe,cAC5D,iBAAkB,iBAAkB,iBAAkB,iBACtD,iBAAkB,iBAAkB,iBAAkB,kBAa1D,MAAM0G,UAAmCF,GACrC5qB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASiQ,EACjB,EAEL0G,EAA2BnrB,UAA3B,iDA/mBwGE,MA+mBeirB,KAAvH5C,GAAuH4C,EAAvH,KACAA,EAA2BvV,UAhnB6E1V,MAgnBxG,MAA2GirB,EAA3GpP,wxBAhnBwG7b,SA+nBxG,MAAMkrB,WAAgCloB,KAClCqS,YAAYvB,EAAOmB,GAEf,IAAIkW,GAAO,GADXrX,EAAQA,GAJQ,QAMNiH,SALO,OAMbjH,EAAQA,EAAM4G,UAAU,EAAG5G,EAAMhW,QANpB,MAObqtB,GAAO,GAEX,MAAM1L,EAAM,CACR9iB,QAAWsY,EAAO5X,OAAS,cAAgB,OAC3C,oBAAqB,GACrB,wBAAyB,IAG7BoiB,SADa0L,EAAO,oBAAsB,yBAC/BrX,EACJ2L,CACV,EAELyL,GAAwBprB,UAAxB,iDAjpBwGE,MAipBYkrB,MAApH7C,GAAoH6C,GAApH,KACAA,GAAwBzpB,WAlpBgFzB,MAkpBxG,OAAwHkrB,GAAxHxpB,QAAwHwpB,GAAxH,qBAA6J,SAK7J,MAAME,WAA6BpX,KAC/B7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C0B,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAK4T,cAAgB,eACrB5T,KAAKsoB,SAAU,EACftoB,KAAKgR,MACR,CACGpU,aAAW,OAAOoD,KAAKsoB,OAAU,CACjC1rB,WAAOgV,GAAO5R,KAAKsoB,SAAUtL,QAAsBpL,EAAO,CAI9D0C,gBAAgBrY,GACZ+D,KAAKgU,WAAahU,KAAKpD,OAASguB,GAAqBC,GACrD7qB,KAAKuU,UAAUtY,EAAO,CAAEW,OAAQoD,KAAKpD,QACxC,EAEL+tB,GAAqBtrB,UAArB,0BAAiHsrB,IAxqBTprB,MAwqB+CA,OAxqB/CA,MAwqByEkrB,IAxqBzElrB,MAwqB6Gyb,MAxqB7Gzb,MAwqBuIyb,MAA/O,EACA2P,GAAqB1V,UAzqBmF1V,MAyqBxG,MAAqGorB,GAArG9W,gDAzqBwGtU,SAgrBxG,MAAMsrB,GAAe,IAAIxqB,IACnBuqB,GAAqB,IAAIvqB,IACzB4a,GAAW,CACb,YACA,eAAgB,eAAgB,eAAgB,eAAgB,eAChE,kBAAmB,kBAAmB,kBAAmB,kBACzD,kBAAmB,kBAAmB,kBAAmB,mBAc7D,MAAM6P,WAAoCH,GACtCjrB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASoH,EACjB,EAEL6P,GAA4BzrB,UAA5B,iDA1sBwGE,MA0sBgBurB,MAAxHlD,GAAwHkD,GAAxH,KACAA,GAA4B7V,UA3sB4E1V,MA2sBxG,MAA4GurB,GAA5G1P,k0BA3sBwG7b,SAytBxG,MAAMwrB,UAA4BxoB,KAC9BqS,YAAYvB,EAAOmB,GACf,MAAO,CACHtY,QAAWsY,EAAO5X,OAAS,cAAgB,OAC3C,WAAYyW,GALA,IAOnB,EAEL0X,EAAoB1rB,UAApB,iDAjuBwGE,MAiuBQwrB,KAAhHnD,GAAgHmD,EAAhH,KACAA,EAAoB/pB,WAluBoFzB,MAkuBxG,OAAoHwrB,EAApH9pB,QAAoH8pB,EAApH,qBAAqJ,SAKrJ,MAAMC,UAAyBzX,KAC3B7T,YAAYyf,EAAOC,EAAY3L,EAAcE,GACzC0B,MAAM8J,EAAO1L,EAAc2L,EAAYzL,GACvC3T,KAAK4T,cAAgB,WACrB5T,KAAKsoB,SAAU,EACftoB,KAAKgR,MACR,CACGpU,aAAW,OAAOoD,KAAKsoB,OAAU,CACjC1rB,WAAOgV,GAAO5R,KAAKsoB,SAAUtL,QAAsBpL,EAAO,CAI9D0C,gBAAgBrY,GACZ+D,KAAKgU,WAAahU,KAAKpD,OAASquB,EAAiBC,EACjDlrB,KAAKuU,UAAUtY,EAAO,CAAEW,OAAQoD,KAAKpD,QACxC,EAELouB,EAAiB3rB,UAAjB,0BAA6G2rB,GAxvBLzrB,MAwvBuCA,OAxvBvCA,MAwvBiEyb,MAxvBjEzb,MAwvB2FwrB,GAxvB3FxrB,MAwvB2Hyb,MAAnO,EACAgQ,EAAiB/V,UAzvBuF1V,MAyvBxG,MAAiGyrB,EAAjGnX,gDAzvBwGtU,SAgwBxG,MAAM2rB,EAAW,IAAI7qB,IACf4qB,EAAiB,IAAI5qB,IACrB0b,EAAW,CACb,QACA,WAAY,WAAY,WAAY,WAAY,WAChD,cAAe,cAAe,cAAe,cAC7C,cAAe,cAAe,cAAe,eAcjD,MAAMoP,UAAgCH,EAClCtrB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASkI,CACjB,EAELoP,EAAwB9rB,UAAxB,iDA1xBwGE,MA0xBY4rB,KAApHvD,GAAoHuD,EAApH,KACAA,EAAwBlW,UA3xBgF1V,MA2xBxG,MAAwG4rB,EAAxG/P,0pBA3xBwG7b,SAyyBxG,MAAM6rB,UAA4B7oB,KAC9BqS,YAAYvB,GACR,MAAO,CAAE,WAAYA,GAHL,OAInB,EAEL+X,EAAoB/rB,UAApB,iDA9yBwGE,MA8yBQ6rB,KAAhHxD,GAAgHwD,EAAhH,KACAA,EAAoBpqB,WA/yBoFzB,MA+yBxG,OAAoH6rB,EAApHnqB,QAAoHmqB,EAApH,qBAAqJ,SAKrJ,MAAMC,UAAyB9X,KAC3B7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C0B,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAK4T,cAAgB,WACrB5T,KAAKgU,WAAasX,EAClBtrB,KAAKgR,MACR,EAELqa,EAAiBhsB,UAAjB,0BAA6GgsB,GA5zBL9rB,MA4zBuCA,OA5zBvCA,MA4zBiE6rB,GA5zBjE7rB,MA4zBiGyb,MA5zBjGzb,MA4zB2Hyb,MAAnO,EACAqQ,EAAiBpW,UA7zBuF1V,MA6zBxG,MAAiG8rB,EAAjGnW,UA7zBwG3V,SAi0BxG,MAAM+rB,EAAW,IAAIjrB,IACf4c,GAAW,CACb,QACA,WAAY,WAAY,WAAY,WAAY,WAChD,cAAe,cAAe,cAAe,cAC7C,cAAe,cAAe,cAAe,eAajD,MAAMsO,WAAgCF,EAClC3rB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASoJ,EACjB,EAELsO,GAAwBlsB,UAAxB,iDAz1BwGE,MAy1BYgsB,MAApH3D,GAAoH2D,GAApH,KACAA,GAAwBtW,UA11BgF1V,MA01BxG,MAAwGgsB,GAAxGnQ,0pBA11BwG7b,SAy2BxG,MAAMisB,WAA6BjpB,KAC/BqS,YAAYvB,EAAOmB,GAEf,IAAIkW,GAAO,GADXrX,EAAQA,GAJM,QAMJiH,SALK,OAMXjH,EAAQA,EAAM4G,UAAU,EAAG5G,EAAMhW,QANtB,MAOXqtB,GAAO,GAEX,MAAM1L,EAAM,CACR9iB,QAAWsY,EAAO5X,OAAS,cAAgB,OAC3C,iBAAkB,GAClB,qBAAsB,IAG1BoiB,SADa0L,EAAO,iBAAmB,sBAC5BrX,EACJ2L,CACV,EAELwM,GAAqBnsB,UAArB,iDA33BwGE,MA23BSisB,MAAjH5D,GAAiH4D,GAAjH,KACAA,GAAqBxqB,WA53BmFzB,MA43BxG,OAAqHisB,GAArHvqB,QAAqHuqB,GAArH,qBAAuJ,SAKvJ,MAAMC,UAA0BlY,KAC5B7T,YAAY8T,EAAYC,EAAcC,EAAQC,GAC1C0B,MAAM7B,EAAYC,EAAcC,EAAQC,GACxC3T,KAAK4T,cAAgB,YACrB5T,KAAKsoB,SAAU,EACftoB,KAAKgR,MACR,CACGpU,aAAW,OAAOoD,KAAKsoB,OAAU,CACjC1rB,WAAOgV,GAAO5R,KAAKsoB,SAAUtL,QAAsBpL,EAAO,CAI9D0C,gBAAgBrY,GACZ+D,KAAKgU,WAAahU,KAAKpD,OAAS8uB,GAAkBC,GAClD3rB,KAAKuU,UAAUtY,EAAO,CAAEW,OAAQoD,KAAKpD,QACxC,EAEL6uB,EAAkBpsB,UAAlB,0BAA8GosB,GAl5BNlsB,MAk5ByCA,OAl5BzCA,MAk5BmEisB,IAl5BnEjsB,MAk5BoGyb,MAl5BpGzb,MAk5B8Hyb,MAAtO,EACAyQ,EAAkBxW,UAn5BsF1V,MAm5BxG,MAAkGksB,EAAlG5X,gDAn5BwGtU,SA05BxG,MAAMosB,GAAY,IAAItrB,IAChBqrB,GAAkB,IAAIrrB,IACtBwT,GAAS,CACX,SACA,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gBAcpD,MAAM+X,WAAiCH,EACnC/rB,cACI2V,SAAS8F,WACTnb,KAAK6T,OAASA,EACjB,EAEL+X,GAAyBvsB,UAAzB,iDAp7BwGE,MAo7BaqsB,MAArHhE,GAAqHgE,GAArH,KACAA,GAAyB3W,UAr7B+E1V,MAq7BxG,MAAyGqsB,GAAzGxQ,osBAr7BwG7b,SAo9BxG,MAAMssB,IAENA,GAAWxsB,UAAX,0BAAuGwsB,GAAvG,EACAA,GAAWvsB,UAv9B6FC,MAu9BxG,MAAwGssB,KAqBxGA,GAAWrsB,UA5+B6FD,MA4+BxG,UAA8HH;;;;;;;;;;;;;;;OC5+B9G,IAAI0sB,MAAQ;;;;;;;OAe5B,MAAMC,GACFrsB,YAAYkb,EAAoB5c,IACxB0F,SAAiB1F,KAAgB4c,GACjCnS,QAAQujB,KAAK,2EAEpB,CAKgBC,kBAACC,EAElB5gB,EAAc,IACV,MAAO,CACH6gB,SAAUJ,GACVK,UAAWF,EAAc3qB,aACrB,CACI,CAAE3D,QAASoE,KAAeqqB,SAAU,IAAKnrB,QAAmBgrB,IAC5D,CAAEtuB,QAASwE,KAAYiqB,SAAU/gB,EAAanM,OAAO,GACrD,CAAEvB,QAASuE,KAAckqB,UAAU,IACnC,CACJ,CAAEzuB,QAASoE,KAAeqqB,SAAU,IAAKnrB,QAAmBgrB,IAC5D,CAAEtuB,QAASwE,KAAYiqB,SAAU/gB,EAAanM,OAAO,IAGhE,EAEL4sB,GAAiB1sB,UAAjB,0BAA6G0sB,IAAVxsB,MAA4C4C,MAA5C5C,MAAqEL,OAAxK,EACA6sB,GAAiBzsB,UADkFC,MACnG,MAA8GwsB,KAC9GA,GAAiBvsB,UAFkFD,MAEnG,UAA0I6nB,KAAYtI,KAAgB+M,GAAYzE,KAAYtI,KAAgB+M,KAA9M","names":["target","key","value","display","D","order","isNaN","INLINE","LAYOUT_VALUES","direction","wrap","isInline","validateValue","inline","buildCSS","C","toLowerCase","split","find","x","validateWrapValue","flow","indexOf","dest","sources","TypeError","source","hasOwnProperty","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","_document","platformId","isPlatformBrowser","elements","Array","from","querySelectorAll","CLASS_NAME","classRegex","forEach","el","classList","contains","parentNode","removeChild","className","replace","deps","DOCUMENT","PLATFORM_ID","multi","CoreModule","ɵfac","ɵmod","i0","ɵinj","MediaChange","constructor","matches","mediaQuery","mqAlias","suffix","priority","this","property","clone","StylesheetMap","stylesheet","Map","addStyleToElement","element","style","get","set","clearStyles","clear","getStyleForElement","styleName","styles","ɵprov","factory","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","multiplier","undefined","defaultUnit","detectLayoutDisplay","LAYOUT_CONFIG","InjectionToken","providedIn","SERVER_TOKEN","BREAKPOINT","n","alias","StyleBuilder","shouldCache","sideEffect","_input","_styles","_parent","StyleUtils","_serverStylesheet","_serverModuleLoaded","_platformId","layoutConfig","applyStyleToElement","applyCssPrefixes","_applyMultiValueStyleToElement","applyStyleToElements","getFlowDirection","query","lookupStyle","lookupInlineStyle","isPlatformServer","hasWrap","lookupAttributeValue","attribute","getAttribute","getPropertyValue","styleMap","getServerStyle","inlineOnly","getComputedStyle","trim","Object","keys","sort","values","isArray","setProperty","setServerStyle","styleValue","readStyleAttribute","styleAttrValue","newValue","setAttribute","writeStyleAttribute","styleAttribute","styleList","i","length","colonIndex","Error","substr","a","b","priorityA","MatchMedia","_zone","BehaviorSubject","registry","pendingRemoveListenerFns","_observable$","asObservable","activations","results","mql","push","isActive","registerQuery","some","m","observe","mqList","filterOthers","matchMedia$","pipe","filter","change","e","registration$","Observable","observer","lastChange","pop","next","complete","merge","list","buildQueryCss","mediaQueries","it","ALL_STYLES","join","styleEl","createElement","styleSheet","cssText","appendChild","createTextNode","head","mq","console","error","onMQLEvent","run","buildMQL","addListener","removeListener","ngOnDestroy","fn","isBrowser","canListen","window","matchMedia","media","onchange","addEventListener","removeEventListener","dispatchEvent","constructMql","DEFAULT_BREAKPOINTS","overlapping","HANDSET_PORTRAIT","HANDSET_LANDSCAPE","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","TABLET","WEB","ORIENTATION_BREAKPOINTS","ALIAS_DELIMITERS","part","first","charAt","remainder","slice","toUpperCase","bp","name","map","firstUpperCase","camelCase","BREAKPOINTS","breakpoints","inject","bpFlattenArray","concat","apply","v","defaults","custom","dict","extendObject","validateSuffixes","k","mergeByAlias","BreakPointRegistry","findByMap","items","sortAscendingPriority","findByAlias","t","findWithPredicate","findByQuery","overlappings","aliases","suffixes","searchFn","response","PRINT","BREAKPOINT_PRINT","PrintHook","registeredBeforeAfterPrintHooks","isPrintingBeforeAfterEvent","beforePrintEventListeners","afterPrintEventListeners","formerActivations","isPrinting","queue","PrintQueue","deactivations","withPrintQuery","queries","isPrintEvent","startsWith","printAlias","printBreakPoints","getEventBreakpoints","sortDescendingPriority","updateEvent","event","mergeAlias","registerBeforeAfterPrintHooks","defaultView","beforePrintListener","startPrinting","updateStyles","afterPrintListener","stopPrinting","interceptEvents","collectActivations","blockPropagation","bpList","activatedBreakpoints","addPrintBreakpoints","hasFormerBp","includes","wasActivated","l","printBreakpoints","addBreakpoint","bpInList","isPrintBreakPoint","MediaMarshaller","hook","_useFallbacks","_activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","activatedAlias","bps","useFallbacks","onMediaChange","mc","bpIndex","splice","init","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","getActivatedValues","hasValue","setValue","val","updateElement","trackValue","keyMap","Set","valueMap","delete","clearElement","builders","releaseElement","s","unsubscribe","_","triggerUpdate","add","triggers","watchers","newSubscription","subscribe","currentValue","activatedBp","has","lastHope","tap","bind","input","oldMap","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","mru","destroySubject","styleCache","parentElement","nativeElement","activatedValue","ngOnChanges","changes","updateWithValue","addStyles","parent","builder","useCache","genStyles","buildStyles","getFlexFlowDirection","addIfMissing","hasInlineValue","buildLayoutCSS","ɵdir","features","MockMatchMedia","_breakpoints","super","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","deactivate","MockMediaQueryList","_mediaQuery","_isActive","_listeners","callback","call","listener","cb","__","___","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","flatMap","coerceArray","locator","toMediaQuery","buildObservable","debounceTime","asapScheduler","switchMap","of","findAllActivations","distinctUntilChanged","previous","current","previousMqs","currentMqs","difference","size","takeUntil","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","mergeMQAlias","cacheRegistryMatches","emitChangeEvent","basis","grow","shrink","parts","j","_validateCalcValue","substring","calc","transformValue","possibleValue","numberValue","endsWith","unit","ImgSrcStyleBuilder","url","content","ImgSrcDirective","serverModuleLoaded","defaultSrc","imgSrcCache","src","i1","inputs$3","DefaultImgSrcDirective","arguments","selectors","ClassDirective","iterableDiffers","keyValueDiffers","renderer2","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","i2","inputs$2","DefaultClassDirective","ShowHideStyleBuilder","show","shouldShow","isServer","ShowHideDirective","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","DISPLAY_MAP","getDisplayStyle","defaultValue","inputKey","inputValue","coerceBooleanProperty","inputs$1","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","what","sanitize","getType","entry","stringToKeyValue","reduce","keyValuesToMap","buildMapFromList$1","vals","StyleDirective","sanitizer","differs","ngStyleInstance","NgStyle","fallbackStyles","buildStyleMap","ngStyle","SecurityContext","buildMapFromList","delimiter","String","buildRawList","buildMapFromSet","i2$1","DefaultStyleDirective","ExtendedModule","LayoutStyleBuilder","css","inputs$6","LayoutDirective","elRef","styleUtils","_config","cacheMap","DefaultLayoutDirective","CLEAR_MARGIN_CSS","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","directionality","between","below","minus","str","marginRight","marginBottom","marginLeft","margin","buildGridMargin","ɵmultiply","paddingStyles","paddingRight","paddingLeft","padding","buildGridPadding","addFallbackUnit","lastItem","gapCss","getMarginType","layout","margins","buildGapCSS","inputs$5","LayoutGapDirective","zone","observerSubject","onLayoutChange","childrenNodes","obj","buffer","ngAfterContentInit","buildChildObservable","disconnect","matcher","nodeType","willDisplay","orderA","orderB","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","childrenStyle","runOutsideAngular","MutationObserver","mutations","addedNodes","removedNodes","childList","DefaultLayoutGapDirective","FlexStyleBuilder","basisParts","max","isFlowHorizontal","min","hasCalc","usingCalc","isPercent","hasUnits","isValue","isFixed","ot","flex","inputs$4","FlexDirective","flexGrow","flexShrink","triggerReflow","ngOnInit","layoutParts","isHorizontal","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","validateBasis","DefaultFlexDirective","FlexOrderStyleBuilder","parseInt","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","width","height","FlexFillStyleBuilder","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","LayoutAlignDirective","layoutAlignHorizontalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalInlineCache","layoutAlignVerticalRevInlineCache","layoutAlignVerticalRevCache","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignHorizontalCache","layoutKeys","DefaultLayoutAlignDirective","FlexModule","BidiModule","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","rowAxis","columnAxis","buildCss$2","d","GridAlignDirective","alignCache","inputs$a","DefaultGridAlignDirective","DEFAULT_MAIN$1","DEFAULT_CROSS$1","GridAlignColumnsStyleBuilder","buildCss$1","GridAlignColumnsDirective","_inline","alignColumnsInlineCache","alignColumnsCache","inputs$9","DefaultGridAlignColumnsDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignRowsStyleBuilder","buildCss","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","inputs$8","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","GridAreaDirective","gridAreaCache","inputs$7","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","dense","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","Version","FlexLayoutModule","warn","static","configOptions","ngModule","providers","useValue"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-_private-utils.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-core.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-extended.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-flex.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-grid.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout.mjs"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nfunction applyCssPrefixes(target) {\n    for (let key in target) {\n        let value = target[key] ?? '';\n        switch (key) {\n            case 'display':\n                if (value === 'flex') {\n                    target['display'] = [\n                        '-webkit-flex',\n                        'flex'\n                    ];\n                }\n                else if (value === 'inline-flex') {\n                    target['display'] = [\n                        '-webkit-inline-flex',\n                        'inline-flex'\n                    ];\n                }\n                else {\n                    target['display'] = value;\n                }\n                break;\n            case 'align-items':\n            case 'align-self':\n            case 'align-content':\n            case 'flex':\n            case 'flex-basis':\n            case 'flex-flow':\n            case 'flex-grow':\n            case 'flex-shrink':\n            case 'flex-wrap':\n            case 'justify-content':\n                target['-webkit-' + key] = value;\n                break;\n            case 'flex-direction':\n                target['-webkit-flex-direction'] = value;\n                target['flex-direction'] = value;\n                break;\n            case 'order':\n                target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n                break;\n        }\n    }\n    return target;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst INLINE = 'inline';\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nfunction buildLayoutCSS(value) {\n    let [direction, wrap, isInline] = validateValue(value);\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nfunction validateValue(value) {\n    value = value?.toLowerCase() ?? '';\n    let [direction, wrap, inline] = value.split(' ');\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find(x => x === direction)) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nfunction isFlowHorizontal(value) {\n    let [flow,] = validateValue(value);\n    return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n    return {\n        display: inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': wrap || null,\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nfunction extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (let source of sources) {\n        if (source != null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INLINE, LAYOUT_VALUES, applyCssPrefixes, buildLayoutCSS, extendObject, isFlowHorizontal, validateValue, validateWrapValue };\n","import * as i0 from '@angular/core';\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_ID, NgModule, Injectable, InjectionToken, Inject, inject, Directive } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { BehaviorSubject, Observable, merge, Subject, asapScheduler, of, fromEvent } from 'rxjs';\nimport { applyCssPrefixes, extendObject, buildLayoutCSS } from '@angular/flex-layout/_private-utils';\nimport { filter, tap, debounceTime, switchMap, map, distinctUntilChanged, takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nfunction removeStyles(_document, platformId) {\n    return () => {\n        if (isPlatformBrowser(platformId)) {\n            const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n            // RegExp constructor should only be used if passing a variable to the constructor.\n            // When using static regular expression it is more performant to use reg exp literal.\n            // This is also needed to provide Safari 9 compatibility, please see\n            // https://stackoverflow.com/questions/37919802 for more discussion.\n            const classRegex = /\\bflex-layout-.+?\\b/g;\n            elements.forEach(el => {\n                el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n                    el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n            });\n        }\n    };\n}\n/**\n *  Provider to remove SSR styles on the browser\n */\nconst BROWSER_PROVIDER = {\n    provide: APP_BOOTSTRAP_LISTENER,\n    useFactory: removeStyles,\n    deps: [DOCUMENT, PLATFORM_ID],\n    multi: true\n};\nconst CLASS_NAME = 'flex-layout-';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\nclass CoreModule {\n}\nCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: CoreModule });\nCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CoreModule, providers: [BROWSER_PROVIDER] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [BROWSER_PROVIDER]\n                }]\n        }] });\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nclass MediaChange {\n    /**\n     * @param matches whether the mediaQuery is currently activated\n     * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n     * @param mqAlias e.g. gt-sm, md, gt-lg\n     * @param suffix e.g. GtSM, Md, GtLg\n     * @param priority the priority of activation for the given breakpoint\n     */\n    constructor(matches = false, mediaQuery = 'all', mqAlias = '', suffix = '', priority = 0) {\n        this.matches = matches;\n        this.mediaQuery = mediaQuery;\n        this.mqAlias = mqAlias;\n        this.suffix = suffix;\n        this.priority = priority;\n        this.property = '';\n    }\n    /** Create an exact copy of the MediaChange */\n    clone() {\n        return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\nclass StylesheetMap {\n    constructor() {\n        this.stylesheet = new Map();\n    }\n    /**\n     * Add an individual style to an HTML element\n     */\n    addStyleToElement(element, style, value) {\n        const stylesheet = this.stylesheet.get(element);\n        if (stylesheet) {\n            stylesheet.set(style, value);\n        }\n        else {\n            this.stylesheet.set(element, new Map([[style, value]]));\n        }\n    }\n    /**\n     * Clear the virtual stylesheet\n     */\n    clearStyles() {\n        this.stylesheet.clear();\n    }\n    /**\n     * Retrieve a given style for an HTML element\n     */\n    getStyleForElement(el, styleName) {\n        const styles = this.stylesheet.get(el);\n        let value = '';\n        if (styles) {\n            const style = styles.get(styleName);\n            if (typeof style === 'number' || typeof style === 'string') {\n                value = style + '';\n            }\n        }\n        return value;\n    }\n}\nStylesheetMap.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StylesheetMap, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nStylesheetMap.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StylesheetMap, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StylesheetMap, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_CONFIG = {\n    addFlexToParent: true,\n    addOrientationBps: false,\n    disableDefaultBps: false,\n    disableVendorPrefixes: false,\n    serverLoaded: false,\n    useColumnBasisZero: true,\n    printWithBreakpoints: [],\n    mediaTriggerAutoRestore: true,\n    ssrObserveBreakpoints: [],\n    // This is disabled by default because otherwise the multiplier would\n    // run for all users, regardless of whether they're using this feature.\n    // Instead, we disable it by default, which requires this ugly cast.\n    multiplier: undefined,\n    defaultUnit: 'px',\n    detectLayoutDisplay: false,\n};\nconst LAYOUT_CONFIG = new InjectionToken('Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nconst SERVER_TOKEN = new InjectionToken('FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst BREAKPOINT = new InjectionToken('Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nfunction mergeAlias(dest, source) {\n    dest = dest?.clone() ?? new MediaChange();\n    if (source) {\n        dest.mqAlias = source.alias;\n        dest.mediaQuery = source.mediaQuery;\n        dest.suffix = source.suffix;\n        dest.priority = source.priority;\n    }\n    return dest;\n}\n\n/** A class that encapsulates CSS style generation for common directives */\nclass StyleBuilder {\n    constructor() {\n        /** Whether to cache the generated output styles */\n        this.shouldCache = true;\n    }\n    /**\n     * Run a side effect computation given the input string and the computed styles\n     * from the build task and the host configuration object\n     * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n     */\n    sideEffect(_input, _styles, _parent) {\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleUtils {\n    constructor(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {\n        this._serverStylesheet = _serverStylesheet;\n        this._serverModuleLoaded = _serverModuleLoaded;\n        this._platformId = _platformId;\n        this.layoutConfig = layoutConfig;\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     */\n    applyStyleToElement(element, style, value = null) {\n        let styles = {};\n        if (typeof style === 'string') {\n            styles[style] = value;\n            style = styles;\n        }\n        styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        this._applyMultiValueStyleToElement(styles, element);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive's element\n     */\n    applyStyleToElements(style, elements = []) {\n        const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        elements.forEach(el => {\n            this._applyMultiValueStyleToElement(styles, el);\n        });\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     */\n    getFlowDirection(target) {\n        const query = 'flex-direction';\n        let value = this.lookupStyle(target, query);\n        const hasInlineValue = this.lookupInlineStyle(target, query) ||\n            (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n        return [value || 'row', hasInlineValue];\n    }\n    hasWrap(target) {\n        const query = 'flex-wrap';\n        return this.lookupStyle(target, query) === 'wrap';\n    }\n    /**\n     * Find the DOM element's raw attribute value (if any)\n     */\n    lookupAttributeValue(element, attribute) {\n        return element.getAttribute(attribute) ?? '';\n    }\n    /**\n     * Find the DOM element's inline style value (if any)\n     */\n    lookupInlineStyle(element, styleName) {\n        return isPlatformBrowser(this._platformId) ?\n            element.style.getPropertyValue(styleName) : getServerStyle(element, styleName);\n    }\n    /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     */\n    lookupStyle(element, styleName, inlineOnly = false) {\n        let value = '';\n        if (element) {\n            let immediateValue = value = this.lookupInlineStyle(element, styleName);\n            if (!immediateValue) {\n                if (isPlatformBrowser(this._platformId)) {\n                    if (!inlineOnly) {\n                        value = getComputedStyle(element).getPropertyValue(styleName);\n                    }\n                }\n                else {\n                    if (this._serverModuleLoaded) {\n                        value = this._serverStylesheet.getStyleForElement(element, styleName);\n                    }\n                }\n            }\n        }\n        // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n        //       in which case getComputedStyle() should determine a valid value.\n        return value ? value.trim() : '';\n    }\n    /**\n     * Applies the styles to the element. The styles object map may contain an array of values\n     * Each value will be added as element style\n     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n     */\n    _applyMultiValueStyleToElement(styles, element) {\n        Object.keys(styles).sort().forEach(key => {\n            const el = styles[key];\n            const values = Array.isArray(el) ? el : [el];\n            values.sort();\n            for (let value of values) {\n                value = value ? value + '' : '';\n                if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n                    isPlatformBrowser(this._platformId) ?\n                        element.style.setProperty(key, value) : setServerStyle(element, key, value);\n                }\n                else {\n                    this._serverStylesheet.addStyleToElement(element, key, value);\n                }\n            }\n        });\n    }\n}\nStyleUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StyleUtils, deps: [{ token: StylesheetMap }, { token: SERVER_TOKEN }, { token: PLATFORM_ID }, { token: LAYOUT_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\nStyleUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StyleUtils, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StyleUtils, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: StylesheetMap }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }]; } });\nfunction getServerStyle(element, styleName) {\n    const styleMap = readStyleAttribute(element);\n    return styleMap[styleName] ?? '';\n}\nfunction setServerStyle(element, styleName, styleValue) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = readStyleAttribute(element);\n    styleMap[styleName] = styleValue ?? '';\n    writeStyleAttribute(element, styleMap);\n}\nfunction writeStyleAttribute(element, styleMap) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n        const newValue = styleMap[key];\n        if (newValue) {\n            styleAttrValue += `${key}:${styleMap[key]};`;\n        }\n    }\n    element.setAttribute('style', styleAttrValue);\n}\nfunction readStyleAttribute(element) {\n    const styleMap = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n        const styleList = styleAttribute.split(/;+/g);\n        for (let i = 0; i < styleList.length; i++) {\n            const style = styleList[i].trim();\n            if (style.length > 0) {\n                const colonIndex = style.indexOf(':');\n                if (colonIndex === -1) {\n                    throw new Error(`Invalid CSS style: ${style}`);\n                }\n                const name = style.substr(0, colonIndex).trim();\n                styleMap[name] = style.substr(colonIndex + 1).trim();\n            }\n        }\n    }\n    return styleMap;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** HOF to sort the breakpoints by descending priority */\nfunction sortDescendingPriority(a, b) {\n    const priorityA = a ? a.priority || 0 : 0;\n    const priorityB = b ? b.priority || 0 : 0;\n    return priorityB - priorityA;\n}\n/** HOF to sort the breakpoints by ascending priority */\nfunction sortAscendingPriority(a, b) {\n    const pA = a.priority || 0;\n    const pB = b.priority || 0;\n    return pA - pB;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\nclass MatchMedia {\n    constructor(_zone, _platformId, _document) {\n        this._zone = _zone;\n        this._platformId = _platformId;\n        this._document = _document;\n        /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n        this.source = new BehaviorSubject(new MediaChange(true));\n        this.registry = new Map();\n        this.pendingRemoveListenerFns = [];\n        this._observable$ = this.source.asObservable();\n    }\n    /**\n     * Publish list of all current activations\n     */\n    get activations() {\n        const results = [];\n        this.registry.forEach((mql, key) => {\n            if (mql.matches) {\n                results.push(key);\n            }\n        });\n        return results;\n    }\n    /**\n     * For the specified mediaQuery?\n     */\n    isActive(mediaQuery) {\n        const mql = this.registry.get(mediaQuery);\n        return mql?.matches ?? this.registerQuery(mediaQuery).some(m => m.matches);\n    }\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * Use deferred registration process to register breakpoints only on subscription\n     * This logic also enforces logic to register all mediaQueries BEFORE notify\n     * subscribers of notifications.\n     */\n    observe(mqList, filterOthers = false) {\n        if (mqList && mqList.length) {\n            const matchMedia$ = this._observable$.pipe(filter((change) => !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1)));\n            const registration$ = new Observable((observer) => {\n                const matches = this.registerQuery(mqList);\n                if (matches.length) {\n                    const lastChange = matches.pop();\n                    matches.forEach((e) => {\n                        observer.next(e);\n                    });\n                    this.source.next(lastChange); // last match is cached\n                }\n                observer.complete();\n            });\n            return merge(registration$, matchMedia$);\n        }\n        return this._observable$;\n    }\n    /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     */\n    registerQuery(mediaQuery) {\n        const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n        const matches = [];\n        buildQueryCss(list, this._document);\n        list.forEach((query) => {\n            const onMQLEvent = (e) => {\n                this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n            };\n            let mql = this.registry.get(query);\n            if (!mql) {\n                mql = this.buildMQL(query);\n                mql.addListener(onMQLEvent);\n                this.pendingRemoveListenerFns.push(() => mql.removeListener(onMQLEvent));\n                this.registry.set(query, mql);\n            }\n            if (mql.matches) {\n                matches.push(new MediaChange(true, query));\n            }\n        });\n        return matches;\n    }\n    ngOnDestroy() {\n        let fn;\n        while (fn = this.pendingRemoveListenerFns.pop()) {\n            fn();\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    buildMQL(query) {\n        return constructMql(query, isPlatformBrowser(this._platformId));\n    }\n}\nMatchMedia.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatchMedia, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMatchMedia.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatchMedia, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatchMedia, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries, _document) {\n    const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n        const query = list.join(', ');\n        try {\n            const styleEl = _document.createElement('style');\n            styleEl.setAttribute('type', 'text/css');\n            if (!styleEl.styleSheet) {\n                const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n                styleEl.appendChild(_document.createTextNode(cssText));\n            }\n            _document.head.appendChild(styleEl);\n            // Store in private global registry\n            list.forEach(mq => ALL_STYLES[mq] = styleEl);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\nfunction constructMql(query, isBrowser) {\n    const canListen = isBrowser && !!window.matchMedia('all').addListener;\n    return canListen ? window.matchMedia(query) : {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => {\n        },\n        removeListener: () => {\n        },\n        onchange: null,\n        addEventListener() {\n        },\n        removeEventListener() {\n        },\n        dispatchEvent() {\n            return false;\n        }\n    };\n}\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nconst DEFAULT_BREAKPOINTS = [\n    {\n        alias: 'xs',\n        mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)',\n        priority: 1000,\n    },\n    {\n        alias: 'sm',\n        mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)',\n        priority: 900,\n    },\n    {\n        alias: 'md',\n        mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)',\n        priority: 800,\n    },\n    {\n        alias: 'lg',\n        mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)',\n        priority: 700,\n    },\n    {\n        alias: 'xl',\n        mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)',\n        priority: 600,\n    },\n    {\n        alias: 'lt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 599.98px)',\n        priority: 950,\n    },\n    {\n        alias: 'lt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 959.98px)',\n        priority: 850,\n    },\n    {\n        alias: 'lt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 1279.98px)',\n        priority: 750,\n    },\n    {\n        alias: 'lt-xl',\n        overlapping: true,\n        priority: 650,\n        mediaQuery: 'screen and (max-width: 1919.98px)',\n    },\n    {\n        alias: 'gt-xs',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 600px)',\n        priority: -950,\n    },\n    {\n        alias: 'gt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 960px)',\n        priority: -850,\n    }, {\n        alias: 'gt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1280px)',\n        priority: -750,\n    },\n    {\n        alias: 'gt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1920px)',\n        priority: -650,\n    }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/* tslint:disable */\nconst HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599.98px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.98px)';\nconst TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)';\nconst TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)';\nconst WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';\nconst ScreenTypes = {\n    'HANDSET': `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n    'TABLET': `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n    'WEB': `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n    'HANDSET_PORTRAIT': `${HANDSET_PORTRAIT}`,\n    'TABLET_PORTRAIT': `${TABLET_PORTRAIT} `,\n    'WEB_PORTRAIT': `${WEB_PORTRAIT}`,\n    'HANDSET_LANDSCAPE': `${HANDSET_LANDSCAPE}`,\n    'TABLET_LANDSCAPE': `${TABLET_LANDSCAPE}`,\n    'WEB_LANDSCAPE': `${WEB_LANDSCAPE}`\n};\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nconst ORIENTATION_BREAKPOINTS = [\n    { 'alias': 'handset', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET },\n    { 'alias': 'handset.landscape', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE },\n    { 'alias': 'handset.portrait', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT },\n    { 'alias': 'tablet', priority: 2100, 'mediaQuery': ScreenTypes.TABLET },\n    { 'alias': 'tablet.landscape', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_LANDSCAPE },\n    { 'alias': 'tablet.portrait', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT },\n    { 'alias': 'web', priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping: true },\n    { 'alias': 'web.landscape', priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping: true },\n    { 'alias': 'web.portrait', priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping: true }\n];\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part) {\n    let first = part.length > 0 ? part.charAt(0) : '';\n    let remainder = (part.length > 1) ? part.slice(1) : '';\n    return first.toUpperCase() + remainder;\n}\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name) {\n    return name\n        .replace(ALIAS_DELIMITERS, '|')\n        .split('|')\n        .map(firstUpperCase)\n        .join('');\n}\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nfunction validateSuffixes(list) {\n    list.forEach((bp) => {\n        if (!bp.suffix) {\n            bp.suffix = camelCase(bp.alias); // create Suffix value based on alias\n            bp.overlapping = !!bp.overlapping; // ensure default value\n        }\n    });\n    return list;\n}\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nfunction mergeByAlias(defaults, custom = []) {\n    const dict = {};\n    defaults.forEach(bp => {\n        dict[bp.alias] = bp;\n    });\n    // Merge custom breakpoints\n    custom.forEach((bp) => {\n        if (dict[bp.alias]) {\n            extendObject(dict[bp.alias], bp);\n        }\n        else {\n            dict[bp.alias] = bp;\n        }\n    });\n    return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nconst BREAKPOINTS = new InjectionToken('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n        const breakpoints = inject(BREAKPOINT);\n        const layoutConfig = inject(LAYOUT_CONFIG);\n        const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n            .map((v) => Array.isArray(v) ? v : [v]));\n        const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n            .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n        return mergeByAlias(builtIns, bpFlattenArray);\n    }\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\nclass BreakPointRegistry {\n    constructor(list) {\n        /**\n         * Memoized BreakPoint Lookups\n         */\n        this.findByMap = new Map();\n        this.items = [...list].sort(sortAscendingPriority);\n    }\n    /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     */\n    findByAlias(alias) {\n        return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias === alias);\n    }\n    findByQuery(query) {\n        return this.findWithPredicate(query, (bp) => bp.mediaQuery === query);\n    }\n    /**\n     * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n     * e.g. gt-sm overlaps md, lg, and xl\n     */\n    get overlappings() {\n        return this.items.filter(it => it.overlapping);\n    }\n    /**\n     * Get list of all registered (non-empty) breakpoint aliases\n     */\n    get aliases() {\n        return this.items.map(it => it.alias);\n    }\n    /**\n     * Aliases are mapped to properties using suffixes\n     * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n     * for property layoutGtSM.\n     */\n    get suffixes() {\n        return this.items.map(it => it?.suffix ?? '');\n    }\n    /**\n     * Memoized lookup using custom predicate function\n     */\n    findWithPredicate(key, searchFn) {\n        let response = this.findByMap.get(key);\n        if (!response) {\n            response = this.items.find(searchFn) ?? null;\n            this.findByMap.set(key, response);\n        }\n        return response ?? null;\n    }\n}\nBreakPointRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: BreakPointRegistry, deps: [{ token: BREAKPOINTS }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakPointRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: BreakPointRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: BreakPointRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [BREAKPOINTS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PRINT = 'print';\nconst BREAKPOINT_PRINT = {\n    alias: PRINT,\n    mediaQuery: PRINT,\n    priority: 1000\n};\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\nclass PrintHook {\n    constructor(breakpoints, layoutConfig, _document) {\n        this.breakpoints = breakpoints;\n        this.layoutConfig = layoutConfig;\n        this._document = _document;\n        // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n        //  and `afterprint` event listeners.\n        this.registeredBeforeAfterPrintHooks = false;\n        // isPrintingBeforeAfterEvent is used to track if we are printing from within\n        // a `beforeprint` event handler. This prevents the typical `stopPrinting`\n        // form `interceptEvents` so that printing is not stopped while the dialog\n        // is still open. This is an extension of the `isPrinting` property on\n        // browsers which support `beforeprint` and `afterprint` events.\n        this.isPrintingBeforeAfterEvent = false;\n        this.beforePrintEventListeners = [];\n        this.afterPrintEventListeners = [];\n        this.formerActivations = null;\n        // Is this service currently in print mode\n        this.isPrinting = false;\n        this.queue = new PrintQueue();\n        this.deactivations = [];\n    }\n    /** Add 'print' mediaQuery: to listen for matchMedia activations */\n    withPrintQuery(queries) {\n        return [...queries, PRINT];\n    }\n    /** Is the MediaChange event for any 'print' @media */\n    isPrintEvent(e) {\n        return e.mediaQuery.startsWith(PRINT);\n    }\n    /** What is the desired mqAlias to use while printing? */\n    get printAlias() {\n        return [...(this.layoutConfig.printWithBreakpoints ?? [])];\n    }\n    /** Lookup breakpoints associated with print aliases. */\n    get printBreakPoints() {\n        return this.printAlias\n            .map(alias => this.breakpoints.findByAlias(alias))\n            .filter(bp => bp !== null);\n    }\n    /** Lookup breakpoint associated with mediaQuery */\n    getEventBreakpoints({ mediaQuery }) {\n        const bp = this.breakpoints.findByQuery(mediaQuery);\n        const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n        return list.sort(sortDescendingPriority);\n    }\n    /** Update event with printAlias mediaQuery information */\n    updateEvent(event) {\n        let bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (this.isPrintEvent(event)) {\n            // Reset from 'print' to first (highest priority) print breakpoint\n            bp = this.getEventBreakpoints(event)[0];\n            event.mediaQuery = bp?.mediaQuery ?? '';\n        }\n        return mergeAlias(event, bp);\n    }\n    // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n    // trigger print styles synchronously and apply proper layout styles.\n    // It is a noop if the hooks have already been registered or if the document's\n    // `defaultView` is not available.\n    registerBeforeAfterPrintHooks(target) {\n        // `defaultView` may be null when rendering on the server or in other contexts.\n        if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n            return;\n        }\n        this.registeredBeforeAfterPrintHooks = true;\n        const beforePrintListener = () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            if (!this.isPrinting) {\n                this.isPrintingBeforeAfterEvent = true;\n                this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n                target.updateStyles();\n            }\n        };\n        const afterPrintListener = () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            this.isPrintingBeforeAfterEvent = false;\n            if (this.isPrinting) {\n                this.stopPrinting(target);\n                target.updateStyles();\n            }\n        };\n        // Could we have teardown logic to remove if there are no print listeners being used?\n        this._document.defaultView.addEventListener('beforeprint', beforePrintListener);\n        this._document.defaultView.addEventListener('afterprint', afterPrintListener);\n        this.beforePrintEventListeners.push(beforePrintListener);\n        this.afterPrintEventListeners.push(afterPrintListener);\n    }\n    /**\n     * Prepare RxJS tap operator with partial application\n     * @return pipeable tap predicate\n     */\n    interceptEvents(target) {\n        return (event) => {\n            if (this.isPrintEvent(event)) {\n                if (event.matches && !this.isPrinting) {\n                    this.startPrinting(target, this.getEventBreakpoints(event));\n                    target.updateStyles();\n                }\n                else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n                    this.stopPrinting(target);\n                    target.updateStyles();\n                }\n                return;\n            }\n            this.collectActivations(target, event);\n        };\n    }\n    /** Stop mediaChange event propagation in event streams */\n    blockPropagation() {\n        return (event) => {\n            return !(this.isPrinting || this.isPrintEvent(event));\n        };\n    }\n    /**\n     * Save current activateBreakpoints (for later restore)\n     * and substitute only the printAlias breakpoint\n     */\n    startPrinting(target, bpList) {\n        this.isPrinting = true;\n        this.formerActivations = target.activatedBreakpoints;\n        target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n    }\n    /** For any print de-activations, reset the entire print queue */\n    stopPrinting(target) {\n        target.activatedBreakpoints = this.deactivations;\n        this.deactivations = [];\n        this.formerActivations = null;\n        this.queue.clear();\n        this.isPrinting = false;\n    }\n    /**\n     * To restore pre-Print Activations, we must capture the proper\n     * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n     * is supported; so 'print' mediaQuery activations are used as a fallback\n     * in browsers without `beforeprint` support.\n     *\n     * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n     *\n     * Let's capture all de-activations using the following logic:\n     *\n     *  When not printing:\n     *    - clear cache when activating non-print breakpoint\n     *    - update cache (and sort) when deactivating\n     *\n     *  When printing:\n     *    - sort and save when starting print\n     *    - restore as activatedTargets and clear when stop printing\n     */\n    collectActivations(target, event) {\n        if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n            if (!this.isPrintingBeforeAfterEvent) {\n                // Only clear deactivations if we aren't printing from a `beforeprint` event.\n                // Otherwise, this will clear before `stopPrinting()` is called to restore\n                // the pre-Print Activations.\n                this.deactivations = [];\n                return;\n            }\n            if (!event.matches) {\n                const bp = this.breakpoints.findByQuery(event.mediaQuery);\n                // Deactivating a breakpoint\n                if (bp) {\n                    const hasFormerBp = this.formerActivations && this.formerActivations.includes(bp);\n                    const wasActivated = !this.formerActivations && target.activatedBreakpoints.includes(bp);\n                    const shouldDeactivate = hasFormerBp || wasActivated;\n                    if (shouldDeactivate) {\n                        this.deactivations.push(bp);\n                        this.deactivations.sort(sortDescendingPriority);\n                    }\n                }\n            }\n        }\n    }\n    /** Teardown logic for the service. */\n    ngOnDestroy() {\n        if (this._document.defaultView) {\n            this.beforePrintEventListeners.forEach(l => this._document.defaultView.removeEventListener('beforeprint', l));\n            this.afterPrintEventListeners.forEach(l => this._document.defaultView.removeEventListener('afterprint', l));\n        }\n    }\n}\nPrintHook.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: PrintHook, deps: [{ token: BreakPointRegistry }, { token: LAYOUT_CONFIG }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nPrintHook.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: PrintHook, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: PrintHook, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n    constructor() {\n        /** Sorted queue with prioritized print breakpoints */\n        this.printBreakpoints = [];\n    }\n    addPrintBreakpoints(bpList) {\n        bpList.push(BREAKPOINT_PRINT);\n        bpList.sort(sortDescendingPriority);\n        bpList.forEach(bp => this.addBreakpoint(bp));\n        return this.printBreakpoints;\n    }\n    /** Add Print breakpoint to queue */\n    addBreakpoint(bp) {\n        if (!!bp) {\n            const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n            if (bpInList === undefined) {\n                // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n                // register as highest priority in the queue\n                this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n                    : [...this.printBreakpoints, bp];\n            }\n        }\n    }\n    /** Restore original activated breakpoints and clear internal caches */\n    clear() {\n        this.printBreakpoints = [];\n    }\n}\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp) {\n    return bp?.mediaQuery.startsWith(PRINT) ?? false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\nclass MediaMarshaller {\n    constructor(matchMedia, breakpoints, hook) {\n        this.matchMedia = matchMedia;\n        this.breakpoints = breakpoints;\n        this.hook = hook;\n        this._useFallbacks = true;\n        this._activatedBreakpoints = [];\n        this.elementMap = new Map();\n        this.elementKeyMap = new WeakMap();\n        this.watcherMap = new WeakMap(); // special triggers to update elements\n        this.updateMap = new WeakMap(); // callback functions to update styles\n        this.clearMap = new WeakMap(); // callback functions to clear styles\n        this.subject = new Subject();\n        this.observeActivations();\n    }\n    get activatedAlias() {\n        return this.activatedBreakpoints[0]?.alias ?? '';\n    }\n    set activatedBreakpoints(bps) {\n        this._activatedBreakpoints = [...bps];\n    }\n    get activatedBreakpoints() {\n        return [...this._activatedBreakpoints];\n    }\n    set useFallbacks(value) {\n        this._useFallbacks = value;\n    }\n    /**\n     * Update styles on breakpoint activates or deactivates\n     * @param mc\n     */\n    onMediaChange(mc) {\n        const bp = this.findByQuery(mc.mediaQuery);\n        if (bp) {\n            mc = mergeAlias(mc, bp);\n            const bpIndex = this.activatedBreakpoints.indexOf(bp);\n            if (mc.matches && bpIndex === -1) {\n                this._activatedBreakpoints.push(bp);\n                this._activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n            else if (!mc.matches && bpIndex !== -1) {\n                // Remove the breakpoint when it's deactivated\n                this._activatedBreakpoints.splice(bpIndex, 1);\n                this._activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n        }\n    }\n    /**\n     * initialize the marshaller with necessary elements for delegation on an element\n     * @param element\n     * @param key\n     * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n     * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n     * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n     */\n    init(element, key, updateFn, clearFn, extraTriggers = []) {\n        initBuilderMap(this.updateMap, element, key, updateFn);\n        initBuilderMap(this.clearMap, element, key, clearFn);\n        this.buildElementKeyMap(element, key);\n        this.watchExtraTriggers(element, key, extraTriggers);\n    }\n    /**\n     * get the value for an element and key and optionally a given breakpoint\n     * @param element\n     * @param key\n     * @param bp\n     */\n    getValue(element, key, bp) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * whether the element has values for a given key\n     * @param element\n     * @param key\n     */\n    hasValue(element, key) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const values = this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key) !== undefined || false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Set the value for an input on a directive\n     * @param element the element in question\n     * @param key the type of the directive (e.g. flex, layout-gap, etc)\n     * @param bp the breakpoint suffix (empty string = default)\n     * @param val the value for the breakpoint\n     */\n    setValue(element, key, val, bp) {\n        let bpMap = this.elementMap.get(element);\n        if (!bpMap) {\n            bpMap = new Map().set(bp, new Map().set(key, val));\n            this.elementMap.set(element, bpMap);\n        }\n        else {\n            const values = (bpMap.get(bp) ?? new Map()).set(key, val);\n            bpMap.set(bp, values);\n            this.elementMap.set(element, bpMap);\n        }\n        const value = this.getValue(element, key);\n        if (value !== undefined) {\n            this.updateElement(element, key, value);\n        }\n    }\n    /** Track element value changes for a specific key */\n    trackValue(element, key) {\n        return this.subject\n            .asObservable()\n            .pipe(filter(v => v.element === element && v.key === key));\n    }\n    /** update all styles for all elements on the current breakpoint */\n    updateStyles() {\n        this.elementMap.forEach((bpMap, el) => {\n            const keyMap = new Set(this.elementKeyMap.get(el));\n            let valueMap = this.getActivatedValues(bpMap);\n            if (valueMap) {\n                valueMap.forEach((v, k) => {\n                    this.updateElement(el, k, v);\n                    keyMap.delete(k);\n                });\n            }\n            keyMap.forEach(k => {\n                valueMap = this.getActivatedValues(bpMap, k);\n                if (valueMap) {\n                    const value = valueMap.get(k);\n                    this.updateElement(el, k, value);\n                }\n                else {\n                    this.clearElement(el, k);\n                }\n            });\n        });\n    }\n    /**\n     * clear the styles for a given element\n     * @param element\n     * @param key\n     */\n    clearElement(element, key) {\n        const builders = this.clearMap.get(element);\n        if (builders) {\n            const clearFn = builders.get(key);\n            if (!!clearFn) {\n                clearFn();\n                this.subject.next({ element, key, value: '' });\n            }\n        }\n    }\n    /**\n     * update a given element with the activated values for a given key\n     * @param element\n     * @param key\n     * @param value\n     */\n    updateElement(element, key, value) {\n        const builders = this.updateMap.get(element);\n        if (builders) {\n            const updateFn = builders.get(key);\n            if (!!updateFn) {\n                updateFn(value);\n                this.subject.next({ element, key, value });\n            }\n        }\n    }\n    /**\n     * release all references to a given element\n     * @param element\n     */\n    releaseElement(element) {\n        const watcherMap = this.watcherMap.get(element);\n        if (watcherMap) {\n            watcherMap.forEach(s => s.unsubscribe());\n            this.watcherMap.delete(element);\n        }\n        const elementMap = this.elementMap.get(element);\n        if (elementMap) {\n            elementMap.forEach((_, s) => elementMap.delete(s));\n            this.elementMap.delete(element);\n        }\n    }\n    /**\n     * trigger an update for a given element and key (e.g. layout)\n     * @param element\n     * @param key\n     */\n    triggerUpdate(element, key) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const valueMap = this.getActivatedValues(bpMap, key);\n            if (valueMap) {\n                if (key) {\n                    this.updateElement(element, key, valueMap.get(key));\n                }\n                else {\n                    valueMap.forEach((v, k) => this.updateElement(element, k, v));\n                }\n            }\n        }\n    }\n    /** Cross-reference for HTMLElement with directive key */\n    buildElementKeyMap(element, key) {\n        let keyMap = this.elementKeyMap.get(element);\n        if (!keyMap) {\n            keyMap = new Set();\n            this.elementKeyMap.set(element, keyMap);\n        }\n        keyMap.add(key);\n    }\n    /**\n     * Other triggers that should force style updates:\n     * - directionality\n     * - layout changes\n     * - mutationobserver updates\n     */\n    watchExtraTriggers(element, key, triggers) {\n        if (triggers && triggers.length) {\n            let watchers = this.watcherMap.get(element);\n            if (!watchers) {\n                watchers = new Map();\n                this.watcherMap.set(element, watchers);\n            }\n            const subscription = watchers.get(key);\n            if (!subscription) {\n                const newSubscription = merge(...triggers).subscribe(() => {\n                    const currentValue = this.getValue(element, key);\n                    this.updateElement(element, key, currentValue);\n                });\n                watchers.set(key, newSubscription);\n            }\n        }\n    }\n    /** Breakpoint locator by mediaQuery */\n    findByQuery(query) {\n        return this.breakpoints.findByQuery(query);\n    }\n    /**\n     * get the fallback breakpoint for a given element, starting with the current breakpoint\n     * @param bpMap\n     * @param key\n     */\n    getActivatedValues(bpMap, key) {\n        for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n            const activatedBp = this.activatedBreakpoints[i];\n            const valueMap = bpMap.get(activatedBp.alias);\n            if (valueMap) {\n                if (key === undefined || (valueMap.has(key) && valueMap.get(key) != null)) {\n                    return valueMap;\n                }\n            }\n        }\n        // On the server, we explicitly have an \"all\" section filled in to begin with.\n        // So we don't need to aggressively find a fallback if no explicit value exists.\n        if (!this._useFallbacks) {\n            return undefined;\n        }\n        const lastHope = bpMap.get('');\n        return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n    }\n    /**\n     * Watch for mediaQuery breakpoint activations\n     */\n    observeActivations() {\n        const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n        this.hook.registerBeforeAfterPrintHooks(this);\n        this.matchMedia\n            .observe(this.hook.withPrintQuery(queries))\n            .pipe(tap(this.hook.interceptEvents(this)), filter(this.hook.blockPropagation()))\n            .subscribe(this.onMediaChange.bind(this));\n    }\n}\nMediaMarshaller.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaMarshaller, deps: [{ token: MatchMedia }, { token: BreakPointRegistry }, { token: PrintHook }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMarshaller.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaMarshaller, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaMarshaller, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MatchMedia }, { type: BreakPointRegistry }, { type: PrintHook }]; } });\nfunction initBuilderMap(map, element, key, input) {\n    if (input !== undefined) {\n        const oldMap = map.get(element) ?? new Map();\n        oldMap.set(key, input);\n        map.set(element, oldMap);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        this.elementRef = elementRef;\n        this.styleBuilder = styleBuilder;\n        this.styler = styler;\n        this.marshal = marshal;\n        this.DIRECTIVE_KEY = '';\n        this.inputs = [];\n        /** The most recently used styles for the builder */\n        this.mru = {};\n        this.destroySubject = new Subject();\n        /** Cache map for style computation */\n        this.styleCache = new Map();\n    }\n    /** Access to host element's parent DOM node */\n    get parentElement() {\n        return this.elementRef.nativeElement.parentElement;\n    }\n    /** Access to the HTMLElement for the directive */\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n    /** Access to the activated value for the directive */\n    get activatedValue() {\n        return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    set activatedValue(value) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value, this.marshal.activatedAlias);\n    }\n    /** For @Input changes */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach(key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                const bp = key.split('.').slice(1).join('.');\n                const val = changes[key].currentValue;\n                this.setValue(val, bp);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroySubject.next();\n        this.destroySubject.complete();\n        this.marshal.releaseElement(this.nativeElement);\n    }\n    /** Register with central marshaller service */\n    init(extraTriggers = []) {\n        this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), extraTriggers);\n    }\n    /** Add styles to the element using predefined style builder */\n    addStyles(input, parent) {\n        const builder = this.styleBuilder;\n        const useCache = builder.shouldCache;\n        let genStyles = this.styleCache.get(input);\n        if (!genStyles || !useCache) {\n            genStyles = builder.buildStyles(input, parent);\n            if (useCache) {\n                this.styleCache.set(input, genStyles);\n            }\n        }\n        this.mru = { ...genStyles };\n        this.applyStyleToElement(genStyles);\n        builder.sideEffect(input, genStyles, parent);\n    }\n    /** Remove generated styles from an element using predefined style builder */\n    clearStyles() {\n        Object.keys(this.mru).forEach(k => {\n            this.mru[k] = '';\n        });\n        this.applyStyleToElement(this.mru);\n        this.mru = {};\n        this.currentValue = undefined;\n    }\n    /** Force trigger style updates on DOM element */\n    triggerUpdate() {\n        this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     */\n    getFlexFlowDirection(target, addIfMissing = false) {\n        if (target) {\n            const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n            if (!hasInlineValue && addIfMissing) {\n                const style = buildLayoutCSS(value);\n                const elements = [target];\n                this.styler.applyStyleToElements(style, elements);\n            }\n            return value.trim();\n        }\n        return 'row';\n    }\n    hasWrap(target) {\n        return this.styler.hasWrap(target);\n    }\n    /** Applies styles given via string pair or object map to the directive element */\n    applyStyleToElement(style, value, element = this.nativeElement) {\n        this.styler.applyStyleToElement(element, style, value);\n    }\n    setValue(val, bp) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n    }\n    updateWithValue(input) {\n        if (this.currentValue !== input) {\n            this.addStyles(input);\n            this.currentValue = input;\n        }\n    }\n}\nBaseDirective2.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: BaseDirective2, deps: [{ token: i0.ElementRef }, { token: StyleBuilder }, { token: StyleUtils }, { token: MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nBaseDirective2.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: BaseDirective2, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: BaseDirective2, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: StyleBuilder }, { type: StyleUtils }, { type: MediaMarshaller }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\nclass MockMatchMedia extends MatchMedia {\n    constructor(_zone, _platformId, _document, _breakpoints) {\n        super(_zone, _platformId, _document);\n        this._breakpoints = _breakpoints;\n        this.autoRegisterQueries = true; // Used for testing BreakPoint registrations\n        this.useOverlaps = false; // Allow fallback to overlapping mediaQueries\n    }\n    /** Easy method to clear all listeners for all mediaQueries */\n    clearAll() {\n        this.registry.forEach((mql) => {\n            mql.destroy();\n        });\n        this.registry.clear();\n        this.useOverlaps = false;\n    }\n    /** Feature to support manual, simulated activation of a mediaQuery. */\n    activate(mediaQuery, useOverlaps = this.useOverlaps) {\n        mediaQuery = this._validateQuery(mediaQuery);\n        if (useOverlaps || !this.isActive(mediaQuery)) {\n            this._deactivateAll();\n            this._registerMediaQuery(mediaQuery);\n            this._activateWithOverlaps(mediaQuery, useOverlaps);\n        }\n        return this.hasActivated;\n    }\n    /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n    _validateQuery(queryOrAlias) {\n        const bp = this._breakpoints.findByAlias(queryOrAlias);\n        return bp?.mediaQuery ?? queryOrAlias;\n    }\n    /**\n     * Manually onMediaChange any overlapping mediaQueries to simulate\n     * similar functionality in the window.matchMedia()\n     */\n    _activateWithOverlaps(mediaQuery, useOverlaps) {\n        if (useOverlaps) {\n            const bp = this._breakpoints.findByQuery(mediaQuery);\n            const alias = bp?.alias ?? 'unknown';\n            // Simulate activation of overlapping lt-<XXX> ranges\n            switch (alias) {\n                case 'lg':\n                    this._activateByAlias(['lt-xl']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['lt-xl', 'lt-lg']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);\n                    break;\n                case 'xs':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);\n                    break;\n            }\n            // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n            switch (alias) {\n                case 'xl':\n                    this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'lg':\n                    this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['gt-sm', 'gt-xs']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['gt-xs']);\n                    break;\n            }\n        }\n        // Activate last since the responsiveActivation is watching *this* mediaQuery\n        return this._activateByQuery(mediaQuery);\n    }\n    /**\n     *\n     */\n    _activateByAlias(aliases) {\n        const activate = (alias) => {\n            const bp = this._breakpoints.findByAlias(alias);\n            this._activateByQuery(bp?.mediaQuery ?? alias);\n        };\n        aliases.forEach(activate);\n    }\n    /**\n     *\n     */\n    _activateByQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this._registerMediaQuery(mediaQuery);\n        }\n        const mql = this.registry.get(mediaQuery);\n        if (mql && !this.isActive(mediaQuery)) {\n            this.registry.set(mediaQuery, mql.activate());\n        }\n        return this.hasActivated;\n    }\n    /** Deactivate all current MQLs and reset the buffer */\n    _deactivateAll() {\n        this.registry.forEach((it) => {\n            it.deactivate();\n        });\n        return this;\n    }\n    /** Insure the mediaQuery is registered with MatchMedia */\n    _registerMediaQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this.registerQuery(mediaQuery);\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    buildMQL(query) {\n        return new MockMediaQueryList(query);\n    }\n    get hasActivated() {\n        return this.activations.length > 0;\n    }\n}\nMockMatchMedia.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MockMatchMedia, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: DOCUMENT }, { token: BreakPointRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nMockMatchMedia.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MockMatchMedia });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MockMatchMedia, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: BreakPointRegistry }]; } });\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nclass MockMediaQueryList {\n    constructor(_mediaQuery) {\n        this._mediaQuery = _mediaQuery;\n        this._isActive = false;\n        this._listeners = [];\n        this.onchange = null;\n    }\n    get matches() {\n        return this._isActive;\n    }\n    get media() {\n        return this._mediaQuery;\n    }\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     */\n    destroy() {\n        this.deactivate();\n        this._listeners = [];\n    }\n    /** Notify all listeners that 'matches === TRUE' */\n    activate() {\n        if (!this._isActive) {\n            this._isActive = true;\n            this._listeners.forEach((callback) => {\n                const cb = callback;\n                cb.call(this, { matches: this.matches, media: this.media });\n            });\n        }\n        return this;\n    }\n    /** Notify all listeners that 'matches === false' */\n    deactivate() {\n        if (this._isActive) {\n            this._isActive = false;\n            this._listeners.forEach((callback) => {\n                const cb = callback;\n                cb.call(this, { matches: this.matches, media: this.media });\n            });\n        }\n        return this;\n    }\n    /** Add a listener to our internal list to activate later */\n    addListener(listener) {\n        if (this._listeners.indexOf(listener) === -1) {\n            this._listeners.push(listener);\n        }\n        if (this._isActive) {\n            const cb = listener;\n            cb.call(this, { matches: this.matches, media: this.media });\n        }\n    }\n    /** Don't need to remove listeners in the testing environment */\n    removeListener(_) {\n    }\n    addEventListener(_, __, ___) {\n    }\n    removeEventListener(_, __, ___) {\n    }\n    dispatchEvent(_) {\n        return false;\n    }\n}\n/**\n * Pre-configured provider for MockMatchMedia\n */\nconst MockMatchMediaProvider = {\n    provide: MatchMedia,\n    useClass: MockMatchMedia\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Wraps the provided value in an array, unless the provided value is an array. */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\nclass MediaObserver {\n    constructor(breakpoints, matchMedia, hook) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.hook = hook;\n        /** Filter MediaChange notifications for overlapping breakpoints */\n        this.filterOverlaps = false;\n        this.destroyed$ = new Subject();\n        this._media$ = this.watchActivations();\n    }\n    /**\n     * Completes the active subject, signalling to all complete for all\n     * MediaObserver subscribers\n     */\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    // ************************************************\n    // Public Methods\n    // ************************************************\n    /**\n     * Observe changes to current activation 'list'\n     */\n    asObservable() {\n        return this._media$;\n    }\n    /**\n     * Allow programmatic query to determine if one or more media query/alias match\n     * the current viewport size.\n     * @param value One or more media queries (or aliases) to check.\n     * @returns Whether any of the media queries match.\n     */\n    isActive(value) {\n        const aliases = splitQueries(coerceArray(value));\n        return aliases.some(alias => {\n            const query = toMediaQuery(alias, this.breakpoints);\n            return query !== null && this.matchMedia.isActive(query);\n        });\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Register all the mediaQueries registered in the BreakPointRegistry\n     * This is needed so subscribers can be auto-notified of all standard, registered\n     * mediaQuery activations\n     */\n    watchActivations() {\n        const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n        return this.buildObservable(queries);\n    }\n    /**\n     * Only pass/announce activations (not de-activations)\n     *\n     * Since multiple-mediaQueries can be activation in a cycle,\n     * gather all current activations into a single list of changes to observers\n     *\n     * Inject associated (if any) alias information into the MediaChange event\n     * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     * - Exclude print activations that do not have an associated mediaQuery\n     *\n     * NOTE: the raw MediaChange events [from MatchMedia] do not\n     *       contain important alias information; as such this info\n     *       must be injected into the MediaChange\n     */\n    buildObservable(mqList) {\n        const hasChanges = (changes) => {\n            const isValidQuery = (change) => (change.mediaQuery.length > 0);\n            return (changes.filter(isValidQuery).length > 0);\n        };\n        const excludeOverlaps = (changes) => {\n            return !this.filterOverlaps ? changes : changes.filter(change => {\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return bp?.overlapping ?? true;\n            });\n        };\n        const ignoreDuplicates = (previous, current) => {\n            if (previous.length !== current.length) {\n                return false;\n            }\n            const previousMqs = previous.map(mc => mc.mediaQuery);\n            const currentMqs = new Set(current.map(mc => mc.mediaQuery));\n            const difference = new Set(previousMqs.filter(mq => !currentMqs.has(mq)));\n            return difference.size === 0;\n        };\n        /**\n         */\n        return this.matchMedia\n            .observe(this.hook.withPrintQuery(mqList))\n            .pipe(filter((change) => change.matches), debounceTime(0, asapScheduler), switchMap(_ => of(this.findAllActivations())), map(excludeOverlaps), filter(hasChanges), distinctUntilChanged(ignoreDuplicates), takeUntil(this.destroyed$));\n    }\n    /**\n     * Find all current activations and prepare single list of activations\n     * sorted by descending priority.\n     */\n    findAllActivations() {\n        const mergeMQAlias = (change) => {\n            const bp = this.breakpoints.findByQuery(change.mediaQuery);\n            return mergeAlias(change, bp);\n        };\n        const replaceWithPrintAlias = (change) => this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n        return this.matchMedia\n            .activations\n            .map(query => new MediaChange(true, query))\n            .map(replaceWithPrintAlias)\n            .map(mergeMQAlias)\n            .sort(sortDescendingPriority);\n    }\n}\nMediaObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaObserver, deps: [{ token: BreakPointRegistry }, { token: MatchMedia }, { token: PrintHook }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: PrintHook }]; } });\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query, locator) {\n    const bp = locator.findByAlias(query) ?? locator.findByQuery(query);\n    return bp?.mediaQuery ?? null;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.flatMap(query => query.split(','))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class\n */\nclass MediaTrigger {\n    constructor(breakpoints, matchMedia, layoutConfig, _platformId, _document) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.layoutConfig = layoutConfig;\n        this._platformId = _platformId;\n        this._document = _document;\n        this.hasCachedRegistryMatches = false;\n        this.originalActivations = [];\n        this.originalRegistry = new Map();\n    }\n    /**\n     * Manually activate range of breakpoints\n     * @param list array of mediaQuery or alias strings\n     */\n    activate(list) {\n        list = list.map(it => it.trim()); // trim queries\n        this.saveActivations();\n        this.deactivateAll();\n        this.setActivations(list);\n        this.prepareAutoRestore();\n    }\n    /**\n     * Restore original, 'real' breakpoints and emit events\n     * to trigger stream notification\n     */\n    restore() {\n        if (this.hasCachedRegistryMatches) {\n            const extractQuery = (change) => change.mediaQuery;\n            const list = this.originalActivations.map(extractQuery);\n            try {\n                this.deactivateAll();\n                this.restoreRegistryMatches();\n                this.setActivations(list);\n            }\n            finally {\n                this.originalActivations = [];\n                if (this.resizeSubscription) {\n                    this.resizeSubscription.unsubscribe();\n                }\n            }\n        }\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Whenever window resizes, immediately auto-restore original\n     * activations (if we are simulating activations)\n     */\n    prepareAutoRestore() {\n        const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n        const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n        if (enableAutoRestore) {\n            const resize$ = fromEvent(window, 'resize').pipe(take(1));\n            this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n        }\n    }\n    /**\n     * Notify all matchMedia subscribers of de-activations\n     *\n     * Note: we must force 'matches' updates for\n     *       future matchMedia::activation lookups\n     */\n    deactivateAll() {\n        const list = this.currentActivations;\n        this.forceRegistryMatches(list, false);\n        this.simulateMediaChanges(list, false);\n    }\n    /**\n     * Cache current activations as sorted, prioritized list of MediaChanges\n     */\n    saveActivations() {\n        if (!this.hasCachedRegistryMatches) {\n            const toMediaChange = (query) => new MediaChange(true, query);\n            const mergeMQAlias = (change) => {\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return mergeAlias(change, bp);\n            };\n            this.originalActivations = this.currentActivations\n                .map(toMediaChange)\n                .map(mergeMQAlias)\n                .sort(sortDescendingPriority);\n            this.cacheRegistryMatches();\n        }\n    }\n    /**\n     * Force set manual activations for specified mediaQuery list\n     */\n    setActivations(list) {\n        if (!!this.originalRegistry) {\n            this.forceRegistryMatches(list, true);\n        }\n        this.simulateMediaChanges(list);\n    }\n    /**\n     * For specified mediaQuery list manually simulate activations or deactivations\n     */\n    simulateMediaChanges(queries, matches = true) {\n        const toMediaQuery = (query) => {\n            const locator = this.breakpoints;\n            const bp = locator.findByAlias(query) || locator.findByQuery(query);\n            return bp ? bp.mediaQuery : query;\n        };\n        const emitChangeEvent = (query) => this.emitChangeEvent(matches, query);\n        queries.map(toMediaQuery).forEach(emitChangeEvent);\n    }\n    /**\n     * Replace current registry with simulated registry...\n     * Note: this is required since MediaQueryList::matches is 'readOnly'\n     */\n    forceRegistryMatches(queries, matches) {\n        const registry = new Map();\n        queries.forEach(query => {\n            registry.set(query, { matches });\n        });\n        this.matchMedia.registry = registry;\n    }\n    /**\n     * Save current MatchMedia::registry items.\n     */\n    cacheRegistryMatches() {\n        const target = this.originalRegistry;\n        target.clear();\n        this.matchMedia.registry.forEach((value, key) => {\n            target.set(key, value);\n        });\n        this.hasCachedRegistryMatches = true;\n    }\n    /**\n     * Restore original, 'true' registry\n     */\n    restoreRegistryMatches() {\n        const target = this.matchMedia.registry;\n        target.clear();\n        this.originalRegistry.forEach((value, key) => {\n            target.set(key, value);\n        });\n        this.originalRegistry.clear();\n        this.hasCachedRegistryMatches = false;\n    }\n    /**\n     * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n     */\n    emitChangeEvent(matches, query) {\n        this.matchMedia.source.next(new MediaChange(matches, query));\n    }\n    get currentActivations() {\n        return this.matchMedia.activations;\n    }\n}\nMediaTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaTrigger, deps: [{ token: BreakPointRegistry }, { token: MatchMedia }, { token: LAYOUT_CONFIG }, { token: PLATFORM_ID }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaTrigger.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaTrigger, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MediaTrigger, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* The flex API permits 3 or 1 parts of the value:\n*    - `flex-grow flex-shrink flex-basis`, or\n*    - `flex-basis`\n*/\nfunction validateBasis(basis, grow = '1', shrink = '1') {\n    let parts = [grow, shrink, basis];\n    let j = basis.indexOf('calc');\n    if (j > 0) {\n        parts[2] = _validateCalcValue(basis.substring(j).trim());\n        let matches = basis.substr(0, j).trim().split(' ');\n        if (matches.length == 2) {\n            parts[0] = matches[0];\n            parts[1] = matches[1];\n        }\n    }\n    else if (j == 0) {\n        parts[2] = _validateCalcValue(basis.trim());\n    }\n    else {\n        let matches = basis.split(' ');\n        parts = (matches.length === 3) ? matches : [\n            grow, shrink, basis\n        ];\n    }\n    return parts;\n}\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc) {\n    return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n\nconst MULTIPLIER_SUFFIX = 'x';\nfunction multiply(value, multiplier) {\n    if (multiplier === undefined) {\n        return value;\n    }\n    const transformValue = (possibleValue) => {\n        const numberValue = +(possibleValue.slice(0, -MULTIPLIER_SUFFIX.length));\n        if (value.endsWith(MULTIPLIER_SUFFIX) && !isNaN(numberValue)) {\n            return `${numberValue * multiplier.value}${multiplier.unit}`;\n        }\n        return value;\n    };\n    return value.includes(' ') ?\n        value.split(' ').map(transformValue).join(' ') : transformValue(value);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BREAKPOINT, BREAKPOINTS, BREAKPOINT_PRINT, BROWSER_PROVIDER, BaseDirective2, BreakPointRegistry, CLASS_NAME, CoreModule, DEFAULT_BREAKPOINTS, DEFAULT_CONFIG, LAYOUT_CONFIG, MediaChange, MediaMarshaller, MediaObserver, MediaTrigger, ORIENTATION_BREAKPOINTS, PrintHook, SERVER_TOKEN, ScreenTypes, StyleBuilder, StyleUtils, StylesheetMap, coerceArray, mergeAlias, removeStyles, sortAscendingPriority, sortDescendingPriority, validateBasis, MatchMedia as ɵMatchMedia, MockMatchMedia as ɵMockMatchMedia, MockMatchMediaProvider as ɵMockMatchMediaProvider, multiply as ɵmultiply };\n","import * as i0 from '@angular/core';\nimport { Injectable, PLATFORM_ID, Directive, Inject, Input, Optional, Self, SecurityContext, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, SERVER_TOKEN, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ImgSrcStyleBuilder extends StyleBuilder {\n    buildStyles(url) {\n        return { 'content': url ? `url(${url})` : '' };\n    }\n}\nImgSrcStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nImgSrcStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ImgSrcDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'img-src';\n        this.defaultSrc = '';\n        this.styleCache = imgSrcCache;\n        this.init();\n        this.setValue(this.nativeElement.getAttribute('src') || '', '');\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.nativeElement.setAttribute('src', '');\n        }\n    }\n    set src(val) {\n        this.defaultSrc = val;\n        this.setValue(this.defaultSrc, '');\n    }\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     */\n    updateWithValue(value) {\n        const url = value || this.defaultSrc;\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.addStyles(url);\n        }\n        else {\n            this.nativeElement.setAttribute('src', url);\n        }\n    }\n}\nImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcDirective, deps: [{ token: i0.ElementRef }, { token: ImgSrcStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: ImgSrcDirective, inputs: { src: \"src\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ImgSrcStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; }, propDecorators: { src: [{\n                type: Input,\n                args: ['src']\n            }] } });\nconst imgSrcCache = new Map();\nconst inputs$3 = [\n    'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n    'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n    'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\nconst selector$3 = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\nclass DefaultImgSrcDirective extends ImgSrcDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultImgSrcDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultImgSrcDirective, selector: \"\\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\\n\", inputs: { \"src.xs\": \"src.xs\", \"src.sm\": \"src.sm\", \"src.md\": \"src.md\", \"src.lg\": \"src.lg\", \"src.xl\": \"src.xl\", \"src.lt-sm\": \"src.lt-sm\", \"src.lt-md\": \"src.lt-md\", \"src.lt-lg\": \"src.lt-lg\", \"src.lt-xl\": \"src.lt-xl\", \"src.gt-xs\": \"src.gt-xs\", \"src.gt-sm\": \"src.gt-sm\", \"src.gt-md\": \"src.gt-md\", \"src.gt-lg\": \"src.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultImgSrcDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClassDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n        super(elementRef, null, styler, marshal);\n        this.ngClassInstance = ngClassInstance;\n        this.DIRECTIVE_KEY = 'ngClass';\n        if (!this.ngClassInstance) {\n            // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n            // the same host element; since the responsive variations may be defined...\n            this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n        }\n        this.init();\n        this.setValue('', '');\n    }\n    /**\n     * Capture class assignments so we cache the default classes\n     * which are merged with activated styles and used as fallbacks.\n     */\n    set klass(val) {\n        this.ngClassInstance.klass = val;\n        this.setValue(val, '');\n    }\n    updateWithValue(value) {\n        this.ngClassInstance.ngClass = value;\n        this.ngClassInstance.ngDoCheck();\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     */\n    ngDoCheck() {\n        this.ngClassInstance.ngDoCheck();\n    }\n}\nClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ClassDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i0.IterableDiffers }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgClass, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: ClassDirective, inputs: { klass: [\"class\", \"klass\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ClassDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i0.IterableDiffers }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgClass, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; }, propDecorators: { klass: [{\n                type: Input,\n                args: ['class']\n            }] } });\nconst inputs$2 = [\n    'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n    'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n    'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\nconst selector$2 = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\nclass DefaultClassDirective extends ClassDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultClassDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultClassDirective, selector: \"\\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\\n\", inputs: { ngClass: \"ngClass\", \"ngClass.xs\": \"ngClass.xs\", \"ngClass.sm\": \"ngClass.sm\", \"ngClass.md\": \"ngClass.md\", \"ngClass.lg\": \"ngClass.lg\", \"ngClass.xl\": \"ngClass.xl\", \"ngClass.lt-sm\": \"ngClass.lt-sm\", \"ngClass.lt-md\": \"ngClass.lt-md\", \"ngClass.lt-lg\": \"ngClass.lt-lg\", \"ngClass.lt-xl\": \"ngClass.lt-xl\", \"ngClass.gt-xs\": \"ngClass.gt-xs\", \"ngClass.gt-sm\": \"ngClass.gt-sm\", \"ngClass.gt-md\": \"ngClass.gt-md\", \"ngClass.gt-lg\": \"ngClass.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultClassDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ShowHideStyleBuilder extends StyleBuilder {\n    buildStyles(show, parent) {\n        const shouldShow = show === 'true';\n        return { 'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none' };\n    }\n}\nShowHideStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nShowHideStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ShowHideDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.layoutConfig = layoutConfig;\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'show-hide';\n        /** Original DOM Element CSS display style */\n        this.display = '';\n        this.hasLayout = false;\n        this.hasFlexChild = false;\n    }\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    ngAfterViewInit() {\n        this.trackExtraTriggers();\n        const children = Array.from(this.nativeElement.children);\n        for (let i = 0; i < children.length; i++) {\n            if (this.marshal.hasValue(children[i], 'flex')) {\n                this.hasFlexChild = true;\n                break;\n            }\n        }\n        if (DISPLAY_MAP.has(this.nativeElement)) {\n            this.display = DISPLAY_MAP.get(this.nativeElement);\n        }\n        else {\n            this.display = this.getDisplayStyle();\n            DISPLAY_MAP.set(this.nativeElement, this.display);\n        }\n        this.init();\n        // set the default to show unless explicitly overridden\n        const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n        if (defaultValue === undefined || defaultValue === '') {\n            this.setValue(true, '');\n        }\n        else {\n            this.triggerUpdate();\n        }\n    }\n    /**\n     * On changes to any @Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach(key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                const inputKey = key.split('.');\n                const bp = inputKey.slice(1).join('.');\n                const inputValue = changes[key].currentValue;\n                let shouldShow = inputValue !== '' ?\n                    inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n                    : true;\n                if (inputKey[0] === 'fxHide') {\n                    shouldShow = !shouldShow;\n                }\n                this.setValue(shouldShow, bp);\n            }\n        });\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *  Watch for these extra triggers to update fxShow, fxHide stylings\n     */\n    trackExtraTriggers() {\n        this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n        ['layout', 'layout-align'].forEach(key => {\n            this.marshal\n                .trackValue(this.nativeElement, key)\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerUpdate.bind(this));\n        });\n    }\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     */\n    getDisplayStyle() {\n        return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n            'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n    }\n    /** Validate the visibility value and then update the host's inline display style */\n    updateWithValue(value = true) {\n        if (value === '') {\n            return;\n        }\n        const isServer = isPlatformServer(this.platformId);\n        this.addStyles(value ? 'true' : 'false', { display: this.display, isServer });\n        if (isServer && this.serverModuleLoaded) {\n            this.nativeElement.style.setProperty('display', '');\n        }\n        this.marshal.triggerUpdate(this.parentElement, 'layout-gap');\n    }\n}\nShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideDirective, deps: [{ token: i0.ElementRef }, { token: ShowHideStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: LAYOUT_CONFIG }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: ShowHideDirective, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ShowHideStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; } });\nconst DISPLAY_MAP = new WeakMap();\nconst inputs$1 = [\n    'fxShow', 'fxShow.print',\n    'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n    'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n    'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n    'fxHide', 'fxHide.print',\n    'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n    'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n    'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\nconst selector$1 = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n/**\n * 'show' Layout API directive\n */\nclass DefaultShowHideDirective extends ShowHideDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultShowHideDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultShowHideDirective, selector: \"\\n  [fxShow], [fxShow.print],\\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\\n  [fxHide], [fxHide.print],\\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\\n\", inputs: { fxShow: \"fxShow\", \"fxShow.print\": \"fxShow.print\", \"fxShow.xs\": \"fxShow.xs\", \"fxShow.sm\": \"fxShow.sm\", \"fxShow.md\": \"fxShow.md\", \"fxShow.lg\": \"fxShow.lg\", \"fxShow.xl\": \"fxShow.xl\", \"fxShow.lt-sm\": \"fxShow.lt-sm\", \"fxShow.lt-md\": \"fxShow.lt-md\", \"fxShow.lt-lg\": \"fxShow.lt-lg\", \"fxShow.lt-xl\": \"fxShow.lt-xl\", \"fxShow.gt-xs\": \"fxShow.gt-xs\", \"fxShow.gt-sm\": \"fxShow.gt-sm\", \"fxShow.gt-md\": \"fxShow.gt-md\", \"fxShow.gt-lg\": \"fxShow.gt-lg\", fxHide: \"fxHide\", \"fxHide.print\": \"fxHide.print\", \"fxHide.xs\": \"fxHide.xs\", \"fxHide.sm\": \"fxHide.sm\", \"fxHide.md\": \"fxHide.md\", \"fxHide.lg\": \"fxHide.lg\", \"fxHide.xl\": \"fxHide.xl\", \"fxHide.lt-sm\": \"fxHide.lt-sm\", \"fxHide.lt-md\": \"fxHide.lt-md\", \"fxHide.lt-lg\": \"fxHide.lt-lg\", \"fxHide.lt-xl\": \"fxHide.lt-xl\", \"fxHide.gt-xs\": \"fxHide.gt-xs\", \"fxHide.gt-sm\": \"fxHide.gt-sm\", \"fxHide.gt-md\": \"fxHide.gt-md\", \"fxHide.gt-lg\": \"fxHide.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultShowHideDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** NgStyle allowed inputs */\nclass NgStyleKeyValue {\n    constructor(key, value, noQuotes = true) {\n        this.key = key;\n        this.value = value;\n        this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n        this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n        this.value = this.value.replace(/;/, '');\n    }\n}\nfunction getType(target) {\n    let what = typeof target;\n    if (what === 'object') {\n        return (target.constructor === Array) ? 'array' :\n            (target.constructor === Set) ? 'set' : 'object';\n    }\n    return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source, delimiter = ';') {\n    return String(source)\n        .trim()\n        .split(delimiter)\n        .map((val) => val.trim())\n        .filter(val => val !== '');\n}\n/** Convert array of key:value strings to a iterable map object */\nfunction buildMapFromList$1(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nfunction buildMapFromSet(source, sanitize) {\n    let list = [];\n    if (getType(source) === 'set') {\n        source.forEach(entry => list.push(entry));\n    }\n    else {\n        Object.keys(source).forEach((key) => {\n            list.push(`${key}:${source[key]}`);\n        });\n    }\n    return buildMapFromList$1(list, sanitize);\n}\n/** Convert 'key:value' -> [key, value] */\nfunction stringToKeyValue(it) {\n    const [key, ...vals] = it.split(':');\n    return new NgStyleKeyValue(key, vals.join(':'));\n}\n/** Convert [ [key,value] ] -> { key : value } */\nfunction keyValuesToMap(map, entry) {\n    if (!!entry.key) {\n        map[entry.key] = entry.value;\n    }\n    return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n        super(elementRef, null, styler, marshal);\n        this.sanitizer = sanitizer;\n        this.ngStyleInstance = ngStyleInstance;\n        this.DIRECTIVE_KEY = 'ngStyle';\n        if (!this.ngStyleInstance) {\n            // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n            // defined on the same host element; since the responsive variations may be defined...\n            this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n        }\n        this.init();\n        const styles = this.nativeElement.getAttribute('style') ?? '';\n        this.fallbackStyles = this.buildStyleMap(styles);\n        this.isServer = serverLoaded && isPlatformServer(platformId);\n    }\n    /** Add generated styles */\n    updateWithValue(value) {\n        const styles = this.buildStyleMap(value);\n        this.ngStyleInstance.ngStyle = { ...this.fallbackStyles, ...styles };\n        if (this.isServer) {\n            this.applyStyleToElement(styles);\n        }\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /** Remove generated styles */\n    clearStyles() {\n        this.ngStyleInstance.ngStyle = this.fallbackStyles;\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     */\n    buildStyleMap(styles) {\n        // Always safe-guard (aka sanitize) style property values\n        const sanitizer = (val) => this.sanitizer.sanitize(SecurityContext.STYLE, val) ?? '';\n        if (styles) {\n            switch (getType(styles)) {\n                case 'string': return buildMapFromList(buildRawList(styles), sanitizer);\n                case 'array': return buildMapFromList(styles, sanitizer);\n                case 'set': return buildMapFromSet(styles, sanitizer);\n                default: return buildMapFromSet(styles, sanitizer);\n            }\n        }\n        return {};\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n    ngDoCheck() {\n        this.ngStyleInstance.ngDoCheck();\n    }\n}\nStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StyleDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i2$1.DomSanitizer }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgStyle, optional: true, self: true }, { token: SERVER_TOKEN }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Directive });\nStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: StyleDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StyleDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i2$1.DomSanitizer }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgStyle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\nconst inputs = [\n    'ngStyle',\n    'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n    'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n    'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\nclass DefaultStyleDirective extends StyleDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultStyleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultStyleDirective, selector: \"\\n  [ngStyle],\\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\\n\", inputs: { ngStyle: \"ngStyle\", \"ngStyle.xs\": \"ngStyle.xs\", \"ngStyle.sm\": \"ngStyle.sm\", \"ngStyle.md\": \"ngStyle.md\", \"ngStyle.lg\": \"ngStyle.lg\", \"ngStyle.xl\": \"ngStyle.xl\", \"ngStyle.lt-sm\": \"ngStyle.lt-sm\", \"ngStyle.lt-md\": \"ngStyle.lt-md\", \"ngStyle.lt-lg\": \"ngStyle.lt-lg\", \"ngStyle.lt-xl\": \"ngStyle.lt-xl\", \"ngStyle.gt-xs\": \"ngStyle.gt-xs\", \"ngStyle.gt-sm\": \"ngStyle.gt-sm\", \"ngStyle.gt-md\": \"ngStyle.gt-md\", \"ngStyle.gt-lg\": \"ngStyle.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultStyleDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultShowHideDirective,\n    DefaultClassDirective,\n    DefaultStyleDirective,\n    DefaultImgSrcDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\nclass ExtendedModule {\n}\nExtendedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ExtendedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nExtendedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: ExtendedModule, declarations: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective], imports: [CoreModule], exports: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective] });\nExtendedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ExtendedModule, imports: [CoreModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ExtendedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClassDirective, DefaultClassDirective, DefaultImgSrcDirective, DefaultShowHideDirective, DefaultStyleDirective, ExtendedModule, ImgSrcDirective, ImgSrcStyleBuilder, ShowHideDirective, ShowHideStyleBuilder, StyleDirective };\n","import * as i0 from '@angular/core';\nimport { Injectable, Directive, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, LAYOUT_CONFIG, ɵmultiply, validateBasis, CoreModule } from '@angular/flex-layout/core';\nimport { buildLayoutCSS, LAYOUT_VALUES, isFlowHorizontal, extendObject } from '@angular/flex-layout/_private-utils';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutStyleBuilder extends StyleBuilder {\n    buildStyles(input, { display }) {\n        const css = buildLayoutCSS(input);\n        return {\n            ...css,\n            display: display === 'none' ? display : css.display,\n        };\n    }\n}\nLayoutStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nLayoutStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs$6 = [\n    'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n    'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n    'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n    'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector$6 = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nclass LayoutDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal, _config) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this._config = _config;\n        this.DIRECTIVE_KEY = 'layout';\n        this.init();\n    }\n    updateWithValue(input) {\n        const detectLayoutDisplay = this._config.detectLayoutDisplay;\n        const display = detectLayoutDisplay ? this.styler.lookupStyle(this.nativeElement, 'display') : '';\n        this.styleCache = cacheMap.get(display) ?? new Map();\n        cacheMap.set(display, this.styleCache);\n        if (this.currentValue !== input) {\n            this.addStyles(input, { display });\n            this.currentValue = input;\n        }\n    }\n}\nLayoutDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: LayoutStyleBuilder }, { token: i1.MediaMarshaller }, { token: LAYOUT_CONFIG }], target: i0.ɵɵFactoryTarget.Directive });\nLayoutDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: LayoutDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: LayoutStyleBuilder }, { type: i1.MediaMarshaller }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }]; } });\nclass DefaultLayoutDirective extends LayoutDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$6;\n    }\n}\nDefaultLayoutDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultLayoutDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultLayoutDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultLayoutDirective, selector: \"\\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\\n  [fxLayout.gt-md], [fxLayout.gt-lg]\\n\", inputs: { fxLayout: \"fxLayout\", \"fxLayout.xs\": \"fxLayout.xs\", \"fxLayout.sm\": \"fxLayout.sm\", \"fxLayout.md\": \"fxLayout.md\", \"fxLayout.lg\": \"fxLayout.lg\", \"fxLayout.xl\": \"fxLayout.xl\", \"fxLayout.lt-sm\": \"fxLayout.lt-sm\", \"fxLayout.lt-md\": \"fxLayout.lt-md\", \"fxLayout.lt-lg\": \"fxLayout.lt-lg\", \"fxLayout.lt-xl\": \"fxLayout.lt-xl\", \"fxLayout.gt-xs\": \"fxLayout.gt-xs\", \"fxLayout.gt-sm\": \"fxLayout.gt-sm\", \"fxLayout.gt-md\": \"fxLayout.gt-md\", \"fxLayout.gt-lg\": \"fxLayout.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultLayoutDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$6, inputs: inputs$6 }]\n        }] });\nconst cacheMap = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CLEAR_MARGIN_CSS = {\n    'margin-left': null,\n    'margin-right': null,\n    'margin-top': null,\n    'margin-bottom': null\n};\nclass LayoutGapStyleBuilder extends StyleBuilder {\n    constructor(_styler, _config) {\n        super();\n        this._styler = _styler;\n        this._config = _config;\n    }\n    buildStyles(gapValue, parent) {\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n            gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n            gapValue = ɵmultiply(gapValue, this._config.multiplier);\n            // Add the margin to the host element\n            return buildGridMargin(gapValue, parent.directionality);\n        }\n        else {\n            return {};\n        }\n    }\n    sideEffect(gapValue, _styles, parent) {\n        const items = parent.items;\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n            gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n            gapValue = ɵmultiply(gapValue, this._config.multiplier);\n            // For each `element` children, set the padding\n            const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n            this._styler.applyStyleToElements(paddingStyles, parent.items);\n        }\n        else {\n            gapValue = ɵmultiply(gapValue, this._config.multiplier);\n            gapValue = this.addFallbackUnit(gapValue);\n            const lastItem = items.pop();\n            // For each `element` children EXCEPT the last,\n            // set the margin right/bottom styles...\n            const gapCss = buildGapCSS(gapValue, parent);\n            this._styler.applyStyleToElements(gapCss, items);\n            // Clear all gaps for all visible elements\n            this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n        }\n    }\n    addFallbackUnit(value) {\n        return !isNaN(+value) ? `${value}${this._config.defaultUnit}` : value;\n    }\n}\nLayoutGapStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutGapStyleBuilder, deps: [{ token: i1.StyleUtils }, { token: LAYOUT_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\nLayoutGapStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutGapStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutGapStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.StyleUtils }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }]; } });\nconst inputs$5 = [\n    'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n    'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n    'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n    'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector$5 = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nclass LayoutGapDirective extends BaseDirective2 {\n    constructor(elRef, zone, directionality, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.zone = zone;\n        this.directionality = directionality;\n        this.styleUtils = styleUtils;\n        this.layout = 'row'; // default flex-direction\n        this.DIRECTIVE_KEY = 'layout-gap';\n        this.observerSubject = new Subject();\n        const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n        this.init(extraTriggers);\n        this.marshal\n            .trackValue(this.nativeElement, 'layout')\n            .pipe(takeUntil(this.destroySubject))\n            .subscribe(this.onLayoutChange.bind(this));\n    }\n    /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n    get childrenNodes() {\n        const obj = this.nativeElement.children;\n        const buffer = [];\n        // iterate backwards ensuring that length is an UInt32\n        for (let i = obj.length; i--;) {\n            buffer[i] = obj[i];\n        }\n        return buffer;\n    }\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    ngAfterContentInit() {\n        this.buildChildObservable();\n        this.triggerUpdate();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * Cache the parent container 'flex-direction' and update the 'margin' styles\n     */\n    onLayoutChange(matcher) {\n        const layout = matcher.value;\n        // Make sure to filter out 'wrap' option\n        const direction = layout.split(' ');\n        this.layout = direction[0];\n        if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n            this.layout = 'row';\n        }\n        this.triggerUpdate();\n    }\n    /**\n     *\n     */\n    updateWithValue(value) {\n        // Gather all non-hidden Element nodes\n        const items = this.childrenNodes\n            .filter(el => el.nodeType === 1 && this.willDisplay(el))\n            .sort((a, b) => {\n            const orderA = +this.styler.lookupStyle(a, 'order');\n            const orderB = +this.styler.lookupStyle(b, 'order');\n            if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n                return 0;\n            }\n            else {\n                return orderA > orderB ? 1 : -1;\n            }\n        });\n        if (items.length > 0) {\n            const directionality = this.directionality.value;\n            const layout = this.layout;\n            if (layout === 'row' && directionality === 'rtl') {\n                this.styleCache = layoutGapCacheRowRtl;\n            }\n            else if (layout === 'row' && directionality !== 'rtl') {\n                this.styleCache = layoutGapCacheRowLtr;\n            }\n            else if (layout === 'column' && directionality === 'rtl') {\n                this.styleCache = layoutGapCacheColumnRtl;\n            }\n            else if (layout === 'column' && directionality !== 'rtl') {\n                this.styleCache = layoutGapCacheColumnLtr;\n            }\n            this.addStyles(value, { directionality, items, layout });\n        }\n    }\n    /** We need to override clearStyles because in most cases mru isn't populated */\n    clearStyles() {\n        const gridMode = Object.keys(this.mru).length > 0;\n        const childrenStyle = gridMode ? 'padding' :\n            getMarginType(this.directionality.value, this.layout);\n        // If there are styles on the parent remove them\n        if (gridMode) {\n            super.clearStyles();\n        }\n        // Then remove the children styles too\n        this.styleUtils.applyStyleToElements({ [childrenStyle]: '' }, this.childrenNodes);\n    }\n    /** Determine if an element will show or hide based on current activation */\n    willDisplay(source) {\n        const value = this.marshal.getValue(source, 'show-hide');\n        return value === true ||\n            (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n    }\n    buildChildObservable() {\n        this.zone.runOutsideAngular(() => {\n            if (typeof MutationObserver !== 'undefined') {\n                this.observer = new MutationObserver((mutations) => {\n                    const validatedChanges = (it) => {\n                        return (it.addedNodes && it.addedNodes.length > 0) ||\n                            (it.removedNodes && it.removedNodes.length > 0);\n                    };\n                    // update gap styles only for child 'added' or 'removed' events\n                    if (mutations.some(validatedChanges)) {\n                        this.observerSubject.next();\n                    }\n                });\n                this.observer.observe(this.nativeElement, { childList: true });\n            }\n        });\n    }\n}\nLayoutGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutGapDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i2.Directionality }, { token: i1.StyleUtils }, { token: LayoutGapStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nLayoutGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: LayoutGapDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutGapDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i2.Directionality }, { type: i1.StyleUtils }, { type: LayoutGapStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nclass DefaultLayoutGapDirective extends LayoutGapDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$5;\n    }\n}\nDefaultLayoutGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultLayoutGapDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultLayoutGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultLayoutGapDirective, selector: \"\\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\\n\", inputs: { fxLayoutGap: \"fxLayoutGap\", \"fxLayoutGap.xs\": \"fxLayoutGap.xs\", \"fxLayoutGap.sm\": \"fxLayoutGap.sm\", \"fxLayoutGap.md\": \"fxLayoutGap.md\", \"fxLayoutGap.lg\": \"fxLayoutGap.lg\", \"fxLayoutGap.xl\": \"fxLayoutGap.xl\", \"fxLayoutGap.lt-sm\": \"fxLayoutGap.lt-sm\", \"fxLayoutGap.lt-md\": \"fxLayoutGap.lt-md\", \"fxLayoutGap.lt-lg\": \"fxLayoutGap.lt-lg\", \"fxLayoutGap.lt-xl\": \"fxLayoutGap.lt-xl\", \"fxLayoutGap.gt-xs\": \"fxLayoutGap.gt-xs\", \"fxLayoutGap.gt-sm\": \"fxLayoutGap.gt-sm\", \"fxLayoutGap.gt-md\": \"fxLayoutGap.gt-md\", \"fxLayoutGap.gt-lg\": \"fxLayoutGap.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultLayoutGapDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$5, inputs: inputs$5 }]\n        }] });\nconst layoutGapCacheRowRtl = new Map();\nconst layoutGapCacheColumnRtl = new Map();\nconst layoutGapCacheRowLtr = new Map();\nconst layoutGapCacheColumnLtr = new Map();\nconst GRID_SPECIFIER = ' grid';\nfunction buildGridPadding(value, directionality) {\n    const [between, below] = value.split(' ');\n    const bottom = below ?? between;\n    let paddingRight = '0px', paddingBottom = bottom, paddingLeft = '0px';\n    if (directionality === 'rtl') {\n        paddingLeft = between;\n    }\n    else {\n        paddingRight = between;\n    }\n    return { 'padding': `0px ${paddingRight} ${paddingBottom} ${paddingLeft}` };\n}\nfunction buildGridMargin(value, directionality) {\n    const [between, below] = value.split(' ');\n    const bottom = below ?? between;\n    const minus = (str) => `-${str}`;\n    let marginRight = '0px', marginBottom = minus(bottom), marginLeft = '0px';\n    if (directionality === 'rtl') {\n        marginLeft = minus(between);\n    }\n    else {\n        marginRight = minus(between);\n    }\n    return { 'margin': `0px ${marginRight} ${marginBottom} ${marginLeft}` };\n}\nfunction getMarginType(directionality, layout) {\n    switch (layout) {\n        case 'column':\n            return 'margin-bottom';\n        case 'column-reverse':\n            return 'margin-top';\n        case 'row':\n            return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n        case 'row-reverse':\n            return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n        default:\n            return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    }\n}\nfunction buildGapCSS(gapValue, parent) {\n    const key = getMarginType(parent.directionality, parent.layout);\n    const margins = { ...CLEAR_MARGIN_CSS };\n    margins[key] = gapValue;\n    return margins;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FlexStyleBuilder extends StyleBuilder {\n    constructor(layoutConfig) {\n        super();\n        this.layoutConfig = layoutConfig;\n    }\n    buildStyles(input, parent) {\n        let [grow, shrink, ...basisParts] = input.split(' ');\n        let basis = basisParts.join(' ');\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n        const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n        const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n        const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n        const hasCalc = String(basis).indexOf('calc') > -1;\n        const usingCalc = hasCalc || (basis === 'auto');\n        const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n        const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n            String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n            String(basis).indexOf('vh') > -1;\n        let isValue = (hasCalc || hasUnits);\n        grow = (grow == '0') ? 0 : grow;\n        shrink = (shrink == '0') ? 0 : shrink;\n        // make box inflexible when shrink and grow are both zero\n        // should not set a min when the grow is zero\n        // should not set a max when the shrink is zero\n        const isFixed = !grow && !shrink;\n        let css = {};\n        // flex-basis allows you to specify the initial/starting main-axis size of the element,\n        // before anything else is computed. It can either be a percentage or an absolute value.\n        // It is, however, not the breaking point for flex-grow/shrink properties\n        //\n        // flex-grow can be seen as this:\n        //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n        //   1: (Default value). Stretch; will be the same size to all other flex items on\n        //       the same row since they have a default value of 1.\n        //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n        //      with 'flex-grow: 1' on the same row.\n        // Use `null` to clear existing styles.\n        const clearStyles = {\n            'max-width': null,\n            'max-height': null,\n            'min-width': null,\n            'min-height': null\n        };\n        switch (basis || '') {\n            case '':\n                const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n                basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n                break;\n            case 'initial': // default\n            case 'nogrow':\n                grow = 0;\n                basis = 'auto';\n                break;\n            case 'grow':\n                basis = '100%';\n                break;\n            case 'noshrink':\n                shrink = 0;\n                basis = 'auto';\n                break;\n            case 'auto':\n                break;\n            case 'none':\n                grow = 0;\n                shrink = 0;\n                basis = 'auto';\n                break;\n            default:\n                // Defaults to percentage sizing unless `px` is explicitly set\n                if (!isValue && !isPercent && !isNaN(basis)) {\n                    basis = basis + '%';\n                }\n                // Fix for issue 280\n                if (basis === '0%') {\n                    isValue = true;\n                }\n                if (basis === '0px') {\n                    basis = '0%';\n                }\n                // fix issue #5345\n                if (hasCalc) {\n                    css = extendObject(clearStyles, {\n                        'flex-grow': grow,\n                        'flex-shrink': shrink,\n                        'flex-basis': isValue ? basis : '100%'\n                    });\n                }\n                else {\n                    css = extendObject(clearStyles, {\n                        'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n                    });\n                }\n                break;\n        }\n        if (!(css['flex'] || css['flex-grow'])) {\n            if (hasCalc) {\n                css = extendObject(clearStyles, {\n                    'flex-grow': grow,\n                    'flex-shrink': shrink,\n                    'flex-basis': basis\n                });\n            }\n            else {\n                css = extendObject(clearStyles, {\n                    'flex': `${grow} ${shrink} ${basis}`\n                });\n            }\n        }\n        // Fix for issues 277, 534, and 728\n        if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n            css[min] = isFixed || (isValue && grow) ? basis : null;\n            css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n        }\n        // Fix for issue 528\n        if (!css[min] && !css[max]) {\n            if (hasCalc) {\n                css = extendObject(clearStyles, {\n                    'flex-grow': grow,\n                    'flex-shrink': shrink,\n                    'flex-basis': basis\n                });\n            }\n            else {\n                css = extendObject(clearStyles, {\n                    'flex': `${grow} ${shrink} ${basis}`\n                });\n            }\n        }\n        else {\n            // Fix for issue 660\n            if (parent.hasWrap) {\n                css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n                    (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n                    (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n            }\n        }\n        return extendObject(css, { 'box-sizing': 'border-box' });\n    }\n}\nFlexStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexStyleBuilder, deps: [{ token: LAYOUT_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\nFlexStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }]; } });\nconst inputs$4 = [\n    'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n    'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n    'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n    'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector$4 = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nclass FlexDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, layoutConfig, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.layoutConfig = layoutConfig;\n        this.marshal = marshal;\n        this.DIRECTIVE_KEY = 'flex';\n        this.direction = undefined;\n        this.wrap = undefined;\n        this.flexGrow = '1';\n        this.flexShrink = '1';\n        this.init();\n    }\n    get shrink() { return this.flexShrink; }\n    set shrink(value) {\n        this.flexShrink = value || '1';\n        this.triggerReflow();\n    }\n    get grow() { return this.flexGrow; }\n    set grow(value) {\n        this.flexGrow = value || '1';\n        this.triggerReflow();\n    }\n    ngOnInit() {\n        if (this.parentElement) {\n            this.marshal.trackValue(this.parentElement, 'layout')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.onLayoutChange.bind(this));\n            this.marshal.trackValue(this.nativeElement, 'layout-align')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerReflow.bind(this));\n        }\n    }\n    /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     */\n    onLayoutChange(matcher) {\n        const layout = matcher.value;\n        const layoutParts = layout.split(' ');\n        this.direction = layoutParts[0];\n        this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n        this.triggerUpdate();\n    }\n    /** Input to this is exclusively the basis input value */\n    updateWithValue(value) {\n        const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n        if (this.direction === undefined) {\n            this.direction = this.getFlexFlowDirection(this.parentElement, addFlexToParent);\n        }\n        if (this.wrap === undefined) {\n            this.wrap = this.hasWrap(this.parentElement);\n        }\n        const direction = this.direction;\n        const isHorizontal = direction.startsWith('row');\n        const hasWrap = this.wrap;\n        if (isHorizontal && hasWrap) {\n            this.styleCache = flexRowWrapCache;\n        }\n        else if (isHorizontal && !hasWrap) {\n            this.styleCache = flexRowCache;\n        }\n        else if (!isHorizontal && hasWrap) {\n            this.styleCache = flexColumnWrapCache;\n        }\n        else if (!isHorizontal && !hasWrap) {\n            this.styleCache = flexColumnCache;\n        }\n        const basis = String(value).replace(';', '');\n        const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n        this.addStyles(parts.join(' '), { direction, hasWrap });\n    }\n    /** Trigger a style reflow, usually based on a shrink/grow input event */\n    triggerReflow() {\n        const activatedValue = this.activatedValue;\n        if (activatedValue !== undefined) {\n            const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n            this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n        }\n    }\n}\nFlexDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: LAYOUT_CONFIG }, { token: FlexStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nFlexDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: FlexDirective, inputs: { shrink: [\"fxShrink\", \"shrink\"], grow: [\"fxGrow\", \"grow\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: FlexStyleBuilder }, { type: i1.MediaMarshaller }]; }, propDecorators: { shrink: [{\n                type: Input,\n                args: ['fxShrink']\n            }], grow: [{\n                type: Input,\n                args: ['fxGrow']\n            }] } });\nclass DefaultFlexDirective extends FlexDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$4;\n    }\n}\nDefaultFlexDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultFlexDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultFlexDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultFlexDirective, selector: \"\\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\\n  [fxFlex.gt-md], [fxFlex.gt-lg]\\n\", inputs: { fxFlex: \"fxFlex\", \"fxFlex.xs\": \"fxFlex.xs\", \"fxFlex.sm\": \"fxFlex.sm\", \"fxFlex.md\": \"fxFlex.md\", \"fxFlex.lg\": \"fxFlex.lg\", \"fxFlex.xl\": \"fxFlex.xl\", \"fxFlex.lt-sm\": \"fxFlex.lt-sm\", \"fxFlex.lt-md\": \"fxFlex.lt-md\", \"fxFlex.lt-lg\": \"fxFlex.lt-lg\", \"fxFlex.lt-xl\": \"fxFlex.lt-xl\", \"fxFlex.gt-xs\": \"fxFlex.gt-xs\", \"fxFlex.gt-sm\": \"fxFlex.gt-sm\", \"fxFlex.gt-md\": \"fxFlex.gt-md\", \"fxFlex.gt-lg\": \"fxFlex.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultFlexDirective, decorators: [{\n            type: Directive,\n            args: [{ inputs: inputs$4, selector: selector$4 }]\n        }] });\nconst flexRowCache = new Map();\nconst flexColumnCache = new Map();\nconst flexRowWrapCache = new Map();\nconst flexColumnWrapCache = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FlexOrderStyleBuilder extends StyleBuilder {\n    buildStyles(value) {\n        return { order: (value && parseInt(value, 10)) || '' };\n    }\n}\nFlexOrderStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOrderStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nFlexOrderStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOrderStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOrderStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs$3 = [\n    'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n    'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n    'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n    'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector$3 = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nclass FlexOrderDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'flex-order';\n        this.styleCache = flexOrderCache;\n        this.init();\n    }\n}\nFlexOrderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOrderDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: FlexOrderStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nFlexOrderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: FlexOrderDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOrderDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: FlexOrderStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst flexOrderCache = new Map();\nclass DefaultFlexOrderDirective extends FlexOrderDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultFlexOrderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultFlexOrderDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultFlexOrderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultFlexOrderDirective, selector: \"\\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\\n\", inputs: { fxFlexOrder: \"fxFlexOrder\", \"fxFlexOrder.xs\": \"fxFlexOrder.xs\", \"fxFlexOrder.sm\": \"fxFlexOrder.sm\", \"fxFlexOrder.md\": \"fxFlexOrder.md\", \"fxFlexOrder.lg\": \"fxFlexOrder.lg\", \"fxFlexOrder.xl\": \"fxFlexOrder.xl\", \"fxFlexOrder.lt-sm\": \"fxFlexOrder.lt-sm\", \"fxFlexOrder.lt-md\": \"fxFlexOrder.lt-md\", \"fxFlexOrder.lt-lg\": \"fxFlexOrder.lt-lg\", \"fxFlexOrder.lt-xl\": \"fxFlexOrder.lt-xl\", \"fxFlexOrder.gt-xs\": \"fxFlexOrder.gt-xs\", \"fxFlexOrder.gt-sm\": \"fxFlexOrder.gt-sm\", \"fxFlexOrder.gt-md\": \"fxFlexOrder.gt-md\", \"fxFlexOrder.gt-lg\": \"fxFlexOrder.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultFlexOrderDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FlexOffsetStyleBuilder extends StyleBuilder {\n    constructor(_config) {\n        super();\n        this._config = _config;\n    }\n    buildStyles(offset, parent) {\n        offset || (offset = '0');\n        offset = ɵmultiply(offset, this._config.multiplier);\n        const isPercent = String(offset).indexOf('%') > -1;\n        const isPx = String(offset).indexOf('px') > -1;\n        if (!isPx && !isPercent && !isNaN(+offset)) {\n            offset = `${offset}%`;\n        }\n        const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n        const styles = isFlowHorizontal(parent.layout) ?\n            { [horizontalLayoutKey]: offset } : { 'margin-top': offset };\n        return styles;\n    }\n}\nFlexOffsetStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOffsetStyleBuilder, deps: [{ token: LAYOUT_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\nFlexOffsetStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOffsetStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOffsetStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }]; } });\nconst inputs$2 = [\n    'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n    'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n    'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n    'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector$2 = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nclass FlexOffsetDirective extends BaseDirective2 {\n    constructor(elRef, directionality, styleBuilder, marshal, styler) {\n        super(elRef, styleBuilder, styler, marshal);\n        this.directionality = directionality;\n        this.DIRECTIVE_KEY = 'flex-offset';\n        this.init([this.directionality.change]);\n        // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n        if (this.parentElement) {\n            this.marshal\n                .trackValue(this.parentElement, 'layout-gap')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerUpdate.bind(this));\n        }\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     */\n    updateWithValue(value = '') {\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n        const layout = this.getFlexFlowDirection(this.parentElement, true);\n        const isRtl = this.directionality.value === 'rtl';\n        if (layout === 'row' && isRtl) {\n            this.styleCache = flexOffsetCacheRowRtl;\n        }\n        else if (layout === 'row' && !isRtl) {\n            this.styleCache = flexOffsetCacheRowLtr;\n        }\n        else if (layout === 'column' && isRtl) {\n            this.styleCache = flexOffsetCacheColumnRtl;\n        }\n        else if (layout === 'column' && !isRtl) {\n            this.styleCache = flexOffsetCacheColumnLtr;\n        }\n        this.addStyles(value + '', { layout, isRtl });\n    }\n}\nFlexOffsetDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOffsetDirective, deps: [{ token: i0.ElementRef }, { token: i2.Directionality }, { token: FlexOffsetStyleBuilder }, { token: i1.MediaMarshaller }, { token: i1.StyleUtils }], target: i0.ɵɵFactoryTarget.Directive });\nFlexOffsetDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: FlexOffsetDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexOffsetDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i2.Directionality }, { type: FlexOffsetStyleBuilder }, { type: i1.MediaMarshaller }, { type: i1.StyleUtils }]; } });\nclass DefaultFlexOffsetDirective extends FlexOffsetDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultFlexOffsetDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultFlexOffsetDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultFlexOffsetDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultFlexOffsetDirective, selector: \"\\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\\n\", inputs: { fxFlexOffset: \"fxFlexOffset\", \"fxFlexOffset.xs\": \"fxFlexOffset.xs\", \"fxFlexOffset.sm\": \"fxFlexOffset.sm\", \"fxFlexOffset.md\": \"fxFlexOffset.md\", \"fxFlexOffset.lg\": \"fxFlexOffset.lg\", \"fxFlexOffset.xl\": \"fxFlexOffset.xl\", \"fxFlexOffset.lt-sm\": \"fxFlexOffset.lt-sm\", \"fxFlexOffset.lt-md\": \"fxFlexOffset.lt-md\", \"fxFlexOffset.lt-lg\": \"fxFlexOffset.lt-lg\", \"fxFlexOffset.lt-xl\": \"fxFlexOffset.lt-xl\", \"fxFlexOffset.gt-xs\": \"fxFlexOffset.gt-xs\", \"fxFlexOffset.gt-sm\": \"fxFlexOffset.gt-sm\", \"fxFlexOffset.gt-md\": \"fxFlexOffset.gt-md\", \"fxFlexOffset.gt-lg\": \"fxFlexOffset.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultFlexOffsetDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\nconst flexOffsetCacheRowRtl = new Map();\nconst flexOffsetCacheColumnRtl = new Map();\nconst flexOffsetCacheRowLtr = new Map();\nconst flexOffsetCacheColumnLtr = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FlexAlignStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        input = input || 'stretch';\n        const styles = {};\n        // Cross-axis\n        switch (input) {\n            case 'start':\n                styles['align-self'] = 'flex-start';\n                break;\n            case 'end':\n                styles['align-self'] = 'flex-end';\n                break;\n            default:\n                styles['align-self'] = input;\n                break;\n        }\n        return styles;\n    }\n}\nFlexAlignStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexAlignStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nFlexAlignStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexAlignStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexAlignStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs$1 = [\n    'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n    'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n    'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n    'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector$1 = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nclass FlexAlignDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'flex-align';\n        this.styleCache = flexAlignCache;\n        this.init();\n    }\n}\nFlexAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexAlignDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: FlexAlignStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nFlexAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: FlexAlignDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexAlignDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: FlexAlignStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst flexAlignCache = new Map();\nclass DefaultFlexAlignDirective extends FlexAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultFlexAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultFlexAlignDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultFlexAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultFlexAlignDirective, selector: \"\\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\\n\", inputs: { fxFlexAlign: \"fxFlexAlign\", \"fxFlexAlign.xs\": \"fxFlexAlign.xs\", \"fxFlexAlign.sm\": \"fxFlexAlign.sm\", \"fxFlexAlign.md\": \"fxFlexAlign.md\", \"fxFlexAlign.lg\": \"fxFlexAlign.lg\", \"fxFlexAlign.xl\": \"fxFlexAlign.xl\", \"fxFlexAlign.lt-sm\": \"fxFlexAlign.lt-sm\", \"fxFlexAlign.lt-md\": \"fxFlexAlign.lt-md\", \"fxFlexAlign.lt-lg\": \"fxFlexAlign.lt-lg\", \"fxFlexAlign.lt-xl\": \"fxFlexAlign.lt-xl\", \"fxFlexAlign.gt-xs\": \"fxFlexAlign.gt-xs\", \"fxFlexAlign.gt-sm\": \"fxFlexAlign.gt-sm\", \"fxFlexAlign.gt-md\": \"fxFlexAlign.gt-md\", \"fxFlexAlign.gt-lg\": \"fxFlexAlign.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultFlexAlignDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst FLEX_FILL_CSS = {\n    'margin': 0,\n    'width': '100%',\n    'height': '100%',\n    'min-width': '100%',\n    'min-height': '100%'\n};\nclass FlexFillStyleBuilder extends StyleBuilder {\n    buildStyles(_input) {\n        return FLEX_FILL_CSS;\n    }\n}\nFlexFillStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexFillStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nFlexFillStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexFillStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexFillStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\nclass FlexFillDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.styleCache = flexFillCache;\n        this.addStyles('');\n    }\n}\nFlexFillDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexFillDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: FlexFillStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nFlexFillDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: FlexFillDirective, selector: \"[fxFill], [fxFlexFill]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexFillDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: `[fxFill], [fxFlexFill]` }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: FlexFillStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst flexFillCache = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutAlignStyleBuilder extends StyleBuilder {\n    buildStyles(align, parent) {\n        const css = {}, [mainAxis, crossAxis] = align.split(' ');\n        // Main axis\n        switch (mainAxis) {\n            case 'center':\n                css['justify-content'] = 'center';\n                break;\n            case 'space-around':\n                css['justify-content'] = 'space-around';\n                break;\n            case 'space-between':\n                css['justify-content'] = 'space-between';\n                break;\n            case 'space-evenly':\n                css['justify-content'] = 'space-evenly';\n                break;\n            case 'end':\n            case 'flex-end':\n                css['justify-content'] = 'flex-end';\n                break;\n            case 'start':\n            case 'flex-start':\n            default:\n                css['justify-content'] = 'flex-start'; // default main axis\n                break;\n        }\n        // Cross-axis\n        switch (crossAxis) {\n            case 'start':\n            case 'flex-start':\n                css['align-items'] = css['align-content'] = 'flex-start';\n                break;\n            case 'center':\n                css['align-items'] = css['align-content'] = 'center';\n                break;\n            case 'end':\n            case 'flex-end':\n                css['align-items'] = css['align-content'] = 'flex-end';\n                break;\n            case 'space-between':\n                css['align-content'] = 'space-between';\n                css['align-items'] = 'stretch';\n                break;\n            case 'space-around':\n                css['align-content'] = 'space-around';\n                css['align-items'] = 'stretch';\n                break;\n            case 'baseline':\n                css['align-content'] = 'stretch';\n                css['align-items'] = 'baseline';\n                break;\n            case 'stretch':\n            default: // 'stretch'\n                css['align-items'] = css['align-content'] = 'stretch'; // default cross axis\n                break;\n        }\n        return extendObject(css, {\n            'display': parent.inline ? 'inline-flex' : 'flex',\n            'flex-direction': parent.layout,\n            'box-sizing': 'border-box',\n            'max-width': crossAxis === 'stretch' ?\n                !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n            'max-height': crossAxis === 'stretch' ?\n                isFlowHorizontal(parent.layout) ? '100%' : null : null,\n        });\n    }\n}\nLayoutAlignStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutAlignStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nLayoutAlignStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutAlignStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutAlignStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs = [\n    'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n    'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n    'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n    'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nclass LayoutAlignDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'layout-align';\n        this.layout = 'row'; // default flex-direction\n        this.inline = false; // default inline value\n        this.init();\n        this.marshal.trackValue(this.nativeElement, 'layout')\n            .pipe(takeUntil(this.destroySubject))\n            .subscribe(this.onLayoutChange.bind(this));\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *\n     */\n    updateWithValue(value) {\n        const layout = this.layout || 'row';\n        const inline = this.inline;\n        if (layout === 'row' && inline) {\n            this.styleCache = layoutAlignHorizontalInlineCache;\n        }\n        else if (layout === 'row' && !inline) {\n            this.styleCache = layoutAlignHorizontalCache;\n        }\n        else if (layout === 'row-reverse' && inline) {\n            this.styleCache = layoutAlignHorizontalRevInlineCache;\n        }\n        else if (layout === 'row-reverse' && !inline) {\n            this.styleCache = layoutAlignHorizontalRevCache;\n        }\n        else if (layout === 'column' && inline) {\n            this.styleCache = layoutAlignVerticalInlineCache;\n        }\n        else if (layout === 'column' && !inline) {\n            this.styleCache = layoutAlignVerticalCache;\n        }\n        else if (layout === 'column-reverse' && inline) {\n            this.styleCache = layoutAlignVerticalRevInlineCache;\n        }\n        else if (layout === 'column-reverse' && !inline) {\n            this.styleCache = layoutAlignVerticalRevCache;\n        }\n        this.addStyles(value, { layout, inline });\n    }\n    /**\n     * Cache the parent container 'flex-direction' and update the 'flex' styles\n     */\n    onLayoutChange(matcher) {\n        const layoutKeys = matcher.value.split(' ');\n        this.layout = layoutKeys[0];\n        this.inline = matcher.value.includes('inline');\n        if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n            this.layout = 'row';\n        }\n        this.triggerUpdate();\n    }\n}\nLayoutAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutAlignDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: LayoutAlignStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nLayoutAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: LayoutAlignDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: LayoutAlignDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: LayoutAlignStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nclass DefaultLayoutAlignDirective extends LayoutAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultLayoutAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultLayoutAlignDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultLayoutAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultLayoutAlignDirective, selector: \"\\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\\n\", inputs: { fxLayoutAlign: \"fxLayoutAlign\", \"fxLayoutAlign.xs\": \"fxLayoutAlign.xs\", \"fxLayoutAlign.sm\": \"fxLayoutAlign.sm\", \"fxLayoutAlign.md\": \"fxLayoutAlign.md\", \"fxLayoutAlign.lg\": \"fxLayoutAlign.lg\", \"fxLayoutAlign.xl\": \"fxLayoutAlign.xl\", \"fxLayoutAlign.lt-sm\": \"fxLayoutAlign.lt-sm\", \"fxLayoutAlign.lt-md\": \"fxLayoutAlign.lt-md\", \"fxLayoutAlign.lt-lg\": \"fxLayoutAlign.lt-lg\", \"fxLayoutAlign.lt-xl\": \"fxLayoutAlign.lt-xl\", \"fxLayoutAlign.gt-xs\": \"fxLayoutAlign.gt-xs\", \"fxLayoutAlign.gt-sm\": \"fxLayoutAlign.gt-sm\", \"fxLayoutAlign.gt-md\": \"fxLayoutAlign.gt-md\", \"fxLayoutAlign.gt-lg\": \"fxLayoutAlign.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultLayoutAlignDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\nconst layoutAlignHorizontalCache = new Map();\nconst layoutAlignVerticalCache = new Map();\nconst layoutAlignHorizontalRevCache = new Map();\nconst layoutAlignVerticalRevCache = new Map();\nconst layoutAlignHorizontalInlineCache = new Map();\nconst layoutAlignVerticalInlineCache = new Map();\nconst layoutAlignHorizontalRevInlineCache = new Map();\nconst layoutAlignVerticalRevInlineCache = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultLayoutDirective,\n    DefaultLayoutGapDirective,\n    DefaultLayoutAlignDirective,\n    DefaultFlexOrderDirective,\n    DefaultFlexOffsetDirective,\n    FlexFillDirective,\n    DefaultFlexAlignDirective,\n    DefaultFlexDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\nclass FlexModule {\n}\nFlexModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFlexModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexModule, declarations: [DefaultLayoutDirective,\n        DefaultLayoutGapDirective,\n        DefaultLayoutAlignDirective,\n        DefaultFlexOrderDirective,\n        DefaultFlexOffsetDirective,\n        FlexFillDirective,\n        DefaultFlexAlignDirective,\n        DefaultFlexDirective], imports: [CoreModule, BidiModule], exports: [DefaultLayoutDirective,\n        DefaultLayoutGapDirective,\n        DefaultLayoutAlignDirective,\n        DefaultFlexOrderDirective,\n        DefaultFlexOffsetDirective,\n        FlexFillDirective,\n        DefaultFlexAlignDirective,\n        DefaultFlexDirective] });\nFlexModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexModule, imports: [CoreModule, BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule, BidiModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultFlexAlignDirective, DefaultFlexDirective, DefaultFlexOffsetDirective, DefaultFlexOrderDirective, DefaultLayoutAlignDirective, DefaultLayoutDirective, DefaultLayoutGapDirective, FlexAlignDirective, FlexAlignStyleBuilder, FlexDirective, FlexFillDirective, FlexFillStyleBuilder, FlexModule, FlexOffsetDirective, FlexOffsetStyleBuilder, FlexOrderDirective, FlexOrderStyleBuilder, FlexStyleBuilder, LayoutAlignDirective, LayoutAlignStyleBuilder, LayoutDirective, LayoutGapDirective, LayoutGapStyleBuilder, LayoutStyleBuilder };\n","import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, CoreModule } from '@angular/flex-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\nclass GridAlignStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return buildCss$2(input || ROW_DEFAULT);\n    }\n}\nGridAlignStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align';\n        this.styleCache = alignCache;\n        this.init();\n    }\n}\nGridAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridAlignDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst alignCache = new Map();\nconst inputs$a = [\n    'gdGridAlign',\n    'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n    'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n    'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\nconst selector$a = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\nclass DefaultGridAlignDirective extends GridAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$a;\n    }\n}\nDefaultGridAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAlignDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridAlignDirective, selector: \"\\n  [gdGridAlign],\\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\\n\", inputs: { gdGridAlign: \"gdGridAlign\", \"gdGridAlign.xs\": \"gdGridAlign.xs\", \"gdGridAlign.sm\": \"gdGridAlign.sm\", \"gdGridAlign.md\": \"gdGridAlign.md\", \"gdGridAlign.lg\": \"gdGridAlign.lg\", \"gdGridAlign.xl\": \"gdGridAlign.xl\", \"gdGridAlign.lt-sm\": \"gdGridAlign.lt-sm\", \"gdGridAlign.lt-md\": \"gdGridAlign.lt-md\", \"gdGridAlign.lt-lg\": \"gdGridAlign.lt-lg\", \"gdGridAlign.lt-xl\": \"gdGridAlign.lt-xl\", \"gdGridAlign.gt-xs\": \"gdGridAlign.gt-xs\", \"gdGridAlign.gt-sm\": \"gdGridAlign.gt-sm\", \"gdGridAlign.gt-md\": \"gdGridAlign.gt-md\", \"gdGridAlign.gt-lg\": \"gdGridAlign.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAlignDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$a, inputs: inputs$a }]\n        }] });\nfunction buildCss$2(align = '') {\n    const css = {}, [rowAxis, columnAxis] = align.split(' ');\n    // Row axis\n    switch (rowAxis) {\n        case 'end':\n            css['justify-self'] = 'end';\n            break;\n        case 'center':\n            css['justify-self'] = 'center';\n            break;\n        case 'stretch':\n            css['justify-self'] = 'stretch';\n            break;\n        case 'start':\n            css['justify-self'] = 'start';\n            break;\n        default:\n            css['justify-self'] = ROW_DEFAULT; // default row axis\n            break;\n    }\n    // Column axis\n    switch (columnAxis) {\n        case 'end':\n            css['align-self'] = 'end';\n            break;\n        case 'center':\n            css['align-self'] = 'center';\n            break;\n        case 'stretch':\n            css['align-self'] = 'stretch';\n            break;\n        case 'start':\n            css['align-self'] = 'start';\n            break;\n        default:\n            css['align-self'] = COL_DEFAULT; // default column axis\n            break;\n    }\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN$1 = 'start';\nconst DEFAULT_CROSS$1 = 'stretch';\nclass GridAlignColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return buildCss$1(input || `${DEFAULT_MAIN$1} ${DEFAULT_CROSS$1}`, parent.inline);\n    }\n}\nGridAlignColumnsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignColumnsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignColumnsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignColumnsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignColumnsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignColumnsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align-columns';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAlignColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignColumnsDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignColumnsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridAlignColumnsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignColumnsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignColumnsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst alignColumnsCache = new Map();\nconst alignColumnsInlineCache = new Map();\nconst inputs$9 = [\n    'gdAlignColumns',\n    'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n    'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n    'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n    'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n    'gdAlignColumns.gt-lg'\n];\nconst selector$9 = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\nclass DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$9;\n    }\n}\nDefaultGridAlignColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAlignColumnsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridAlignColumnsDirective, selector: \"\\n  [gdAlignColumns],\\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\\n  [gdAlignColumns.gt-lg]\\n\", inputs: { gdAlignColumns: \"gdAlignColumns\", \"gdAlignColumns.xs\": \"gdAlignColumns.xs\", \"gdAlignColumns.sm\": \"gdAlignColumns.sm\", \"gdAlignColumns.md\": \"gdAlignColumns.md\", \"gdAlignColumns.lg\": \"gdAlignColumns.lg\", \"gdAlignColumns.xl\": \"gdAlignColumns.xl\", \"gdAlignColumns.lt-sm\": \"gdAlignColumns.lt-sm\", \"gdAlignColumns.lt-md\": \"gdAlignColumns.lt-md\", \"gdAlignColumns.lt-lg\": \"gdAlignColumns.lt-lg\", \"gdAlignColumns.lt-xl\": \"gdAlignColumns.lt-xl\", \"gdAlignColumns.gt-xs\": \"gdAlignColumns.gt-xs\", \"gdAlignColumns.gt-sm\": \"gdAlignColumns.gt-sm\", \"gdAlignColumns.gt-md\": \"gdAlignColumns.gt-md\", \"gdAlignColumns.gt-lg\": \"gdAlignColumns.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAlignColumnsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$9, inputs: inputs$9 }]\n        }] });\nfunction buildCss$1(align, inline) {\n    const css = {}, [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n            css['align-content'] = 'center';\n            break;\n        case 'space-around':\n            css['align-content'] = 'space-around';\n            break;\n        case 'space-between':\n            css['align-content'] = 'space-between';\n            break;\n        case 'space-evenly':\n            css['align-content'] = 'space-evenly';\n            break;\n        case 'end':\n            css['align-content'] = 'end';\n            break;\n        case 'start':\n            css['align-content'] = 'start';\n            break;\n        case 'stretch':\n            css['align-content'] = 'stretch';\n            break;\n        default:\n            css['align-content'] = DEFAULT_MAIN$1; // default main axis\n            break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n            css['align-items'] = 'start';\n            break;\n        case 'center':\n            css['align-items'] = 'center';\n            break;\n        case 'end':\n            css['align-items'] = 'end';\n            break;\n        case 'stretch':\n            css['align-items'] = 'stretch';\n            break;\n        default: // 'stretch'\n            css['align-items'] = DEFAULT_CROSS$1; // default cross axis\n            break;\n    }\n    css['display'] = inline ? 'inline-grid' : 'grid';\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\nclass GridAlignRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n    }\n}\nGridAlignRowsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignRowsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignRowsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignRowsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignRowsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignRowsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align-rows';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAlignRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignRowsDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignRowsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridAlignRowsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAlignRowsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignRowsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst alignRowsCache = new Map();\nconst alignRowsInlineCache = new Map();\nconst inputs$8 = [\n    'gdAlignRows',\n    'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n    'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n    'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n    'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n    'gdAlignRows.gt-lg'\n];\nconst selector$8 = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\nclass DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$8;\n    }\n}\nDefaultGridAlignRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAlignRowsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridAlignRowsDirective, selector: \"\\n  [gdAlignRows],\\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\\n  [gdAlignRows.gt-lg]\\n\", inputs: { gdAlignRows: \"gdAlignRows\", \"gdAlignRows.xs\": \"gdAlignRows.xs\", \"gdAlignRows.sm\": \"gdAlignRows.sm\", \"gdAlignRows.md\": \"gdAlignRows.md\", \"gdAlignRows.lg\": \"gdAlignRows.lg\", \"gdAlignRows.xl\": \"gdAlignRows.xl\", \"gdAlignRows.lt-sm\": \"gdAlignRows.lt-sm\", \"gdAlignRows.lt-md\": \"gdAlignRows.lt-md\", \"gdAlignRows.lt-lg\": \"gdAlignRows.lt-lg\", \"gdAlignRows.lt-xl\": \"gdAlignRows.lt-xl\", \"gdAlignRows.gt-xs\": \"gdAlignRows.gt-xs\", \"gdAlignRows.gt-sm\": \"gdAlignRows.gt-sm\", \"gdAlignRows.gt-md\": \"gdAlignRows.gt-md\", \"gdAlignRows.gt-lg\": \"gdAlignRows.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAlignRowsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$8, inputs: inputs$8 }]\n        }] });\nfunction buildCss(align, inline) {\n    const css = {}, [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n        case 'space-around':\n        case 'space-between':\n        case 'space-evenly':\n        case 'end':\n        case 'start':\n        case 'stretch':\n            css['justify-content'] = mainAxis;\n            break;\n        default:\n            css['justify-content'] = DEFAULT_MAIN; // default main axis\n            break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n        case 'center':\n        case 'end':\n        case 'stretch':\n            css['justify-items'] = crossAxis;\n            break;\n        default: // 'stretch'\n            css['justify-items'] = DEFAULT_CROSS; // default cross axis\n            break;\n    }\n    css['display'] = inline ? 'inline-grid' : 'grid';\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$7 = 'auto';\nclass GridAreaStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-area': input || DEFAULT_VALUE$7 };\n    }\n}\nGridAreaStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreaStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAreaStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreaStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreaStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAreaDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-area';\n        this.styleCache = gridAreaCache;\n        this.init();\n    }\n}\nGridAreaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreaDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridAreaStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAreaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridAreaDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreaDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridAreaStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst gridAreaCache = new Map();\nconst inputs$7 = [\n    'gdArea',\n    'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n    'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n    'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector$7 = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\nclass DefaultGridAreaDirective extends GridAreaDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$7;\n    }\n}\nDefaultGridAreaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAreaDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAreaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridAreaDirective, selector: \"\\n  [gdArea],\\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\\n\", inputs: { gdArea: \"gdArea\", \"gdArea.xs\": \"gdArea.xs\", \"gdArea.sm\": \"gdArea.sm\", \"gdArea.md\": \"gdArea.md\", \"gdArea.lg\": \"gdArea.lg\", \"gdArea.xl\": \"gdArea.xl\", \"gdArea.lt-sm\": \"gdArea.lt-sm\", \"gdArea.lt-md\": \"gdArea.lt-md\", \"gdArea.lt-lg\": \"gdArea.lt-lg\", \"gdArea.lt-xl\": \"gdArea.lt-xl\", \"gdArea.gt-xs\": \"gdArea.gt-xs\", \"gdArea.gt-sm\": \"gdArea.gt-sm\", \"gdArea.gt-md\": \"gdArea.gt-md\", \"gdArea.gt-lg\": \"gdArea.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAreaDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$7, inputs: inputs$7 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$6 = 'none';\nconst DELIMETER = '|';\nclass GridAreasStyleBuiler extends StyleBuilder {\n    buildStyles(input, parent) {\n        const areas = (input || DEFAULT_VALUE$6).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-template-areas': areas.join(' ')\n        };\n    }\n}\nGridAreasStyleBuiler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreasStyleBuiler, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAreasStyleBuiler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreasStyleBuiler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreasStyleBuiler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAreasDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-areas';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? areasInlineCache : areasCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAreasDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreasDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridAreasStyleBuiler }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAreasDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridAreasDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAreasDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridAreasStyleBuiler }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst areasCache = new Map();\nconst areasInlineCache = new Map();\nconst inputs$6 = [\n    'gdAreas',\n    'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n    'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n    'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\nconst selector$6 = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\nclass DefaultGridAreasDirective extends GridAreasDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$6;\n    }\n}\nDefaultGridAreasDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAreasDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAreasDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridAreasDirective, selector: \"\\n  [gdAreas],\\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\\n\", inputs: { gdAreas: \"gdAreas\", \"gdAreas.xs\": \"gdAreas.xs\", \"gdAreas.sm\": \"gdAreas.sm\", \"gdAreas.md\": \"gdAreas.md\", \"gdAreas.lg\": \"gdAreas.lg\", \"gdAreas.xl\": \"gdAreas.xl\", \"gdAreas.lt-sm\": \"gdAreas.lt-sm\", \"gdAreas.lt-md\": \"gdAreas.lt-md\", \"gdAreas.lt-lg\": \"gdAreas.lt-lg\", \"gdAreas.lt-xl\": \"gdAreas.lt-xl\", \"gdAreas.gt-xs\": \"gdAreas.gt-xs\", \"gdAreas.gt-sm\": \"gdAreas.gt-sm\", \"gdAreas.gt-md\": \"gdAreas.gt-md\", \"gdAreas.gt-lg\": \"gdAreas.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAreasDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$6, inputs: inputs$6 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$5 = 'initial';\nclass GridAutoStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        let [direction, dense] = (input || DEFAULT_VALUE$5).split(' ');\n        if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n            direction = 'row';\n        }\n        dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-flow': direction + dense\n        };\n    }\n}\nGridAutoStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAutoStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAutoStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAutoStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAutoStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAutoDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this._inline = false;\n        this.DIRECTIVE_KEY = 'grid-auto';\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? autoInlineCache : autoCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAutoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAutoDirective, deps: [{ token: i0.ElementRef }, { token: GridAutoStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAutoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridAutoDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridAutoDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAutoStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst autoCache = new Map();\nconst autoInlineCache = new Map();\nconst inputs$5 = [\n    'gdAuto',\n    'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n    'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n    'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector$5 = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\nclass DefaultGridAutoDirective extends GridAutoDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$5;\n    }\n}\nDefaultGridAutoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAutoDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAutoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridAutoDirective, selector: \"\\n  [gdAuto],\\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\\n\", inputs: { gdAuto: \"gdAuto\", \"gdAuto.xs\": \"gdAuto.xs\", \"gdAuto.sm\": \"gdAuto.sm\", \"gdAuto.md\": \"gdAuto.md\", \"gdAuto.lg\": \"gdAuto.lg\", \"gdAuto.xl\": \"gdAuto.xl\", \"gdAuto.lt-sm\": \"gdAuto.lt-sm\", \"gdAuto.lt-md\": \"gdAuto.lt-md\", \"gdAuto.lt-lg\": \"gdAuto.lt-lg\", \"gdAuto.lt-xl\": \"gdAuto.lt-xl\", \"gdAuto.gt-xs\": \"gdAuto.gt-xs\", \"gdAuto.gt-sm\": \"gdAuto.gt-sm\", \"gdAuto.gt-md\": \"gdAuto.gt-md\", \"gdAuto.gt-lg\": \"gdAuto.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridAutoDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$5, inputs: inputs$5 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$4 = 'auto';\nclass GridColumnStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-column': input || DEFAULT_VALUE$4 };\n    }\n}\nGridColumnStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridColumnStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridColumnDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-column';\n        this.styleCache = columnCache;\n        this.init();\n    }\n}\nGridColumnDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnDirective, deps: [{ token: i0.ElementRef }, { token: GridColumnStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridColumnDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridColumnDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridColumnStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst columnCache = new Map();\nconst inputs$4 = [\n    'gdColumn',\n    'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n    'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n    'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\nconst selector$4 = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridColumnDirective extends GridColumnDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$4;\n    }\n}\nDefaultGridColumnDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridColumnDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridColumnDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridColumnDirective, selector: \"\\n  [gdColumn],\\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\\n\", inputs: { gdColumn: \"gdColumn\", \"gdColumn.xs\": \"gdColumn.xs\", \"gdColumn.sm\": \"gdColumn.sm\", \"gdColumn.md\": \"gdColumn.md\", \"gdColumn.lg\": \"gdColumn.lg\", \"gdColumn.xl\": \"gdColumn.xl\", \"gdColumn.lt-sm\": \"gdColumn.lt-sm\", \"gdColumn.lt-md\": \"gdColumn.lt-md\", \"gdColumn.lt-lg\": \"gdColumn.lt-lg\", \"gdColumn.lt-xl\": \"gdColumn.lt-xl\", \"gdColumn.gt-xs\": \"gdColumn.gt-xs\", \"gdColumn.gt-sm\": \"gdColumn.gt-sm\", \"gdColumn.gt-md\": \"gdColumn.gt-md\", \"gdColumn.gt-lg\": \"gdColumn.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridColumnDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$4, inputs: inputs$4 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$3 = 'none';\nconst AUTO_SPECIFIER$1 = '!';\nclass GridColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        input = input || DEFAULT_VALUE$3;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER$1)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER$1));\n            auto = true;\n        }\n        const css = {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-columns': '',\n            'grid-template-columns': '',\n        };\n        const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n        css[key] = input;\n        return css;\n    }\n}\nGridColumnsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridColumnsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridColumnsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-columns';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnsDirective, deps: [{ token: i0.ElementRef }, { token: GridColumnsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridColumnsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridColumnsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridColumnsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst columnsCache = new Map();\nconst columnsInlineCache = new Map();\nconst inputs$3 = [\n    'gdColumns',\n    'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n    'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n    'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\nconst selector$3 = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridColumnsDirective extends GridColumnsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultGridColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridColumnsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridColumnsDirective, selector: \"\\n  [gdColumns],\\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\\n\", inputs: { gdColumns: \"gdColumns\", \"gdColumns.xs\": \"gdColumns.xs\", \"gdColumns.sm\": \"gdColumns.sm\", \"gdColumns.md\": \"gdColumns.md\", \"gdColumns.lg\": \"gdColumns.lg\", \"gdColumns.xl\": \"gdColumns.xl\", \"gdColumns.lt-sm\": \"gdColumns.lt-sm\", \"gdColumns.lt-md\": \"gdColumns.lt-md\", \"gdColumns.lt-lg\": \"gdColumns.lt-lg\", \"gdColumns.lt-xl\": \"gdColumns.lt-xl\", \"gdColumns.gt-xs\": \"gdColumns.gt-xs\", \"gdColumns.gt-sm\": \"gdColumns.gt-sm\", \"gdColumns.gt-md\": \"gdColumns.gt-md\", \"gdColumns.gt-lg\": \"gdColumns.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridColumnsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$2 = '0';\nclass GridGapStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-gap': input || DEFAULT_VALUE$2\n        };\n    }\n}\nGridGapStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridGapStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridGapStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridGapStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridGapStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridGapDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-gap';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? gapInlineCache : gapCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridGapDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridGapStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridGapDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridGapDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridGapStyleBuilder }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst gapCache = new Map();\nconst gapInlineCache = new Map();\nconst inputs$2 = [\n    'gdGap',\n    'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n    'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n    'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\nconst selector$2 = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\nclass DefaultGridGapDirective extends GridGapDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultGridGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridGapDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridGapDirective, selector: \"\\n  [gdGap],\\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\\n\", inputs: { gdGap: \"gdGap\", \"gdGap.xs\": \"gdGap.xs\", \"gdGap.sm\": \"gdGap.sm\", \"gdGap.md\": \"gdGap.md\", \"gdGap.lg\": \"gdGap.lg\", \"gdGap.xl\": \"gdGap.xl\", \"gdGap.lt-sm\": \"gdGap.lt-sm\", \"gdGap.lt-md\": \"gdGap.lt-md\", \"gdGap.lt-lg\": \"gdGap.lt-lg\", \"gdGap.lt-xl\": \"gdGap.lt-xl\", \"gdGap.gt-xs\": \"gdGap.gt-xs\", \"gdGap.gt-sm\": \"gdGap.gt-sm\", \"gdGap.gt-md\": \"gdGap.gt-md\", \"gdGap.gt-lg\": \"gdGap.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridGapDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$1 = 'auto';\nclass GridRowStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-row': input || DEFAULT_VALUE$1 };\n    }\n}\nGridRowStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridRowStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridRowDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-row';\n        this.styleCache = rowCache;\n        this.init();\n    }\n}\nGridRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowDirective, deps: [{ token: i0.ElementRef }, { token: GridRowStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridRowDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridRowStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst rowCache = new Map();\nconst inputs$1 = [\n    'gdRow',\n    'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n    'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n    'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\nconst selector$1 = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridRowDirective extends GridRowDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultGridRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridRowDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridRowDirective, selector: \"\\n  [gdRow],\\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\\n\", inputs: { gdRow: \"gdRow\", \"gdRow.xs\": \"gdRow.xs\", \"gdRow.sm\": \"gdRow.sm\", \"gdRow.md\": \"gdRow.md\", \"gdRow.lg\": \"gdRow.lg\", \"gdRow.xl\": \"gdRow.xl\", \"gdRow.lt-sm\": \"gdRow.lt-sm\", \"gdRow.lt-md\": \"gdRow.lt-md\", \"gdRow.lt-lg\": \"gdRow.lt-lg\", \"gdRow.lt-xl\": \"gdRow.lt-xl\", \"gdRow.gt-xs\": \"gdRow.gt-xs\", \"gdRow.gt-sm\": \"gdRow.gt-sm\", \"gdRow.gt-md\": \"gdRow.gt-md\", \"gdRow.gt-lg\": \"gdRow.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridRowDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\nclass GridRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        input = input || DEFAULT_VALUE;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n            auto = true;\n        }\n        const css = {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-rows': '',\n            'grid-template-rows': '',\n        };\n        const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n        css[key] = input;\n        return css;\n    }\n}\nGridRowsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridRowsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridRowsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-rows';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowsDirective, deps: [{ token: i0.ElementRef }, { token: GridRowsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: GridRowsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridRowsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridRowsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst rowsCache = new Map();\nconst rowsInlineCache = new Map();\nconst inputs = [\n    'gdRows',\n    'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n    'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n    'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridRowsDirective extends GridRowsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultGridRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridRowsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultGridRowsDirective, selector: \"\\n  [gdRows],\\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\\n\", inputs: { gdRows: \"gdRows\", \"gdRows.xs\": \"gdRows.xs\", \"gdRows.sm\": \"gdRows.sm\", \"gdRows.md\": \"gdRows.md\", \"gdRows.lg\": \"gdRows.lg\", \"gdRows.xl\": \"gdRows.xl\", \"gdRows.lt-sm\": \"gdRows.lt-sm\", \"gdRows.lt-md\": \"gdRows.lt-md\", \"gdRows.lt-lg\": \"gdRows.lt-lg\", \"gdRows.lt-xl\": \"gdRows.lt-xl\", \"gdRows.gt-xs\": \"gdRows.gt-xs\", \"gdRows.gt-sm\": \"gdRows.gt-sm\", \"gdRows.gt-md\": \"gdRows.gt-md\", \"gdRows.gt-lg\": \"gdRows.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultGridRowsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultGridAlignDirective,\n    DefaultGridAlignColumnsDirective,\n    DefaultGridAlignRowsDirective,\n    DefaultGridAreaDirective,\n    DefaultGridAreasDirective,\n    DefaultGridAutoDirective,\n    DefaultGridColumnDirective,\n    DefaultGridColumnsDirective,\n    DefaultGridGapDirective,\n    DefaultGridRowDirective,\n    DefaultGridRowsDirective,\n];\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\nclass GridModule {\n}\nGridModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGridModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: GridModule, declarations: [DefaultGridAlignDirective,\n        DefaultGridAlignColumnsDirective,\n        DefaultGridAlignRowsDirective,\n        DefaultGridAreaDirective,\n        DefaultGridAreasDirective,\n        DefaultGridAutoDirective,\n        DefaultGridColumnDirective,\n        DefaultGridColumnsDirective,\n        DefaultGridGapDirective,\n        DefaultGridRowDirective,\n        DefaultGridRowsDirective], imports: [CoreModule], exports: [DefaultGridAlignDirective,\n        DefaultGridAlignColumnsDirective,\n        DefaultGridAlignRowsDirective,\n        DefaultGridAreaDirective,\n        DefaultGridAreasDirective,\n        DefaultGridAutoDirective,\n        DefaultGridColumnDirective,\n        DefaultGridColumnsDirective,\n        DefaultGridGapDirective,\n        DefaultGridRowDirective,\n        DefaultGridRowsDirective] });\nGridModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridModule, imports: [CoreModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: GridModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultGridAlignColumnsDirective, DefaultGridAlignDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective, GridAlignColumnsDirective, GridAlignColumnsStyleBuilder, GridAlignDirective, GridAlignRowsDirective, GridAlignRowsStyleBuilder, GridAlignStyleBuilder, GridAreaDirective, GridAreaStyleBuilder, GridAreasDirective, GridAreasStyleBuiler, GridAutoDirective, GridAutoStyleBuilder, GridColumnDirective, GridColumnStyleBuilder, GridColumnsDirective, GridColumnsStyleBuilder, GridGapDirective, GridGapStyleBuilder, GridModule, GridRowDirective, GridRowStyleBuilder, GridRowsDirective, GridRowsStyleBuilder };\n","import * as i0 from '@angular/core';\nimport { Version, PLATFORM_ID, NgModule, Inject } from '@angular/core';\nimport { LAYOUT_CONFIG, DEFAULT_CONFIG, BREAKPOINT, SERVER_TOKEN } from '@angular/flex-layout/core';\nexport * from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport * from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport * from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport * from '@angular/flex-layout/grid';\nimport { isPlatformServer } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Flex-Layout. */\nconst VERSION = new Version('14.0.0-beta.40');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\nclass FlexLayoutModule {\n    constructor(serverModuleLoaded, platformId) {\n        if (isPlatformServer(platformId) && !serverModuleLoaded) {\n            console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n        }\n    }\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     */\n    static withConfig(configOptions, \n    // tslint:disable-next-line:max-line-length\n    breakpoints = []) {\n        return {\n            ngModule: FlexLayoutModule,\n            providers: configOptions.serverLoaded ?\n                [\n                    { provide: LAYOUT_CONFIG, useValue: { ...DEFAULT_CONFIG, ...configOptions } },\n                    { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n                    { provide: SERVER_TOKEN, useValue: true },\n                ] : [\n                { provide: LAYOUT_CONFIG, useValue: { ...DEFAULT_CONFIG, ...configOptions } },\n                { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n            ]\n        };\n    }\n}\nFlexLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexLayoutModule, deps: [{ token: SERVER_TOKEN }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.NgModule });\nFlexLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexLayoutModule, imports: [FlexModule, ExtendedModule, GridModule], exports: [FlexModule, ExtendedModule, GridModule] });\nFlexLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexLayoutModule, imports: [FlexModule, ExtendedModule, GridModule, FlexModule, ExtendedModule, GridModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FlexLayoutModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [FlexModule, ExtendedModule, GridModule],\n                    exports: [FlexModule, ExtendedModule, GridModule]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FlexLayoutModule, VERSION };\n"],"x_google_ignoreList":[0,1,2,3,4,5]}